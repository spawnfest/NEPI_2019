{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/inherits/inherits_browser.js","webpack:///../node_modules/object-refs/index.js","webpack:///../node_modules/object-refs/lib/collection.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///../node_modules/path-intersection/intersect.js","webpack:///../node_modules/object-refs/lib/refs.js","webpack:///../node_modules/didi/dist/index.esm.js","webpack:///../lib/draw/BaseRenderer.js","webpack:///../node_modules/tiny-svg/dist/index.esm.js","webpack:///../lib/util/RenderUtil.js","webpack:///../node_modules/min-dash/dist/index.esm.js","webpack:///../lib/util/Elements.js","webpack:///../lib/draw/DefaultRenderer.js","webpack:///../lib/draw/index.js","webpack:///../lib/draw/Styles.js","webpack:///../lib/util/Collections.js","webpack:///../lib/core/Canvas.js","webpack:///../lib/core/ElementRegistry.js","webpack:///../lib/model/index.js","webpack:///../lib/core/ElementFactory.js","webpack:///../lib/core/EventBus.js","webpack:///../lib/util/GraphicsUtil.js","webpack:///../lib/util/SvgTransformUtil.js","webpack:///../node_modules/min-dom/dist/index.esm.js","webpack:///../lib/core/GraphicsFactory.js","webpack:///../lib/core/index.js","webpack:///../lib/Diagram.js","webpack:///../lib/util/Event.js","webpack:///../lib/util/Mouse.js","webpack:///../lib/util/Platform.js","webpack:///../lib/features/interaction-events/InteractionEvents.js","webpack:///../lib/features/interaction-events/index.js","webpack:///../lib/features/outline/Outline.js","webpack:///../lib/features/outline/index.js","webpack:///../lib/features/selection/Selection.js","webpack:///../lib/features/selection/SelectionVisuals.js","webpack:///../lib/features/selection/SelectionBehavior.js","webpack:///../lib/features/selection/index.js","webpack:///../lib/features/rules/Rules.js","webpack:///../lib/features/rules/index.js","webpack:///../lib/util/Cursor.js","webpack:///../lib/util/ClickTrap.js","webpack:///../lib/util/PositionUtil.js","webpack:///../lib/features/dragging/Dragging.js","webpack:///../lib/features/dragging/HoverFix.js","webpack:///../lib/features/dragging/index.js","webpack:///../lib/layout/LayoutUtil.js","webpack:///../lib/features/connect/Connect.js","webpack:///../lib/features/connect/ConnectPreview.js","webpack:///../lib/features/connect/index.js","webpack:///../lib/util/IdGenerator.js","webpack:///../lib/features/overlays/Overlays.js","webpack:///../lib/features/overlays/index.js","webpack:///../lib/features/context-pad/ContextPad.js","webpack:///../lib/features/context-pad/index.js","webpack:///../lib/features/preview-support/PreviewSupport.js","webpack:///../lib/features/preview-support/index.js","webpack:///../lib/features/create/Create.js","webpack:///../lib/features/create/CreatePreview.js","webpack:///../lib/features/create/index.js","webpack:///../lib/features/tool-manager/ToolManager.js","webpack:///../lib/features/tool-manager/index.js","webpack:///../lib/features/lasso-tool/LassoTool.js","webpack:///../lib/features/lasso-tool/index.js","webpack:///../lib/command/CommandStack.js","webpack:///../lib/command/index.js","webpack:///../lib/features/change-support/ChangeSupport.js","webpack:///../lib/features/change-support/index.js","webpack:///../lib/features/modeling/cmd/AlignElementsHandler.js","webpack:///../lib/features/modeling/cmd/AppendShapeHandler.js","webpack:///../lib/features/modeling/cmd/CreateConnectionHandler.js","webpack:///../lib/features/modeling/cmd/CreateElementsHandler.js","webpack:///../lib/features/modeling/cmd/CreateShapeHandler.js","webpack:///../lib/features/modeling/cmd/CreateLabelHandler.js","webpack:///../lib/features/modeling/cmd/DeleteConnectionHandler.js","webpack:///../lib/features/modeling/cmd/DeleteElementsHandler.js","webpack:///../lib/util/Removal.js","webpack:///../lib/features/modeling/cmd/DeleteShapeHandler.js","webpack:///../lib/features/modeling/cmd/DistributeElementsHandler.js","webpack:///../lib/features/modeling/cmd/LayoutConnectionHandler.js","webpack:///../lib/features/modeling/cmd/MoveConnectionHandler.js","webpack:///../lib/util/AttachUtil.js","webpack:///../lib/features/modeling/cmd/helper/AnchorsHelper.js","webpack:///../lib/features/modeling/cmd/helper/MoveClosure.js","webpack:///../lib/features/modeling/cmd/helper/MoveHelper.js","webpack:///../lib/features/modeling/cmd/MoveElementsHandler.js","webpack:///../lib/features/modeling/cmd/MoveShapeHandler.js","webpack:///../lib/features/modeling/cmd/ReconnectConnectionHandler.js","webpack:///../lib/features/modeling/cmd/ReplaceShapeHandler.js","webpack:///../lib/features/modeling/cmd/ResizeShapeHandler.js","webpack:///../lib/features/modeling/cmd/SpaceToolHandler.js","webpack:///../lib/features/modeling/cmd/ToggleShapeCollapseHandler.js","webpack:///../lib/features/modeling/cmd/UpdateAttachmentHandler.js","webpack:///../lib/features/modeling/cmd/UpdateWaypointsHandler.js","webpack:///../lib/features/modeling/Modeling.js","webpack:///../lib/layout/BaseLayouter.js","webpack:///../lib/features/space-tool/SpaceUtil.js","webpack:///../lib/features/modeling/index.js","webpack:///../lib/navigation/movecanvas/MoveCanvas.js","webpack:///../lib/navigation/movecanvas/index.js","webpack:///../lib/features/move/Move.js","webpack:///../lib/features/move/MovePreview.js","webpack:///../lib/features/move/index.js","webpack:///../lib/features/palette/Palette.js","webpack:///../lib/features/palette/index.js","webpack:///../lib/features/resize/ResizeUtil.js","webpack:///../lib/features/resize/Resize.js","webpack:///../lib/features/resize/ResizePreview.js","webpack:///../lib/features/resize/ResizeHandles.js","webpack:///../lib/features/resize/index.js","webpack:///../lib/util/Math.js","webpack:///../lib/navigation/zoomscroll/ZoomUtil.js","webpack:///../lib/navigation/zoomscroll/ZoomScroll.js","webpack:///../lib/navigation/zoomscroll/index.js","webpack:///./app/ExampleContextPadProvider.js","webpack:///./app/ExamplePaletteProvider.js","webpack:///../lib/command/CommandInterceptor.js","webpack:///../lib/features/rules/RuleProvider.js","webpack:///./app/ExampleRuleProvider.js","webpack:///./app/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","Collection","extend","collection","refs","target","inverseProperty","inverse","element","idx","this","indexOf","splice","unset","currentIdx","length","set","isExtended","__refs_collection","has","p2s","toFloat","parseFloat","math","Math","PI","mmin","min","mmax","max","pow","abs","pathCommand","pathValues","is","type","String","toLowerCase","isFinite","Array","isArray","toString","slice","clone","obj","res","paths","ps","sleep","setTimeout","box","x","y","width","height","w","h","x2","y2","cx","cy","r1","r2","r0","sqrt","path","rectPath","vb","join","pathToString","replace","pathClone","pathArray","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t1","t13","t12","t2","t3","mx","my","nx","ny","start","end","alpha","atan2","bezierBBox","bbox","x0","y0","x1","y1","x3","y3","a","b","b2ac","sqrtb2ac","tvalues","bounds","push","mt","j","jlen","apply","isPointInsideBBox","base3","p1","p2","p3","p4","bezlen","x4","y4","z","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersectLines","denominator","px","py","px2","toFixed","py2","findBezierIntersections","bez1","bez2","justCount","bbox1","bbox2","isBBoxIntersect","n1","n2","dots1","dots2","xy","concat","di","di1","dj","dj1","ci","cj","ellipsePath","rx","ry","rad","cos","sin","pathToAbsolute","pth","pathString","arr","paramCounts","q","v","u","data","params","parsePathString","pa0","pa","crz","toUpperCase","ii","dots","jj","pop","catmulRomToBezier","k","kk","lineToCurve","qubicToCurve","ax","ay","arcToCurve","angle","large_arc_flag","sweep_flag","recursive","f","scope","postprocessor","_120","rotate","newf","arg","arguments","args","cache","count","array","item","repush","shift","f1","f2","rx2","ry2","asin","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","newres","split","crp","iLen","pathToCurve","path2","curve","attrs","bx","by","X","Y","qx","qy","attrs2","processPath","pcom","T","Q","fixArc","pp","pi","pcoms1","pcoms2","fixM","path1","a1","a2","pfirst","seg","seg2","seglen","seg2len","x1m","y1m","x2m","y2m","pj","intr","segment1","segment2","defineCollectionProperty","ref","forEach","Refs","props","Error","_value","old","ensureRefsCollection","ensureBound","e","remove","undefined","add","CLASS_PATTERN","annotate","fn","$inject","CONSTRUCTOR_ARGS","FN_ARGS","FN_ARG","parse","match","test","isClass","map","trim","_typeof","iterator","_toConsumableArray","arr2","from","Injector","parent","strict","currentlyResolving","error","providers","_providers","instances","_instances","self","injector","msg","stack","parts","pivot","hasProp","fnDef","locals","dependencies","dep","instantiate","Type","_fnDef","Function","invoke","func","context","_fnDef2","createPrivateInjectorFactory","privateChildInjector","factoryMap","factory","arrayUnwrap","provider","__exports__","clonedModule","keys","reduce","substring","privateInjector","__modules__","getFromPrivateInjector","createChild","forceNewInstances","cacheIdx","privateChildInjectorFactory","fromParentModule","matchedScopes","privateInjectorsCache","privateChildInjectors","privateChildFactories","$scope","unshift","prop","DEFAULT_RENDER_PRIORITY","BaseRenderer","eventBus","renderPriority","on","evt","visuals","gfx","canRender","drawShape","drawConnection","getShapePath","getConnectionPath","ensureImported","ownerDocument","importNode","appendTo","appendChild","append","node","LENGTH_ATTR","CSS_PROPERTIES","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","mask","opacity","overflow","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","setAttribute","hyphenated","style","setAttributeNS","index_esm_attr","getAttributeNS","getAttribute","names","setAttributes","index_esm_index","re","index_esm_toString","defined","index_esm_classes","el","ClassList","nodeType","list","classList","parentNode","removeChild","clear","child","firstChild","cloneNode","className","baseVal","removeMatching","toggle","force","contains","svg","SVG_START","index_esm_parse","unwrap","parsed","parser","DOMParser","async","parseFromString","parseDocument","fragment","document","createDocumentFragment","index_esm_create","charAt","createElementNS","index_esm_node","createTransform","matrix","createSVGTransformFromMatrix","createSVGTransform","wrapMatrix","transformList","transform","SVGMatrix","index_esm_transform","transforms","appendItem","setTransforms","consolidate","componentsToPath","elements","toSVGPoints","points","result","createLine","line","flatten","nativeToString","nativeHasOwnProperty","isUndefined","isDefined","index_esm_isArray","isObject","isNumber","isFunction","tag","isString","find","matcher","toMatcher","val","index_esm_filter","convertKey","toNum","identity","every","matches","size","values","groupBy","extractor","grouped","toExtractor","discriminator","group","uniqueBy","_len","collections","_key","sortBy","sorted","disc","entry","matchPattern","pattern","Number","_extends","assign","source","index_esm_assign","others","pick","properties","getParents","getParent","Elements_add","unique","canAdd","eachElement","depth","selfAndChildren","maxDepth","processedChildren","children","getBBox","stopRecursion","minX","minY","maxX","maxY","waypoints","getType","isFrameElement","isFrame","copyObject","src1","src2","DefaultRenderer_DEFAULT_RENDER_PRIORITY","DefaultRenderer","styles","CONNECTION_STYLE","strokeWidth","SHAPE_STYLE","FRAME_STYLE","strokeDasharray","inherits_browser_default","rect","connection","shape","point","connectionPath","original","draw","__init__","defaultRenderer","defaultTraits","no-fill","no-border","strokeOpacity","no-events","pointerEvents","cls","traits","additionalAttrs","class","computeStyle","custom","defaultStyles","Collections_remove","Collections_add","round","number","resolution","ensurePx","createGroup","childIndex","index","childNodes","insertBefore","REQUIRED_MODEL_ATTRS","Canvas","config","graphicsFactory","elementRegistry","_eventBus","_elementRegistry","_graphicsFactory","_init","setCTM","mstr","container","_container","options","body","createElement","position","createContainer","_svg","viewport","_viewport","_layers","deferUpdate","_viewboxChanged","timeout","timer","lastArgs","lastThis","lastNow","fire","now","Date","scheduledDiff","schedule","debounce","_cachedViewbox","_destroy","_clear","emit","_rootElement","getAll","setRootElement","_removeElement","getDefaultLayer","getLayer","layer","_createLayer","getContainer","_updateMarker","id","_elements","secondaryGfx","addMarker","removeMarker","hasMarker","getGraphics","toggleMarker","getRootElement","override","_ensureValid","currentRoot","requiredAttrs","attr","_setParent","parentIndex","_addElement","update","addShape","addConnection","removeShape","removeConnection","secondary","_changeViewbox","changeFn","viewbox","innerBox","scale","outerBox","getSize","createSVGMatrix","translate","createMatrix","inner","outer","scroll","delta","getCTM","dx","dy","multiply","zoom","newScale","center","_fitViewport","_setZoom","newViewbox","vbox","originalPoint","currentMatrix","scaleMatrix","newMatrix","createSVGPoint","currentScale","matrixTransform","clientWidth","clientHeight","getAbsoluteBBox","resized","ELEMENT_ID","ElementRegistry","_validateId","updateId","newId","filtered","parentRefs","object_refs_default","labelRefs","attacherRefs","outgoingRefs","incomingRefs","Base","labels","newLabel","label","Shape","Root","Label","Connection","types","root","ElementFactory","_uid","createRoot","createLabel","createShape","createConnection","model_create","EventBus_slice","EventBus","_listeners","InternalEvent","getVisual","SvgTransformUtil_translate","setTranslate","dist_index_esm_attr","removeAttribute","events","priority","callback","that","actualCallback","_addListener","next","once","event","wrappedCallback","off","_removeListener","createEvent","init","firstListener","returnValue","originalType","_invokeListeners","defaultPrevented","handleError","listener","cancelBubble","_invokeListener","invokeFunction","stopPropagation","preventDefault","console","newListener","previousListener","_getListeners","_setListeners","nextListener","listenerCallback","index_esm_indexOf","indexof","index_esm_re","dist_index_esm_toString","dist_index_esm_classes","index_esm_ClassList","index_esm_clear","proto","Element","vendor","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","selector","nodes","querySelectorAll","bugTestDiv","closest","checkYoSelf","index_esm_bind","window","addEventListener","unbind","removeEventListener","index_esm_prefix","componentEvent","capture","forceCaptureEvents","delegateEvents","srcElement","delegateTarget","domify","html","doc","TypeError","exec","createTextNode","innerHTML","lastChild","wrap","index_esm_map","_default","prefix","suffix","innerHTMLBug","getElementsByTagName","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","polyline","ellipse","polygon","circle","text","g","proto$1","vendor$1","matchesSelector$1","query","querySelector","index_esm_remove","GraphicsFactory","GraphicsFactory_prependTo","newNode","siblingNode","_getChildren","childrenGfx","getChildren","visual","_createContainer","outerGfx","updateContainments","childGfx","reverse","hidden","core","__depends__","canvas","elementFactory","bootstrap","bootstrapModules","components","hasModule","visit","addModule","Diagram","createInjector","__stopPropagation","getOriginal","originalEvent","srcEvent","immediate","toPoint","pointers","touches","clientX","clientY","isPrimaryButton","button","hasPrimaryModifier","navigator","platform","metaKey","ctrlKey","allowAll","destroy","LOW_PRIORITY","InteractionEvents","localEventName","ignoredFilters","isIgnored","handlers","mouseHandler","bindings","click","contextmenu","dblclick","mousedown","mousemove","mouseover","mouseout","mouseup","element.contextmenu","ELEMENT_SELECTOR","registerEvent","localEvent","ignoredFilter","handler","$delegate","unregisterEvent","createDefaultHit","updateDefaultHit","STROKE_HIT_STYLE","createHitStyle","CLICK_STROKE_HIT_STYLE","HIT_TYPES","all","click-stroke","classNames","applyStyle","hit","appendHit","removeHits","boxType","createWaypointsHit","createBoxHit","updateLine","triggerMouseEvent","eventName","targetElement","interaction_events","interactionEvents","Outline_LOW_PRIORITY","Outline","offset","OUTLINE_STYLE","createOutline","outline","updateShapeOutline","updateConnectionOutline","features_outline","Selection","_selectedElements","deselect","select","selectedElements","oldSelection","newSelection","isSelected","MARKER_HOVER","MARKER_SELECTED","SelectionVisuals","selection","_multiSelectionBox","SelectionBehavior","canExecute","autoSelect","hints","previousSelection","selectedShape","isMultiSelect","features_selection","selectionVisuals","selectionBehavior","Rules","_commandStack","allowed","action","commandStack","features_rules","rules","CURSOR_CLS_PATTERN","Cursor_set","classes","TRAP_PRIORITY","install","trap","PositionUtil_center","PositionUtil_delta","Dragging_round","DRAG_ACTIVE_CLS","Dragging","defaultOptions","threshold","trapClick","toLocalPoint","globalPosition","clientRect","getBoundingClientRect","left","top","dragContext","payload","isTouch","move","activate","displacement","globalStart","globalCurrent","globalDelta","localStart","localCurrent","localDelta","active","cancel","keepSelection","cleanup","checkCancel","which","trapClickAndEnd","untrap","trapTouch","hover","hoverGfx","out","restore","previousContext","wasActive","endDrag","relativeTo","TouchEvent","isTouchEvent","manual","autoActivate","setOptions","HIGH_PRIORITY","HoverFix","dragging","_findTargetGfx","ensureHover","setDragHover","unsetHover","ensureOut","MouseEvent","getGfx","elementFromPoint","features_dragging","hoverFix","roundPoint","asTRBL","right","bottom","asBounds","trbl","getMid","Connect","modeling","canConnect","sourcePosition","targetPosition","connectionStart","connectionEnd","connect","ConnectPreview_HIGH_PRIORITY","ConnectPreview_LOW_PRIORITY","MARKER_OK","MARKER_NOT_OK","ConnectPreview","connectionPreview","endPosition","drawPreview","cleanUp","features_connect","connectPreview","IdGenerator","_counter","_prefix","floor","random","Overlays_ids","Overlays","_canvas","_ids","_overlayDefaults","show","defaults","_overlays","_overlayContainers","_overlayRoot","setPosition","setVisible","visible","setTransform","search","_getOverlayContainer","overlays","overlay","_addOverlay","htmlContainer","hide","_updateOverlayContainer","_updateOverlay","_createOverlayContainer","_updateRoot","raw","overlayContainer","jquery","_updateOverlayVisibilty","minZoom","maxZoom","_updateOverlayScale","minScale","maxScale","shouldScale","_updateOverlaysVisibilty","features_overlays","ContextPad","_overlaysConfig","_current","open","close","isOpen","current","registerProvider","getEntries","entries","getContextPadEntries","trigger","_updateAndOpen","pad","getPad","grouping","control","title","imageUrl","overlaysConfig","_overlayId","context_pad","contextPad","MARKER_TYPES","NODES_CAN_HAVE_MARKER","PreviewSupport","_styles","_clonedMarkers","clonedMarker","addDragger","dragger","_cloneMarkers","addFrame","frame","nodeName","markerType","reference","getMarker","_cloneMarker","markerId","clonedMarkerId","defs","preview_support","previewSupport","Create_MARKER_OK","Create_MARKER_NOT_OK","MARKER_ATTACH","MARKER_NEW_PARENT","Create","setMarker","ensureConstraints","isConnection","attach","isSingleShape","targetParent","targetAttach","canCreate","appendShape","createElements","waypoint","createConstraints","CreatePreview_LOW_PRIORITY","CreatePreview","dragGroup","createDragGroup","features_create","createPreview","ToolManager","_dragging","_tools","_active","registerTool","tools","bindEvents","isActive","tool","setActive","eventsToRegister","reactivate","tool_manager","toolManager","LassoTool","_selection","SVGElement","activateLasso","toBBox","shiftKey","hasSecondaryModifier","activateSelection","filteredElements","getEnclosedElements","lasso_tool","lassoTool","CommandStack","_handlerMap","_stack","_stackIdx","_currentExecution","actions","dirty","_injector","execute","command","_pushAction","_internalExecute","_popAction","_getHandler","_fire","undo","_getUndoAction","_internalUndo","redo","_getRedoAction","register","_setHandler","registerHandler","handlerCls","canUndo","canRedo","_atomicDo","revert","_markDirty","_revertedAction","qualifier","_createId","execution","atomic","preExecute","_executedAction","postExecute","baseAction","stackIdx","ChangeSupport","change_support","changeSupport","AlignElements","_modeling","AppendShapeHandler","CreateConnectionHandler","layouter","_layouter","alignment","middle","moveElements","connectionParent","outgoing","layoutConnection","CreateElementsHandler_round","CreateElementsHandler","CreateElementsHandler_isConnection","parents","createShapeHints","autoResize","CreateShapeHandler_round","CreateShapeHandler","CreateLabelHandler","positionOrBounds","originalExecute","ensureValidDimensions","labelTarget","originalRevert","DeleteConnectionHandler","DeleteElementsHandler","saveClear","removeFn","DeleteShapeHandler","DistributeElements","incoming","nested","oldParent","oldParentIndex","OFF_AXIS","LayoutConnectionHandler","MoveConnectionHandler","getNewAttachPoint","oldBounds","newBounds","oldCenter","newCenter","oldDelta","newDelta","getResizedSourceAnchor","oldAnchor","safeGetWaypoints","getResizedTargetAnchor","getMovedSourceAnchor","moveDelta","substractPosition","getMovedTargetAnchor","MoveClosure","allShapes","allConnections","enclosedElements","enclosedConnections","topLevel","MoveHelper","MoveElementsHandler","_helper","MoveShapeHandler","ReconnectConnectionHandler","ReplaceShapeHandler","_rules","ResizeShapeHandler","SpaceToolHandler","ToggleShapeCollapseHandler","UpdateAttachmentHandler","removeAttacher","host","attacher","attachers","addAttacher","UpdateWaypointsHandler","Modeling","_elementFactory","registerHandlers","BaseLayouter","groups","axis","dimension","updateRange","range","lastIdx","rangeDiff","margin","spaceInBetween","firstGroup","lastGroupIdx","lastGroup","groupsSize","sortedElements","refElem","refCenter","centerElement","groupIdx","prevGroup","oldWaypoints","newParent","newParentIndex","isTopLevel","addAll","closure","handleConnection","getClosure","moveRecursive","moveClosure","newHost","primaryShape","keepParent","moveShape","recurse","layout","sourceMoved","targetMoved","moveConnection","shapes","moveChildren","getNewParent","newSource","newTarget","dockingOrPoints","oldSource","oldTarget","newWaypoint","movedEnd","layoutHints","newShape","oldShape","newData","canReconnect","updateAttachment","docking","reconnectEnd","reconnectStart","endChanged","startChanged","dockingPoint","minBounds","resizingShapes","resizeBounds","resizeShape","movingShapes","oldChildrenVisibility","collapsed","newHidden","setHidden","lastState","oldHost","attacherIdx","newWaypoints","getHandlers","shape.append","shape.create","shape.delete","shape.move","shape.resize","shape.replace","shape.toggleCollapse","spaceTool","label.create","connection.create","connection.delete","connection.move","connection.layout","connection.updateWaypoints","connection.reconnectStart","connection.reconnectEnd","elements.create","elements.move","elements.delete","elements.distribute","elements.align","element.updateAttachment","_create","removeElements","distributeElements","replaceShape","alignElements","createSpace","updateWaypoints","toggleCollapse","features_modeling","THRESHOLD","MoveCanvas","handleMove","last","handleEnd","altKey","handleStart","movecanvas","moveCanvas","Move_LOW_PRIORITY","MEDIUM_PRIORITY","Move_HIGH_PRIORITY","Move_round","MoveEvents","canMove","referencePoint","mid","ids","validatedShapes","isAttach","MovePreview_LOW_PRIORITY","MARKER_DRAGGING","MovePreview_MARKER_OK","MovePreview_MARKER_NOT_OK","MovePreview_MARKER_NEW_PARENT","MovePreview_MARKER_ATTACH","MovePreview","getVisualDragShapes","MovePreview_isConnection","removeEdges","getAllDraggedElements","dragShapes","allDraggedElements","visuallyDraggedShapes","differentParents","makeDraggable","features_move","movePreview","Palette","updateToolHighlight","_update","_diagramInitialized","getPaletteEntries","parentContainer","_getParentContainer","HTML_MARKUP","TOGGLE_SELECTOR","_layoutChanged","_toggleState","state","twoColumn","_needsCollapse","_entries","entriesContainer","separator","availableHeight","isActiveTool","_activeTool","_toolsContainer","actionName","toolClasses","palette","DEFAULT_CHILD_BOX_PADDING","applyConstraints","resizeConstraints","minValue","maxValue","asPadding","mayBePadding","defaultValue","isBBoxChild","computeChildrenBBox","shapeOrChildren","padding","addPadding","Resize","ResizeUtil_resizeBounds","currentBounds","currentTrbl","ResizeUtil_ensureConstraints","canResize","boundsChanged","computeMinResizeBox","ctx","contextOrDirection","minDimensions","childrenBounds","currentBox","minBox","childrenBox","getMinResizeBounds","childrenBoxPadding","MARKER_RESIZING","MARKER_RESIZE_NOT_OK","ResizePreview_LOW_PRIORITY","ResizePreview","ResizeHandles","resize","_resize","removeResizers","addResizer","startResize","_createResizer","rotation","resizersParent","_getResizersParent","CLS_RESIZER","amount","setRotate","setScale","SvgTransformUtil_transform","createResizer","resizer","features_resize","resizePreview","resizeHandles","log10","log","getStepSize","steps","minLinearRange","maxLinearRange","sign","RANGE","DEFAULT_SCALE","ZoomScroll","_enabled","_handleWheel","_totalDelta","_scale","enabled","reset","stepSize","NUM_STEPS","_zoom","isZoom","isHorizontalScroll","factor","deltaMode","elementRect","deltaY","deltaX","stepZoom","currentLinearZoomLevel","newLinearZoomLevel","newLogZoomLevel","newEnabled","handleWheel","oldEnabled","zoomscroll","zoomScroll","ExampleContextPadProvider","_connect","ExamplePaletteProvider","_lassoTool","_palette","removeElement","startConnect","delete","dragstart","lasso-tool","tool-separator","create-shape","create-frame","CommandInterceptor","hook","handlerFn","fullEvent","unwrapEvent","RuleProvider","ExampleRuleProvider","addRule","inherits_inherits_browser_default","ExampleModule","exampleContextPadProvider","examplePaletteProvider","exampleRuleProvider","diagram","app_canvas","app_selection","app_root","shape1","shape2","connection1","shape3","shape4"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = require('./lib/refs');\n\nmodule.exports.Collection = require('./lib/collection');","'use strict';\n\n/**\n * An empty collection stub. Use {@link RefsCollection.extend} to extend a\n * collection with ref semantics.\n *\n * @class RefsCollection\n */\n\n/**\n * Extends a collection with {@link Refs} aware methods\n *\n * @memberof RefsCollection\n * @static\n *\n * @param  {Array<Object>} collection\n * @param  {Refs} refs instance\n * @param  {Object} property represented by the collection\n * @param  {Object} target object the collection is attached to\n *\n * @return {RefsCollection<Object>} the extended array\n */\nfunction extend(collection, refs, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  /**\n   * Removes the given element from the array and returns it.\n   *\n   * @method RefsCollection#remove\n   *\n   * @param {Object} element the element to remove\n   */\n  Object.defineProperty(collection, 'remove', {\n    value: function(element) {\n      var idx = this.indexOf(element);\n      if (idx !== -1) {\n        this.splice(idx, 1);\n\n        // unset inverse\n        refs.unset(element, inverseProperty, target);\n      }\n\n      return element;\n    }\n  });\n\n  /**\n   * Returns true if the collection contains the given element\n   *\n   * @method RefsCollection#contains\n   *\n   * @param {Object} element the element to check for\n   */\n  Object.defineProperty(collection, 'contains', {\n    value: function(element) {\n      return this.indexOf(element) !== -1;\n    }\n  });\n\n  /**\n   * Adds an element to the array, unless it exists already (set semantics).\n   *\n   * @method RefsCollection#add\n   *\n   * @param {Object} element the element to add\n   * @param {Number} optional index to add element to\n   *                 (possibly moving other elements around)\n   */\n  Object.defineProperty(collection, 'add', {\n    value: function(element, idx) {\n\n      var currentIdx = this.indexOf(element);\n\n      if (typeof idx === 'undefined') {\n\n        if (currentIdx !== -1) {\n          // element already in collection (!)\n          return;\n        }\n\n        // add to end of array, as no idx is specified\n        idx = this.length;\n      }\n\n      // handle already in collection\n      if (currentIdx !== -1) {\n\n        // remove element from currentIdx\n        this.splice(currentIdx, 1);\n      }\n\n      // add element at idx\n      this.splice(idx, 0, element);\n\n      if (currentIdx === -1) {\n        // set inverse, unless element was\n        // in collection already\n        refs.set(element, inverseProperty, target);\n      }\n    }\n  });\n\n  // a simple marker, identifying this element\n  // as being a refs collection\n  Object.defineProperty(collection, '__refs_collection', {\n    value: true\n  });\n\n  return collection;\n}\n\n\nfunction isExtended(collection) {\n  return collection.__refs_collection === true;\n}\n\nmodule.exports.extend = extend;\n\nmodule.exports.isExtended = isExtended;","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\n/**\n * This file contains portions that got extraced from Snap.svg (licensed Apache-2.0).\n *\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\n */\n\n/* eslint no-fallthrough: \"off\" */\n\nvar has = 'hasOwnProperty',\n    p2s = /,?([a-z]),?/gi,\n    toFloat = parseFloat,\n    math = Math,\n    PI = math.PI,\n    mmin = math.min,\n    mmax = math.max,\n    pow = math.pow,\n    abs = math.abs,\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig;\n\nfunction is(o, type) {\n  type = String.prototype.toLowerCase.call(type);\n\n  if (type == 'finite') {\n    return isFinite(o);\n  }\n\n  if (type == 'array' && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n    return true;\n  }\n\n  return (type == 'null' && o === null) ||\n         (type == typeof o && o !== null) ||\n         (type == 'object' && o === Object(o)) ||\n         Object.prototype.toString.call(o).slice(8, -1).toLowerCase() == type;\n}\n\nfunction clone(obj) {\n\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n\n  var res = new obj.constructor;\n\n  for (var key in obj) if (obj[has](key)) {\n    res[key] = clone(obj[key]);\n  }\n\n  return res;\n}\n\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\n\nfunction cacher(f, scope, postprocessor) {\n\n  function newf() {\n\n    var arg = Array.prototype.slice.call(arguments, 0),\n        args = arg.join('\\u2400'),\n        cache = newf.cache = newf.cache || {},\n        count = newf.count = newf.count || [];\n\n    if (cache[has](args)) {\n      repush(count, args);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(scope, arg);\n\n    return postprocessor ? postprocessor(cache[args]) : cache[args];\n  }\n  return newf;\n}\n\nfunction parsePathString(pathString) {\n\n  if (!pathString) {\n    return null;\n  }\n\n  var pth = paths(pathString);\n\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n\n  var paramCounts = { a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0 },\n      data = [];\n\n  if (is(pathString, 'array') && is(pathString[0], 'array')) { // rough assumption\n    data = clone(pathString);\n  }\n\n  if (!data.length) {\n\n    String(pathString).replace(pathCommand, function(a, b, c) {\n      var params = [],\n          name = b.toLowerCase();\n\n      c.replace(pathValues, function(a, b) {\n        b && params.push(+b);\n      });\n\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n\n      if (name == 'o' && params.length == 1) {\n        data.push([b, params[0]]);\n      }\n\n      if (name == 'r') {\n        data.push([b].concat(params));\n      } else while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n\n  return data;\n}\n\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n\n  setTimeout(function() {\n    for (var key in p) if (p[has](key) && key != ps) {\n      p[key].sleep--;\n      !p[key].sleep && delete p[key];\n    }\n  });\n\n  return p[ps];\n}\n\nfunction box(x, y, width, height) {\n  if (x == null) {\n    x = y = width = height = 0;\n  }\n\n  if (y == null) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    w: width,\n    height: height,\n    h: height,\n    x2: x + width,\n    y2: y + height,\n    cx: x + width / 2,\n    cy: y + height / 2,\n    r1: math.min(width, height) / 2,\n    r2: math.max(width, height) / 2,\n    r0: math.sqrt(width * width + height * height) / 2,\n    path: rectPath(x, y, width, height),\n    vb: [x, y, width, height].join(' ')\n  };\n}\n\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\n\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n      t13 = pow(t1, 3),\n      t12 = pow(t1, 2),\n      t2 = t * t,\n      t3 = t2 * t,\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n      mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n      my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n      nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n      ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n      ax = t1 * p1x + t * c1x,\n      ay = t1 * p1y + t * c1y,\n      cx = t1 * c2x + t * p2x,\n      cy = t1 * c2y + t * p2y,\n      alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\n  return {\n    x: x,\n    y: y,\n    m: { x: mx, y: my },\n    n: { x: nx, y: ny },\n    start: { x: ax, y: ay },\n    end: { x: cx, y: cy },\n    alpha: alpha\n  };\n}\n\nfunction bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\n  if (!is(p1x, 'array')) {\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n  }\n\n  var bbox = curveBBox.apply(null, p1x);\n\n  return box(\n    bbox.min.x,\n    bbox.min.y,\n    bbox.max.x - bbox.min.x,\n    bbox.max.y - bbox.min.y\n  );\n}\n\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x &&\n    x <= bbox.x + bbox.width &&\n    y >= bbox.y &&\n    y <= bbox.y + bbox.height;\n}\n\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = box(bbox1);\n  bbox2 = box(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\n  if (z == null) {\n    z = 1;\n  }\n\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n\n  var z2 = z / 2,\n      n = 12,\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n      sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n        xbase = base3(ct, x1, x2, x3, x4),\n        ybase = base3(ct, y1, y2, y3, y4),\n        comb = xbase * xbase + ybase * ybase;\n\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n\n  return z2 * sum;\n}\n\n\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n\n  if (\n    mmax(x1, x2) < mmin(x3, x4) ||\n      mmin(x1, x2) > mmax(x3, x4) ||\n      mmax(y1, y2) < mmin(y3, y4) ||\n      mmin(y1, y2) > mmax(y3, y4)\n  ) {\n    return;\n  }\n\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n  if (!denominator) {\n    return;\n  }\n\n  var px = nx / denominator,\n      py = ny / denominator,\n      px2 = +px.toFixed(2),\n      py2 = +py.toFixed(2);\n\n  if (\n    px2 < +mmin(x1, x2).toFixed(2) ||\n      px2 > +mmax(x1, x2).toFixed(2) ||\n      px2 < +mmin(x3, x4).toFixed(2) ||\n      px2 > +mmax(x3, x4).toFixed(2) ||\n      py2 < +mmin(y1, y2).toFixed(2) ||\n      py2 > +mmax(y1, y2).toFixed(2) ||\n      py2 < +mmin(y3, y4).toFixed(2) ||\n      py2 > +mmax(y3, y4).toFixed(2)\n  ) {\n    return;\n  }\n\n  return { x: px, y: py };\n}\n\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n      bbox2 = bezierBBox(bez2);\n\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  var l1 = bezlen.apply(0, bez1),\n      l2 = bezlen.apply(0, bez2),\n      n1 = ~~(l1 / 5),\n      n2 = ~~(l2 / 5),\n      dots1 = [],\n      dots2 = [],\n      xy = {},\n      res = justCount ? 0 : [];\n\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\n  }\n\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\n  }\n\n  for (i = 0; i < n1; i++) {\n\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n          di1 = dots1[i + 1],\n          dj = dots2[j],\n          dj1 = dots2[j + 1],\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n      if (is) {\n\n        if (xy[is.x.toFixed(0)] == is.y.toFixed(0)) {\n          continue;\n        }\n\n        xy[is.x.toFixed(0)] = is.y.toFixed(0);\n\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\n/**\n * Find or counts the intersections between two SVG paths.\n *\n * Returns a number in counting mode and a list of intersections otherwise.\n *\n * A single intersection entry contains the intersection coordinates (x, y)\n * as well as additional information regarding the intersecting segments\n * on each path (segment1, segment2) and the relative location of the\n * intersection on these segments (t1, t2).\n *\n * The path may be an SVG path string or a list of path components\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\n *\n * @example\n *\n * var intersections = findPathIntersections(\n *   'M0,0L100,100',\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\n * );\n *\n * // intersections = [\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\n * //\n *\n * @param {String|Array<PathDef>} path1\n * @param {String|Array<PathDef>} path2\n * @param {Boolean} [justCount=false]\n *\n * @return {Array<Intersection>|Number}\n */\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n      res = justCount ? 0 : [];\n\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n\n          if (justCount) {\n            res += intr;\n          } else {\n\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n\n  return res;\n}\n\n\nfunction rectPath(x, y, w, h, r) {\n  if (r) {\n    return [\n      ['M', +x + (+r), y],\n      ['l', w - r * 2, 0],\n      ['a', r, r, 0, 0, 1, r, r],\n      ['l', 0, h - r * 2],\n      ['a', r, r, 0, 0, 1, -r, r],\n      ['l', r * 2 - w, 0],\n      ['a', r, r, 0, 0, 1, -r, -r],\n      ['l', 0, r * 2 - h],\n      ['a', r, r, 0, 0, 1, r, -r],\n      ['z']\n    ];\n  }\n\n  var res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\n  res.toString = pathToString;\n\n  return res;\n}\n\nfunction ellipsePath(x, y, rx, ry, a) {\n  if (a == null && ry == null) {\n    ry = rx;\n  }\n\n  x = +x;\n  y = +y;\n  rx = +rx;\n  ry = +ry;\n\n  if (a != null) {\n    var rad = Math.PI / 180,\n        x1 = x + rx * Math.cos(-ry * rad),\n        x2 = x + rx * Math.cos(-a * rad),\n        y1 = y + rx * Math.sin(-ry * rad),\n        y2 = y + rx * Math.sin(-a * rad),\n        res = [['M', x1, y1], ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n  } else {\n    res = [\n      ['M', x, y],\n      ['m', 0, -ry],\n      ['a', rx, ry, 0, 1, 1, 0, 2 * ry],\n      ['a', rx, ry, 0, 1, 1, 0, -2 * ry],\n      ['z']\n    ];\n  }\n\n  res.toString = pathToString;\n\n  return res;\n}\n\n\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n\n  if (!is(pathArray, 'array') || !is(pathArray && pathArray[0], 'array')) { // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n\n  var res = [],\n      x = 0,\n      y = 0,\n      mx = 0,\n      my = 0,\n      start = 0,\n      pa0;\n\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var crz = pathArray.length == 3 &&\n      pathArray[0][0] == 'M' &&\n      pathArray[1][0].toUpperCase() == 'R' &&\n      pathArray[2][0].toUpperCase() == 'Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n\n      switch (r[0]) {\n      case 'A':\n        r[1] = pa[1];\n        r[2] = pa[2];\n        r[3] = pa[3];\n        r[4] = pa[4];\n        r[5] = pa[5];\n        r[6] = +pa[6] + x;\n        r[7] = +pa[7] + y;\n        break;\n      case 'V':\n        r[1] = +pa[1] + y;\n        break;\n      case 'H':\n        r[1] = +pa[1] + x;\n        break;\n      case 'R':\n        var dots = [x, y].concat(pa.slice(1));\n\n        for (var j = 2, jj = dots.length; j < jj; j++) {\n          dots[j] = +dots[j] + x;\n          dots[++j] = +dots[j] + y;\n        }\n\n        res.pop();\n        res = res.concat(catmulRomToBezier(dots, crz));\n        break;\n      case 'O':\n        res.pop();\n        dots = ellipsePath(x, y, pa[1], pa[2]);\n        dots.push(dots[0]);\n        res = res.concat(dots);\n        break;\n      case 'U':\n        res.pop();\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n        r = ['U'].concat(res[res.length - 1].slice(-2));\n        break;\n      case 'M':\n        mx = +pa[1] + x;\n        my = +pa[2] + y;\n      default:\n\n        for (j = 1, jj = pa.length; j < jj; j++) {\n          r[j] = +pa[j] + ((j % 2) ? x : y);\n        }\n      }\n    } else if (pa0 == 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmulRomToBezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else if (pa0 == 'O') {\n      res.pop();\n      dots = ellipsePath(x, y, pa[1], pa[2]);\n      dots.push(dots[0]);\n      res = res.concat(dots);\n    } else if (pa0 == 'U') {\n      res.pop();\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n      r = ['U'].concat(res[res.length - 1].slice(-2));\n    } else {\n\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n\n    if (pa0 != 'O') {\n      switch (r[0]) {\n      case 'Z':\n        x = +mx;\n        y = +my;\n        break;\n      case 'H':\n        x = r[1];\n        break;\n      case 'V':\n        y = r[1];\n        break;\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n      }\n    }\n  }\n\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n\n  return res;\n}\n\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [\n    x1, y1, x2,\n    y2, x2, y2\n  ];\n}\n\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n      _23 = 2 / 3;\n\n  return [\n    _13 * x1 + _23 * ax,\n    _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax,\n    _13 * y2 + _23 * ay,\n    x2,\n    y2\n  ];\n}\n\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n      rad = PI / 180 * (+angle || 0),\n      res = [],\n      xy,\n      rotate = cacher(function(x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n\n        return { x: X, y: Y };\n      });\n\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n\n    var x = (x1 - x2) / 2,\n        y = (y1 - y2) / 2;\n\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n\n    var rx2 = rx * rx,\n        ry2 = ry * ry,\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n        cx = k * rx * y / ry + (x1 + x2) / 2,\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n\n  var df = f2 - f1;\n\n  if (abs(df) > _120) {\n    var f2old = f2,\n        x2old = x2,\n        y2old = y2;\n\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n\n  df = f2 - f1;\n\n  var c1 = math.cos(f1),\n      s1 = math.sin(f1),\n      c2 = math.cos(f2),\n      s2 = math.sin(f2),\n      t = math.tan(df / 4),\n      hx = 4 / 3 * rx * t,\n      hy = 4 / 3 * ry * t,\n      m1 = [x1, y1],\n      m2 = [x1 + hx * s1, y1 - hy * c1],\n      m3 = [x2 + hx * s2, y2 - hy * c2],\n      m4 = [x2, y2];\n\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n\n    return newres;\n  }\n}\n\n// http://schepers.cc/getting-to-the-point\nfunction catmulRomToBezier(crp, z) {\n  var d = [];\n\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [\n      { x: +crp[i - 2], y: +crp[i - 1] },\n      { x: +crp[i], y: +crp[i + 1] },\n      { x: +crp[i + 2], y: +crp[i + 3] },\n      { x: +crp[i + 4], y: +crp[i + 5] }\n    ];\n\n    if (z) {\n\n      if (!i) {\n        p[0] = { x: +crp[iLen - 2], y: +crp[iLen - 1] };\n      } else if (iLen - 4 == i) {\n        p[3] = { x: +crp[0], y: +crp[1] };\n      } else if (iLen - 2 == i) {\n        p[2] = { x: +crp[0], y: +crp[1] };\n        p[3] = { x: +crp[2], y: +crp[3] };\n      }\n\n    } else {\n\n      if (iLen - 4 == i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = { x: +crp[i], y: +crp[i + 1] };\n      }\n\n    }\n\n    d.push(['C',\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\n      (p[1].y + 6*p[2].y - p[3].y) / 6,\n      p[2].x,\n      p[2].y\n    ]);\n  }\n\n  return d;\n}\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n      bounds = [[], []],\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n  for (var i = 0; i < 2; ++i) {\n\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n\n    if (abs(a) < 1e-12) {\n\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n\n      t = -c / b;\n\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n\n      continue;\n    }\n\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n\n    if (b2ac < 0) {\n      continue;\n    }\n\n    t1 = (-b + sqrtb2ac) / (2 * a);\n\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n\n    t2 = (-b - sqrtb2ac) / (2 * a);\n\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  var j = tvalues.length,\n      jlen = j,\n      mt;\n\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n  }\n\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n\n  return {\n    min: { x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1]) },\n    max: { x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1]) }\n  };\n}\n\nfunction pathToCurve(path, path2) {\n  var pth = !path2 && paths(path);\n\n  if (!path2 && pth.curve) {\n    return pathClone(pth.curve);\n  }\n\n  var p = pathToAbsolute(path),\n      p2 = path2 && pathToAbsolute(path2),\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n      processPath = function(path, d, pcom) {\n        var nx, ny;\n\n        if (!path) {\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pcom == 'C' || pcom == 'S') {\n            // In 'S' case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx;\n            // And reflect the previous\n            ny = d.y * 2 - d.by;\n            // command's control point relative to the current point.\n          }\n          else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pcom == 'Q' || pcom == 'T') {\n            // In 'T' case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx;\n            // And make a reflection similar\n            d.qy = d.y * 2 - d.qy;\n            // to case 'S'.\n          }\n          else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n          break;\n        }\n\n        return path;\n      },\n\n      fixArc = function(pp, i) {\n\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\n            p2 && (pcoms2[i] = 'A'); // the same as above\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n\n      fixM = function(path1, path2, a1, a2, i) {\n\n        if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\n          path2.splice(i, 0, ['M', a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n\n      pcoms1 = [], // path commands of original path p\n      pcoms2 = [], // path commands of original path p2\n      pfirst = '', // temporary holder for original path command\n      pcom = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n    p[i] && (pfirst = p[i][0]); // save current path command\n\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n    {\n      pcoms1[i] = pfirst; // Save current path command\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n    if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) { // the same procedures is done to p2\n      p2[i] && (pfirst = p2[i][0]);\n\n      if (pfirst != 'C') {\n        pcoms2[i] = pfirst;\n        i && (pcom = pcoms2[i - 1]);\n      }\n\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] != 'A' && pfirst == 'C') {\n        pcoms2[i] = 'C';\n      }\n\n      fixArc(p2, i);\n    }\n\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n\n    var seg = p[i],\n        seg2 = p2 && p2[i],\n        seglen = seg.length,\n        seg2len = p2 && seg2.length;\n\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  if (!p2) {\n    pth.curve = pathClone(p);\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\nmodule.exports = findPathIntersections;","'use strict';\n\nvar Collection = require('./collection');\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n\n  var collection = Collection.extend(target[property.name] || [], ref, property, target);\n\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: collection\n  });\n\n  if (collection.length) {\n\n    collection.forEach(function(o) {\n      ref.set(o, property.inverse, target);\n    });\n  }\n}\n\n\nfunction defineProperty(ref, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  var _value = target[property.name];\n\n  Object.defineProperty(target, property.name, {\n    configurable: property.configurable,\n    enumerable: property.enumerable,\n\n    get: function() {\n      return _value;\n    },\n\n    set: function(value) {\n\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function(target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function(target, property) {\n\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function(target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */","var CLASS_PATTERN = /^class /;\n\nfunction isClass(fn) {\n  return CLASS_PATTERN.test(fn.toString());\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nfunction annotate() {\n  var args = Array.prototype.slice.call(arguments);\n\n  if (args.length === 1 && isArray(args[0])) {\n    args = args[0];\n  }\n\n  var fn = args.pop();\n\n  fn.$inject = args;\n\n  return fn;\n}\n\n// Current limitations:\n// - can't put into \"function arg\" comments\n// function /* (no parenthesis like this) */ (){}\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\n//\n// Just put the comment before function or inside:\n// /* (((this is fine))) */ function(a, b) {}\n// function abc(a) { /* (((this is fine))) */}\n//\n// - can't reliably auto-annotate constructor; we'll match the\n// first constructor(...) pattern found which may be the one\n// of a nested class, too.\n\nvar CONSTRUCTOR_ARGS = /constructor\\s*[^(]*\\(\\s*([^)]*)\\)/m;\nvar FN_ARGS = /^function\\s*[^(]*\\(\\s*([^)]*)\\)/m;\nvar FN_ARG = /\\/\\*([^*]*)\\*\\//m;\n\nfunction parse(fn) {\n\n  if (typeof fn !== 'function') {\n    throw new Error('Cannot annotate \"' + fn + '\". Expected a function!');\n  }\n\n  var match = fn.toString().match(isClass(fn) ? CONSTRUCTOR_ARGS : FN_ARGS);\n\n  // may parse class without constructor\n  if (!match) {\n    return [];\n  }\n\n  return match[1] && match[1].split(',').map(function (arg) {\n    match = arg.match(FN_ARG);\n    return match ? match[1].trim() : arg.trim();\n  }) || [];\n}\n\nfunction Module() {\n  var providers = [];\n\n  this.factory = function (name, factory) {\n    providers.push([name, 'factory', factory]);\n    return this;\n  };\n\n  this.value = function (name, value) {\n    providers.push([name, 'value', value]);\n    return this;\n  };\n\n  this.type = function (name, type) {\n    providers.push([name, 'type', type]);\n    return this;\n  };\n\n  this.forEach = function (iterator) {\n    providers.forEach(iterator);\n  };\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction Injector(modules, parent) {\n  parent = parent || {\n    get: function get(name, strict) {\n      currentlyResolving.push(name);\n\n      if (strict === false) {\n        return null;\n      } else {\n        throw error('No provider for \"' + name + '\"!');\n      }\n    }\n  };\n\n  var currentlyResolving = [];\n  var providers = this._providers = Object.create(parent._providers || null);\n  var instances = this._instances = Object.create(null);\n\n  var self = instances.injector = this;\n\n  var error = function error(msg) {\n    var stack = currentlyResolving.join(' -> ');\n    currentlyResolving.length = 0;\n    return new Error(stack ? msg + ' (Resolving: ' + stack + ')' : msg);\n  };\n\n  /**\n   * Return a named service.\n   *\n   * @param {String} name\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   *\n   * @return {Object}\n   */\n  var get = function get(name, strict) {\n    if (!providers[name] && name.indexOf('.') !== -1) {\n      var parts = name.split('.');\n      var pivot = get(parts.shift());\n\n      while (parts.length) {\n        pivot = pivot[parts.shift()];\n      }\n\n      return pivot;\n    }\n\n    if (hasProp(instances, name)) {\n      return instances[name];\n    }\n\n    if (hasProp(providers, name)) {\n      if (currentlyResolving.indexOf(name) !== -1) {\n        currentlyResolving.push(name);\n        throw error('Cannot resolve circular dependency!');\n      }\n\n      currentlyResolving.push(name);\n      instances[name] = providers[name][0](providers[name][1]);\n      currentlyResolving.pop();\n\n      return instances[name];\n    }\n\n    return parent.get(name, strict);\n  };\n\n  var fnDef = function fnDef(fn) {\n    var locals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (typeof fn !== 'function') {\n      if (isArray(fn)) {\n        fn = annotate(fn.slice());\n      } else {\n        throw new Error('Cannot invoke \"' + fn + '\". Expected a function!');\n      }\n    }\n\n    var inject = fn.$inject || parse(fn);\n    var dependencies = inject.map(function (dep) {\n      if (hasProp(locals, dep)) {\n        return locals[dep];\n      } else {\n        return get(dep);\n      }\n    });\n\n    return {\n      fn: fn,\n      dependencies: dependencies\n    };\n  };\n\n  var instantiate = function instantiate(Type) {\n    var _fnDef = fnDef(Type),\n        dependencies = _fnDef.dependencies,\n        fn = _fnDef.fn;\n\n    return new (Function.prototype.bind.apply(fn, [null].concat(_toConsumableArray(dependencies))))();\n  };\n\n  var invoke = function invoke(func, context, locals) {\n    var _fnDef2 = fnDef(func, locals),\n        dependencies = _fnDef2.dependencies,\n        fn = _fnDef2.fn;\n\n    return fn.call.apply(fn, [context].concat(_toConsumableArray(dependencies)));\n  };\n\n  var createPrivateInjectorFactory = function createPrivateInjectorFactory(privateChildInjector) {\n    return annotate(function (key) {\n      return privateChildInjector.get(key);\n    });\n  };\n\n  var createChild = function createChild(modules, forceNewInstances) {\n    if (forceNewInstances && forceNewInstances.length) {\n      var fromParentModule = Object.create(null);\n      var matchedScopes = Object.create(null);\n\n      var privateInjectorsCache = [];\n      var privateChildInjectors = [];\n      var privateChildFactories = [];\n\n      var provider;\n      var cacheIdx;\n      var privateChildInjector;\n      var privateChildInjectorFactory;\n      for (var name in providers) {\n        provider = providers[name];\n\n        if (forceNewInstances.indexOf(name) !== -1) {\n          if (provider[2] === 'private') {\n            cacheIdx = privateInjectorsCache.indexOf(provider[3]);\n            if (cacheIdx === -1) {\n              privateChildInjector = provider[3].createChild([], forceNewInstances);\n              privateChildInjectorFactory = createPrivateInjectorFactory(privateChildInjector);\n              privateInjectorsCache.push(provider[3]);\n              privateChildInjectors.push(privateChildInjector);\n              privateChildFactories.push(privateChildInjectorFactory);\n              fromParentModule[name] = [privateChildInjectorFactory, name, 'private', privateChildInjector];\n            } else {\n              fromParentModule[name] = [privateChildFactories[cacheIdx], name, 'private', privateChildInjectors[cacheIdx]];\n            }\n          } else {\n            fromParentModule[name] = [provider[2], provider[1]];\n          }\n          matchedScopes[name] = true;\n        }\n\n        if ((provider[2] === 'factory' || provider[2] === 'type') && provider[1].$scope) {\n          /* jshint -W083 */\n          forceNewInstances.forEach(function (scope) {\n            if (provider[1].$scope.indexOf(scope) !== -1) {\n              fromParentModule[name] = [provider[2], provider[1]];\n              matchedScopes[scope] = true;\n            }\n          });\n        }\n      }\n\n      forceNewInstances.forEach(function (scope) {\n        if (!matchedScopes[scope]) {\n          throw new Error('No provider for \"' + scope + '\". Cannot use provider from the parent!');\n        }\n      });\n\n      modules.unshift(fromParentModule);\n    }\n\n    return new Injector(modules, self);\n  };\n\n  var factoryMap = {\n    factory: invoke,\n    type: instantiate,\n    value: function value(_value) {\n      return _value;\n    }\n  };\n\n  modules.forEach(function (module) {\n\n    function arrayUnwrap(type, value) {\n      if (type !== 'value' && isArray(value)) {\n        value = annotate(value.slice());\n      }\n\n      return value;\n    }\n\n    // TODO(vojta): handle wrong inputs (modules)\n    if (module instanceof Module) {\n      module.forEach(function (provider) {\n        var name = provider[0];\n        var type = provider[1];\n        var value = provider[2];\n\n        providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n      });\n    } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object') {\n      if (module.__exports__) {\n        var clonedModule = Object.keys(module).reduce(function (m, key) {\n          if (key.substring(0, 2) !== '__') {\n            m[key] = module[key];\n          }\n          return m;\n        }, Object.create(null));\n\n        var privateInjector = new Injector((module.__modules__ || []).concat([clonedModule]), self);\n        var getFromPrivateInjector = annotate(function (key) {\n          return privateInjector.get(key);\n        });\n        module.__exports__.forEach(function (key) {\n          providers[key] = [getFromPrivateInjector, key, 'private', privateInjector];\n        });\n      } else {\n        Object.keys(module).forEach(function (name) {\n          if (module[name][2] === 'private') {\n            providers[name] = module[name];\n            return;\n          }\n\n          var type = module[name][0];\n          var value = module[name][1];\n\n          providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n        });\n      }\n    }\n  });\n\n  // public API\n  this.get = get;\n  this.invoke = invoke;\n  this.instantiate = instantiate;\n  this.createChild = createChild;\n}\n\n// helpers /////////////////\n\nfunction hasProp(obj, prop) {\n  return Object.hasOwnProperty.call(obj, prop);\n}\n\nexport { annotate, Module, Injector };\n","var DEFAULT_RENDER_PRIORITY = 1000;\n\n/**\n * The base implementation of shape and connection renderers.\n *\n * @param {EventBus} eventBus\n * @param {Number} [renderPriority=1000]\n */\nexport default function BaseRenderer(eventBus, renderPriority) {\n  var self = this;\n\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\n\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\n    var type = evt.type,\n        element = context.element,\n        visuals = context.gfx;\n\n    if (self.canRender(element)) {\n      if (type === 'render.shape') {\n        return self.drawShape(visuals, element);\n      } else {\n        return self.drawConnection(visuals, element);\n      }\n    }\n  });\n\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath'], renderPriority, function(evt, element) {\n    if (self.canRender(element)) {\n      if (evt.type === 'render.getShapePath') {\n        return self.getShapePath(element);\n      } else {\n        return self.getConnectionPath(element);\n      }\n    }\n  });\n}\n\n/**\n * Should check whether *this* renderer can render\n * the element/connection.\n *\n * @param {element} element\n *\n * @returns {Boolean}\n */\nBaseRenderer.prototype.canRender = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Shape} shape\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawShape = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Connection} connection\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawConnection = function() {};\n\n/**\n * Gets the SVG path of a shape that represents it's visual bounds.\n *\n * @param {Shape} shape\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getShapePath = function() {};\n\n/**\n * Gets the SVG path of a connection that represents it's visual bounds.\n *\n * @param {Connection} connection\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getConnectionPath = function() {};\n","function ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}\n\n/**\n * appendTo utility\n */\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\n * append utility\n */\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\n * attribute accessor utility\n */\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\n\nfunction remove(element) {\n  var parent = element.parentNode;\n\n  if (parent) {\n    parent.removeChild(element);\n  }\n\n  return element;\n}\n\n/**\n * Clear utility\n */\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}\n\nfunction clone(element) {\n  return element.cloneNode(true);\n}\n\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\n * DOM parsing utility\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n\n  var parsed = parseDocument(svg);\n\n  if (!unwrap) {\n    return parsed;\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  var parent = parsed.firstChild;\n\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n\n  return fragment;\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\n * Create utility for SVG elements\n */\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}\n\n/**\n * Events handling utility\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\n\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\n * Geometry helpers\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\n/**\n * Create matrix via args.\n *\n * @example\n *\n * createMatrix({ a: 1, b: 1 });\n * createMatrix();\n * createMatrix(1, 2, 0, 0, 30, 20);\n *\n * @return {SVGMatrix}\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 1:\n    return extend(matrix, a);\n  case 6:\n    return extend(matrix, {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    });\n  }\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}\n\n/**\n * Serialization util\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}\n\n/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\n\nfunction set(element, svg) {\n\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}\n\n\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\n * Selection utilities\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\n\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n\n  return [].map.call(nodes, function(element) {\n    return element;\n  });\n}\n\n/**\n * prependTo utility\n */\n\n/**\n * Prepend a node to a target element and return the prepended node.\n *\n * @param  {SVGElement} node\n * @param  {SVGElement} target\n *\n * @return {SVGElement} the prepended node\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\n * prepend utility\n */\n\n/**\n * Prepend a node to a target element\n *\n * @param  {SVGElement} target\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the target element\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\n/**\n * Replace utility\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\n * transform accessor utility\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n\n  return transform;\n}\n\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\n * Get or set the transforms on the given node.\n *\n * @param {SVGElement} node\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\n *\n * @return {SVGTransform} the consolidated transform\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (transforms) {\n\n    if (!Array.isArray(transforms)) {\n      transforms = [ transforms ];\n    }\n\n    setTransforms(transformList, transforms);\n  }\n\n  return transformList.consolidate();\n}\n\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\n","import {\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\n\nexport function componentsToPath(elements) {\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\n}\n\nexport function toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; (p = points[i]); i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\n\nexport function createLine(points, attrs) {\n\n  var line = svgCreate('polyline');\n  svgAttr(line, { points: toSVGPoints(points) });\n\n  if (attrs) {\n    svgAttr(line, attrs);\n  }\n\n  return line;\n}\n\nexport function updateLine(gfx, points) {\n  svgAttr(gfx, { points: toSVGPoints(points) });\n\n  return gfx;\n}\n","/**\n * Flatten array, one level deep.\n *\n * @param {Array<?>} arr\n *\n * @return {Array<?>}\n */\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nvar nativeToString = Object.prototype.toString;\nvar nativeHasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\nfunction isDefined(obj) {\n  return obj !== undefined;\n}\nfunction isNil(obj) {\n  return obj == null;\n}\nfunction isArray(obj) {\n  return nativeToString.call(obj) === '[object Array]';\n}\nfunction isObject(obj) {\n  return nativeToString.call(obj) === '[object Object]';\n}\nfunction isNumber(obj) {\n  return nativeToString.call(obj) === '[object Number]';\n}\nfunction isFunction(obj) {\n  var tag = nativeToString.call(obj);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object AsyncGeneratorFunction]' || tag === '[object Proxy]';\n}\nfunction isString(obj) {\n  return nativeToString.call(obj) === '[object String]';\n}\n/**\n * Ensure collection is an array.\n *\n * @param {Object} obj\n */\n\nfunction ensureArray(obj) {\n  if (isArray(obj)) {\n    return;\n  }\n\n  throw new Error('must supply array');\n}\n/**\n * Return true, if target owns a property with the given key.\n *\n * @param {Object} target\n * @param {String} key\n *\n * @return {Boolean}\n */\n\nfunction has(target, key) {\n  return nativeHasOwnProperty.call(target, key);\n}\n\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function|Object} matcher\n *\n * @return {Object}\n */\n\nfunction find(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var match;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      match = val;\n      return false;\n    }\n  });\n  return match;\n}\n/**\n * Find element index in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Object}\n */\n\nfunction findIndex(collection, matcher) {\n  matcher = toMatcher(matcher);\n  var idx = isArray(collection) ? -1 : undefined;\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      idx = key;\n      return false;\n    }\n  });\n  return idx;\n}\n/**\n * Find element in collection.\n *\n * @param  {Array|Object} collection\n * @param  {Function} matcher\n *\n * @return {Array} result\n */\n\nfunction filter(collection, matcher) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    if (matcher(val, key)) {\n      result.push(val);\n    }\n  });\n  return result;\n}\n/**\n * Iterate over collection; returning something\n * (non-undefined) will stop iteration.\n *\n * @param  {Array|Object} collection\n * @param  {Function} iterator\n *\n * @return {Object} return result that stopped the iteration\n */\n\nfunction forEach(collection, iterator) {\n  var val, result;\n\n  if (isUndefined(collection)) {\n    return;\n  }\n\n  var convertKey = isArray(collection) ? toNum : identity;\n\n  for (var key in collection) {\n    if (has(collection, key)) {\n      val = collection[key];\n      result = iterator(val, convertKey(key));\n\n      if (result === false) {\n        return val;\n      }\n    }\n  }\n}\n/**\n * Return collection without element.\n *\n * @param  {Array} arr\n * @param  {Function} matcher\n *\n * @return {Array}\n */\n\nfunction without(arr, matcher) {\n  if (isUndefined(arr)) {\n    return [];\n  }\n\n  ensureArray(arr);\n  matcher = toMatcher(matcher);\n  return arr.filter(function (el, idx) {\n    return !matcher(el, idx);\n  });\n}\n/**\n * Reduce collection, returning a single result.\n *\n * @param  {Object|Array} collection\n * @param  {Function} iterator\n * @param  {Any} result\n *\n * @return {Any} result returned from last iterator\n */\n\nfunction reduce(collection, iterator, result) {\n  forEach(collection, function (value, idx) {\n    result = iterator(result, value, idx);\n  });\n  return result;\n}\n/**\n * Return true if every element in the collection\n * matches the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction every(collection, matcher) {\n  return reduce(collection, function (matches, val, key) {\n    return matches && matcher(val, key);\n  }, true);\n}\n/**\n * Return true if some elements in the collection\n * match the criteria.\n *\n * @param  {Object|Array} collection\n * @param  {Function} matcher\n *\n * @return {Boolean}\n */\n\nfunction some(collection, matcher) {\n  return !!find(collection, matcher);\n}\n/**\n * Transform a collection into another collection\n * by piping each member through the given fn.\n *\n * @param  {Object|Array}   collection\n * @param  {Function} fn\n *\n * @return {Array} transformed collection\n */\n\nfunction map(collection, fn) {\n  var result = [];\n  forEach(collection, function (val, key) {\n    result.push(fn(val, key));\n  });\n  return result;\n}\n/**\n * Get the collections keys.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction keys(collection) {\n  return collection && Object.keys(collection) || [];\n}\n/**\n * Shorthand for `keys(o).length`.\n *\n * @param  {Object|Array} collection\n *\n * @return {Number}\n */\n\nfunction size(collection) {\n  return keys(collection).length;\n}\n/**\n * Get the values in the collection.\n *\n * @param  {Object|Array} collection\n *\n * @return {Array}\n */\n\nfunction values(collection) {\n  return map(collection, function (val) {\n    return val;\n  });\n}\n/**\n * Group collection members by attribute.\n *\n * @param  {Object|Array} collection\n * @param  {Function} extractor\n *\n * @return {Object} map with { attrValue => [ a, b, c ] }\n */\n\nfunction groupBy(collection, extractor) {\n  var grouped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  extractor = toExtractor(extractor);\n  forEach(collection, function (val) {\n    var discriminator = extractor(val) || '_';\n    var group = grouped[discriminator];\n\n    if (!group) {\n      group = grouped[discriminator] = [];\n    }\n\n    group.push(val);\n  });\n  return grouped;\n}\nfunction uniqueBy(extractor) {\n  extractor = toExtractor(extractor);\n  var grouped = {};\n\n  for (var _len = arguments.length, collections = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    collections[_key - 1] = arguments[_key];\n  }\n\n  forEach(collections, function (c) {\n    return groupBy(c, extractor, grouped);\n  });\n  var result = map(grouped, function (val, key) {\n    return val[0];\n  });\n  return result;\n}\nvar unionBy = uniqueBy;\n/**\n * Sort collection by criteria.\n *\n * @param  {Object|Array} collection\n * @param  {String|Function} extractor\n *\n * @return {Array}\n */\n\nfunction sortBy(collection, extractor) {\n  extractor = toExtractor(extractor);\n  var sorted = [];\n  forEach(collection, function (value, key) {\n    var disc = extractor(value, key);\n    var entry = {\n      d: disc,\n      v: value\n    };\n\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var d = sorted[idx].d;\n\n      if (disc < d) {\n        sorted.splice(idx, 0, entry);\n        return;\n      }\n    } // not inserted, append (!)\n\n\n    sorted.push(entry);\n  });\n  return map(sorted, function (e) {\n    return e.v;\n  });\n}\n/**\n * Create an object pattern matcher.\n *\n * @example\n *\n * const matcher = matchPattern({ id: 1 });\n *\n * var element = find(elements, matcher);\n *\n * @param  {Object} pattern\n *\n * @return {Function} matcherFn\n */\n\nfunction matchPattern(pattern) {\n  return function (el) {\n    return every(pattern, function (val, key) {\n      return el[key] === val;\n    });\n  };\n}\n\nfunction toExtractor(extractor) {\n  return isFunction(extractor) ? extractor : function (e) {\n    return e[extractor];\n  };\n}\n\nfunction toMatcher(matcher) {\n  return isFunction(matcher) ? matcher : function (e) {\n    return e === matcher;\n  };\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction toNum(arg) {\n  return Number(arg);\n}\n\n/**\n * Debounce fn, calling it only once if\n * the given time elapsed between calls.\n *\n * @param  {Function} fn\n * @param  {Number} timeout\n *\n * @return {Function} debounced function\n */\nfunction debounce(fn, timeout) {\n  var timer;\n  var lastArgs;\n  var lastThis;\n  var lastNow;\n\n  function fire() {\n    var now = Date.now();\n    var scheduledDiff = lastNow + timeout - now;\n\n    if (scheduledDiff > 0) {\n      return schedule(scheduledDiff);\n    }\n\n    fn.apply(lastThis, lastArgs);\n    timer = lastNow = lastArgs = lastThis = undefined;\n  }\n\n  function schedule(timeout) {\n    timer = setTimeout(fire, timeout);\n  }\n\n  return function () {\n    lastNow = Date.now();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n    lastThis = this; // ensure an execution is scheduled\n\n    if (!timer) {\n      schedule(timeout);\n    }\n  };\n}\n/**\n * Throttle fn, calling at most once\n * in the given interval.\n *\n * @param  {Function} fn\n * @param  {Number} interval\n *\n * @return {Function} throttled function\n */\n\nfunction throttle(fn, interval) {\n  var throttling = false;\n  return function () {\n    if (throttling) {\n      return;\n    }\n\n    fn.apply(void 0, arguments);\n    throttling = true;\n    setTimeout(function () {\n      throttling = false;\n    }, interval);\n  };\n}\n/**\n * Bind function against target <this>.\n *\n * @param  {Function} fn\n * @param  {Object}   target\n *\n * @return {Function} bound function\n */\n\nfunction bind(fn, target) {\n  return fn.bind(target);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Convenience wrapper for `Object.assign`.\n *\n * @param {Object} target\n * @param {...Object} others\n *\n * @return {Object} the target\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  return _extends.apply(void 0, [target].concat(others));\n}\n/**\n * Pick given properties from the target object.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction pick(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(properties, function (prop) {\n    if (prop in obj) {\n      result[prop] = target[prop];\n    }\n  });\n  return result;\n}\n/**\n * Pick all target properties, excluding the given ones.\n *\n * @param {Object} target\n * @param {Array} properties\n *\n * @return {Object} target\n */\n\nfunction omit(target, properties) {\n  var result = {};\n  var obj = Object(target);\n  forEach(obj, function (prop, key) {\n    if (properties.indexOf(key) === -1) {\n      result[key] = prop;\n    }\n  });\n  return result;\n}\n/**\n * Recursively merge `...sources` into given target.\n *\n * Does support merging objects; does not support merging arrays.\n *\n * @param {Object} target\n * @param {...Object} sources\n *\n * @return {Object} the target\n */\n\nfunction merge(target) {\n  for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  if (!sources.length) {\n    return target;\n  }\n\n  forEach(sources, function (source) {\n    // skip non-obj sources, i.e. null\n    if (!source || !isObject(source)) {\n      return;\n    }\n\n    forEach(source, function (sourceVal, key) {\n      var targetVal = target[key];\n\n      if (isObject(sourceVal)) {\n        if (!isObject(targetVal)) {\n          // override target[key] with object\n          targetVal = {};\n        }\n\n        target[key] = merge(targetVal, sourceVal);\n      } else {\n        target[key] = sourceVal;\n      }\n    });\n  });\n  return target;\n}\n\nexport { flatten, find, findIndex, filter, forEach, without, reduce, every, some, map, keys, size, values, groupBy, uniqueBy, unionBy, sortBy, matchPattern, debounce, throttle, bind, isUndefined, isDefined, isNil, isArray, isObject, isNumber, isFunction, isString, ensureArray, has, assign, pick, omit, merge };\n","import {\n  assign,\n  filter,\n  find,\n  isArray,\n  isNumber,\n  isObject,\n  isUndefined,\n  groupBy,\n  forEach\n} from 'min-dash';\n\n\n/**\n * Get parent elements.\n *\n * @param {Array<djs.model.base>} elements\n *\n * @returns {Array<djs.model.Base>}\n */\nexport function getParents(elements) {\n\n  // find elements that are not children of any other elements\n  return filter(elements, function(element) {\n    return !find(elements, function(e) {\n      return e !== element && getParent(element, e);\n    });\n  });\n}\n\n\nfunction getParent(element, parent) {\n  if (!parent) {\n    return;\n  }\n\n  if (element === parent) {\n    return parent;\n  }\n\n  if (!element.parent) {\n    return;\n  }\n\n  return getParent(element.parent, parent);\n}\n\n\n/**\n * Adds an element to a collection and returns true if the\n * element was added.\n *\n * @param {Array<Object>} elements\n * @param {Object} e\n * @param {Boolean} unique\n */\nexport function add(elements, e, unique) {\n  var canAdd = !unique || elements.indexOf(e) === -1;\n\n  if (canAdd) {\n    elements.push(e);\n  }\n\n  return canAdd;\n}\n\n\n/**\n * Iterate over each element in a collection, calling the iterator function `fn`\n * with (element, index, recursionDepth).\n *\n * Recurse into all elements that are returned by `fn`.\n *\n * @param  {Object|Array<Object>} elements\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\n * @param  {Number} [depth] maximum recursion depth\n */\nexport function eachElement(elements, fn, depth) {\n\n  depth = depth || 0;\n\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  forEach(elements, function(s, i) {\n    var filter = fn(s, i, depth);\n\n    if (isArray(filter) && filter.length) {\n      eachElement(filter, fn, depth + 1);\n    }\n  });\n}\n\n\n/**\n * Collects self + child elements up to a given depth from a list of elements.\n *\n * @param  {djs.model.Base|Array<djs.model.Base>} elements the elements to select the children from\n * @param  {Boolean} unique whether to return a unique result set (no duplicates)\n * @param  {Number} maxDepth the depth to search through or -1 for infinite\n *\n * @return {Array<djs.model.Base>} found elements\n */\nexport function selfAndChildren(elements, unique, maxDepth) {\n  var result = [],\n      processedChildren = [];\n\n  eachElement(elements, function(element, i, depth) {\n    add(result, element, unique);\n\n    var children = element.children;\n\n    // max traversal depth not reached yet\n    if (maxDepth === -1 || depth < maxDepth) {\n\n      // children exist && children not yet processed\n      if (children && add(processedChildren, children, unique)) {\n        return children;\n      }\n    }\n  });\n\n  return result;\n}\n\n/**\n * Return self + direct children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nexport function selfAndDirectChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, 1);\n}\n\n\n/**\n * Return self + ALL children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nexport function selfAndAllChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, -1);\n}\n\n\n/**\n * Gets the the closure for all selected elements,\n * their enclosed children and connections.\n *\n * @param {Array<djs.model.Base>} elements\n * @param {Boolean} [isTopLevel=true]\n * @param {Object} [existingClosure]\n *\n * @return {Object} newClosure\n */\nexport function getClosure(elements, isTopLevel, closure) {\n\n  if (isUndefined(isTopLevel)) {\n    isTopLevel = true;\n  }\n\n  if (isObject(isTopLevel)) {\n    closure = isTopLevel;\n    isTopLevel = true;\n  }\n\n\n  closure = closure || {};\n\n  var allShapes = copyObject(closure.allShapes),\n      allConnections = copyObject(closure.allConnections),\n      enclosedElements = copyObject(closure.enclosedElements),\n      enclosedConnections = copyObject(closure.enclosedConnections);\n\n  var topLevel = copyObject(\n    closure.topLevel,\n    isTopLevel && groupBy(elements, function(e) { return e.id; })\n  );\n\n\n  function handleConnection(c) {\n    if (topLevel[c.source.id] && topLevel[c.target.id]) {\n      topLevel[c.id] = [ c ];\n    }\n\n    // not enclosed as a child, but maybe logically\n    // (connecting two moved elements?)\n    if (allShapes[c.source.id] && allShapes[c.target.id]) {\n      enclosedConnections[c.id] = enclosedElements[c.id] = c;\n    }\n\n    allConnections[c.id] = c;\n  }\n\n  function handleElement(element) {\n\n    enclosedElements[element.id] = element;\n\n    if (element.waypoints) {\n\n      // remember connection\n      enclosedConnections[element.id] = allConnections[element.id] = element;\n    } else {\n\n      // remember shape\n      allShapes[element.id] = element;\n\n      // remember all connections\n      forEach(element.incoming, handleConnection);\n\n      forEach(element.outgoing, handleConnection);\n\n      // recurse into children\n      return element.children;\n    }\n  }\n\n  eachElement(elements, handleElement);\n\n  return {\n    allShapes: allShapes,\n    allConnections: allConnections,\n    topLevel: topLevel,\n    enclosedConnections: enclosedConnections,\n    enclosedElements: enclosedElements\n  };\n}\n\n/**\n * Returns the surrounding bbox for all elements in\n * the array or the element primitive.\n *\n * @param {Array<djs.model.Shape>|djs.model.Shape} elements\n * @param {Boolean} stopRecursion\n */\nexport function getBBox(elements, stopRecursion) {\n\n  stopRecursion = !!stopRecursion;\n  if (!isArray(elements)) {\n    elements = [elements];\n  }\n\n  var minX,\n      minY,\n      maxX,\n      maxY;\n\n  forEach(elements, function(element) {\n\n    // If element is a connection the bbox must be computed first\n    var bbox = element;\n    if (element.waypoints && !stopRecursion) {\n      bbox = getBBox(element.waypoints, true);\n    }\n\n    var x = bbox.x,\n        y = bbox.y,\n        height = bbox.height || 0,\n        width = bbox.width || 0;\n\n    if (x < minX || minX === undefined) {\n      minX = x;\n    }\n    if (y < minY || minY === undefined) {\n      minY = y;\n    }\n\n    if ((x + width) > maxX || maxX === undefined) {\n      maxX = x + width;\n    }\n    if ((y + height) > maxY || maxY === undefined) {\n      maxY = y + height;\n    }\n  });\n\n  return {\n    x: minX,\n    y: minY,\n    height: maxY - minY,\n    width: maxX - minX\n  };\n}\n\n\n/**\n * Returns all elements that are enclosed from the bounding box.\n *\n *   * If bbox.(width|height) is not specified the method returns\n *     all elements with element.x/y > bbox.x/y\n *   * If only bbox.x or bbox.y is specified, method return all elements with\n *     e.x > bbox.x or e.y > bbox.y\n *\n * @param {Array<djs.model.Shape>} elements List of Elements to search through\n * @param {djs.model.Shape} bbox the enclosing bbox.\n *\n * @return {Array<djs.model.Shape>} enclosed elements\n */\nexport function getEnclosedElements(elements, bbox) {\n\n  var filteredElements = {};\n\n  forEach(elements, function(element) {\n\n    var e = element;\n\n    if (e.waypoints) {\n      e = getBBox(e);\n    }\n\n    if (!isNumber(bbox.y) && (e.x > bbox.x)) {\n      filteredElements[element.id] = element;\n    }\n    if (!isNumber(bbox.x) && (e.y > bbox.y)) {\n      filteredElements[element.id] = element;\n    }\n    if (e.x > bbox.x && e.y > bbox.y) {\n      if (isNumber(bbox.width) && isNumber(bbox.height) &&\n          e.width + e.x < bbox.width + bbox.x &&\n          e.height + e.y < bbox.height + bbox.y) {\n\n        filteredElements[element.id] = element;\n      } else if (!isNumber(bbox.width) || !isNumber(bbox.height)) {\n        filteredElements[element.id] = element;\n      }\n    }\n  });\n\n  return filteredElements;\n}\n\n\nexport function getType(element) {\n\n  if ('waypoints' in element) {\n    return 'connection';\n  }\n\n  if ('x' in element) {\n    return 'shape';\n  }\n\n  return 'root';\n}\n\nexport function isFrameElement(element) {\n\n  return !!(element && element.isFrame);\n}\n\n// helpers ///////////////////////////////\n\nfunction copyObject(src1, src2) {\n  return assign({}, src1 || {}, src2 || {});\n}","import inherits from 'inherits';\n\nimport BaseRenderer from './BaseRenderer';\n\nimport {\n  componentsToPath,\n  createLine\n} from '../util/RenderUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n// apply default renderer with lowest possible priority\n// so that it only kicks in if noone else could render\nvar DEFAULT_RENDER_PRIORITY = 1;\n\n/**\n * The default renderer used for shapes and connections.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n */\nexport default function DefaultRenderer(eventBus, styles) {\n\n  //\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\n\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\n  this.FRAME_STYLE = styles.style([ 'no-fill' ], { stroke: 'fuchsia', strokeDasharray: 4, strokeWidth: 2 });\n}\n\ninherits(DefaultRenderer, BaseRenderer);\n\n\nDefaultRenderer.prototype.canRender = function() {\n  return true;\n};\n\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element) {\n  var rect = svgCreate('rect');\n\n  svgAttr(rect, {\n    x: 0,\n    y: 0,\n    width: element.width || 0,\n    height: element.height || 0\n  });\n\n  if (isFrameElement(element)) {\n    svgAttr(rect, this.FRAME_STYLE);\n  } else {\n    svgAttr(rect, this.SHAPE_STYLE);\n  }\n\n  svgAppend(visuals, rect);\n\n  return rect;\n};\n\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection) {\n\n  var line = createLine(connection.waypoints, this.CONNECTION_STYLE);\n  svgAppend(visuals, line);\n\n  return line;\n};\n\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\n\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var shapePath = [\n    ['M', x, y],\n    ['l', width, 0],\n    ['l', 0, height],\n    ['l', -width, 0],\n    ['z']\n  ];\n\n  return componentsToPath(shapePath);\n};\n\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\n  var waypoints = connection.waypoints;\n\n  var idx, point, connectionPath = [];\n\n  for (idx = 0; (point = waypoints[idx]); idx++) {\n\n    // take invisible docking into account\n    // when creating the path\n    point = point.original || point;\n\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\n  }\n\n  return componentsToPath(connectionPath);\n};\n\n\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\n","import DefaultRenderer from './DefaultRenderer';\nimport Styles from './Styles';\n\nexport default {\n  __init__: [ 'defaultRenderer' ],\n  defaultRenderer: [ 'type', DefaultRenderer ],\n  styles: [ 'type', Styles ]\n};\n","import {\n  isArray,\n  assign,\n  reduce\n} from 'min-dash';\n\n\n/**\n * A component that manages shape styles\n */\nexport default function Styles() {\n\n  var defaultTraits = {\n\n    'no-fill': {\n      fill: 'none'\n    },\n    'no-border': {\n      strokeOpacity: 0.0\n    },\n    'no-events': {\n      pointerEvents: 'none'\n    }\n  };\n\n  var self = this;\n\n  /**\n   * Builds a style definition from a className, a list of traits and an object of additional attributes.\n   *\n   * @param  {String} className\n   * @param  {Array<String>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.cls = function(className, traits, additionalAttrs) {\n    var attrs = this.style(traits, additionalAttrs);\n\n    return assign(attrs, { 'class': className });\n  };\n\n  /**\n   * Builds a style definition from a list of traits and an object of additional attributes.\n   *\n   * @param  {Array<String>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.style = function(traits, additionalAttrs) {\n\n    if (!isArray(traits) && !additionalAttrs) {\n      additionalAttrs = traits;\n      traits = [];\n    }\n\n    var attrs = reduce(traits, function(attrs, t) {\n      return assign(attrs, defaultTraits[t] || {});\n    }, {});\n\n    return additionalAttrs ? assign(attrs, additionalAttrs) : attrs;\n  };\n\n  this.computeStyle = function(custom, traits, defaultStyles) {\n    if (!isArray(traits)) {\n      defaultStyles = traits;\n      traits = [];\n    }\n\n    return self.style(traits || [], assign({}, defaultStyles, custom || {}));\n  };\n}\n","/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {Number} the previous index of the element\n */\nexport function remove(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n}\n\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {Number} idx\n */\nexport function add(collection, element, idx) {\n\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n\n    if (currentIdx === idx) {\n\n      // nothing to do, position has not changed\n      return;\n    } else {\n\n      if (idx !== -1) {\n\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n\n    // push to end\n    collection.push(element);\n  }\n}\n\n\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {Number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\nexport function indexOf(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n}\n","import {\n  isNumber,\n  assign,\n  forEach,\n  every,\n  debounce,\n  bind,\n  reduce\n} from 'min-dash';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../util/Collections';\n\nimport {\n  getType\n} from '../util/Elements';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  transform as svgTransform\n} from 'tiny-svg';\n\nimport { createMatrix as createMatrix } from 'tiny-svg';\n\n\nfunction round(number, resolution) {\n  return Math.round(number * resolution) / resolution;\n}\n\nfunction ensurePx(number) {\n  return isNumber(number) ? number + 'px' : number;\n}\n\n/**\n * Creates a HTML container element for a SVG element with\n * the given configuration\n *\n * @param  {Object} options\n * @return {HTMLElement} the container element\n */\nfunction createContainer(options) {\n\n  options = assign({}, { width: '100%', height: '100%' }, options);\n\n  var container = options.container || document.body;\n\n  // create a <div> around the svg element with the respective size\n  // this way we can always get the correct container size\n  // (this is impossible for <svg> elements at the moment)\n  var parent = document.createElement('div');\n  parent.setAttribute('class', 'djs-container');\n\n  assign(parent.style, {\n    position: 'relative',\n    overflow: 'hidden',\n    width: ensurePx(options.width),\n    height: ensurePx(options.height)\n  });\n\n  container.appendChild(parent);\n\n  return parent;\n}\n\nfunction createGroup(parent, cls, childIndex) {\n  var group = svgCreate('g');\n  svgClasses(group).add(cls);\n\n  var index = childIndex !== undefined ? childIndex : parent.childNodes.length - 1;\n\n  // must ensure second argument is node or _null_\n  // cf. https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n  parent.insertBefore(group, parent.childNodes[index] || null);\n\n  return group;\n}\n\nvar BASE_LAYER = 'base';\n\n\nvar REQUIRED_MODEL_ATTRS = {\n  shape: [ 'x', 'y', 'width', 'height' ],\n  connection: [ 'waypoints' ]\n};\n\n/**\n * The main drawing canvas.\n *\n * @class\n * @constructor\n *\n * @emits Canvas#canvas.init\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {GraphicsFactory} graphicsFactory\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Canvas(config, eventBus, graphicsFactory, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n\n  this._init(config || {});\n}\n\nCanvas.$inject = [\n  'config.canvas',\n  'eventBus',\n  'graphicsFactory',\n  'elementRegistry'\n];\n\n\nCanvas.prototype._init = function(config) {\n\n  var eventBus = this._eventBus;\n\n  // Creates a <svg> element that is wrapped into a <div>.\n  // This way we are always able to correctly figure out the size of the svg element\n  // by querying the parent node.\n  //\n  // (It is not possible to get the size of a svg element cross browser @ 2014-04-01)\n  //\n  // <div class=\"djs-container\" style=\"width: {desired-width}, height: {desired-height}\">\n  //   <svg width=\"100%\" height=\"100%\">\n  //    ...\n  //   </svg>\n  // </div>\n\n  // html container\n  var container = this._container = createContainer(config);\n\n  var svg = this._svg = svgCreate('svg');\n  svgAttr(svg, { width: '100%', height: '100%' });\n\n  svgAppend(container, svg);\n\n  var viewport = this._viewport = createGroup(svg, 'viewport');\n\n  this._layers = {};\n\n  // debounce canvas.viewbox.changed events\n  // for smoother diagram interaction\n  if (config.deferUpdate !== false) {\n    this._viewboxChanged = debounce(bind(this._viewboxChanged, this), 300);\n  }\n\n  eventBus.on('diagram.init', function() {\n\n    /**\n     * An event indicating that the canvas is ready to be drawn on.\n     *\n     * @memberOf Canvas\n     *\n     * @event canvas.init\n     *\n     * @type {Object}\n     * @property {SVGElement} svg the created svg element\n     * @property {SVGElement} viewport the direct parent of diagram elements and shapes\n     */\n    eventBus.fire('canvas.init', {\n      svg: svg,\n      viewport: viewport\n    });\n\n  }, this);\n\n  // reset viewbox on shape changes to\n  // recompute the viewbox\n  eventBus.on([\n    'shape.added',\n    'connection.added',\n    'shape.removed',\n    'connection.removed',\n    'elements.changed'\n  ], function() {\n    delete this._cachedViewbox;\n  }, this);\n\n  eventBus.on('diagram.destroy', 500, this._destroy, this);\n  eventBus.on('diagram.clear', 500, this._clear, this);\n};\n\nCanvas.prototype._destroy = function(emit) {\n  this._eventBus.fire('canvas.destroy', {\n    svg: this._svg,\n    viewport: this._viewport\n  });\n\n  var parent = this._container.parentNode;\n\n  if (parent) {\n    parent.removeChild(this._container);\n  }\n\n  delete this._svg;\n  delete this._container;\n  delete this._layers;\n  delete this._rootElement;\n  delete this._viewport;\n};\n\nCanvas.prototype._clear = function() {\n\n  var self = this;\n\n  var allElements = this._elementRegistry.getAll();\n\n  // remove all elements\n  allElements.forEach(function(element) {\n    var type = getType(element);\n\n    if (type === 'root') {\n      self.setRootElement(null, true);\n    } else {\n      self._removeElement(element, type);\n    }\n  });\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n};\n\n/**\n * Returns the default layer on which\n * all elements are drawn.\n *\n * @returns {SVGElement}\n */\nCanvas.prototype.getDefaultLayer = function() {\n  return this.getLayer(BASE_LAYER, 0);\n};\n\n/**\n * Returns a layer that is used to draw elements\n * or annotations on it.\n *\n * Non-existing layers retrieved through this method\n * will be created. During creation, the optional index\n * may be used to create layers below or above existing layers.\n * A layer with a certain index is always created above all\n * existing layers with the same index.\n *\n * @param {String} name\n * @param {Number} index\n *\n * @returns {SVGElement}\n */\nCanvas.prototype.getLayer = function(name, index) {\n\n  if (!name) {\n    throw new Error('must specify a name');\n  }\n\n  var layer = this._layers[name];\n\n  if (!layer) {\n    layer = this._layers[name] = this._createLayer(name, index);\n  }\n\n  // throw an error if layer creation / retrival is\n  // requested on different index\n  if (typeof index !== 'undefined' && layer.index !== index) {\n    throw new Error('layer <' + name + '> already created at index <' + index + '>');\n  }\n\n  return layer.group;\n};\n\n/**\n * Creates a given layer and returns it.\n *\n * @param {String} name\n * @param {Number} [index=0]\n *\n * @return {Object} layer descriptor with { index, group: SVGGroup }\n */\nCanvas.prototype._createLayer = function(name, index) {\n\n  if (!index) {\n    index = 0;\n  }\n\n  var childIndex = reduce(this._layers, function(childIndex, layer) {\n    if (index >= layer.index) {\n      childIndex++;\n    }\n\n    return childIndex;\n  }, 0);\n\n  return {\n    group: createGroup(this._viewport, 'layer-' + name, childIndex),\n    index: index\n  };\n\n};\n\n/**\n * Returns the html element that encloses the\n * drawing canvas.\n *\n * @return {DOMNode}\n */\nCanvas.prototype.getContainer = function() {\n  return this._container;\n};\n\n\n// markers //////////////////////\n\nCanvas.prototype._updateMarker = function(element, marker, add) {\n  var container;\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  // we need to access all\n  container = this._elementRegistry._elements[element.id];\n\n  if (!container) {\n    return;\n  }\n\n  forEach([ container.gfx, container.secondaryGfx ], function(gfx) {\n    if (gfx) {\n\n      // invoke either addClass or removeClass based on mode\n      if (add) {\n        svgClasses(gfx).add(marker);\n      } else {\n        svgClasses(gfx).remove(marker);\n      }\n    }\n  });\n\n  /**\n   * An event indicating that a marker has been updated for an element\n   *\n   * @event element.marker.update\n   * @type {Object}\n   * @property {djs.model.Element} element the shape\n   * @property {Object} gfx the graphical representation of the shape\n   * @property {String} marker\n   * @property {Boolean} add true if the marker was added, false if it got removed\n   */\n  this._eventBus.fire('element.marker.update', { element: element, gfx: container.gfx, marker: marker, add: !!add });\n};\n\n\n/**\n * Adds a marker to an element (basically a css class).\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @example\n * canvas.addMarker('foo', 'some-marker');\n *\n * var fooGfx = canvas.getGraphics('foo');\n *\n * fooGfx; // <g class=\"... some-marker\"> ... </g>\n *\n * @param {String|djs.model.Base} element\n * @param {String} marker\n */\nCanvas.prototype.addMarker = function(element, marker) {\n  this._updateMarker(element, marker, true);\n};\n\n\n/**\n * Remove a marker from an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.removeMarker = function(element, marker) {\n  this._updateMarker(element, marker, false);\n};\n\n/**\n * Check the existence of a marker on element.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.hasMarker = function(element, marker) {\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  var gfx = this.getGraphics(element);\n\n  return svgClasses(gfx).has(marker);\n};\n\n/**\n * Toggles a marker on an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.toggleMarker = function(element, marker) {\n  if (this.hasMarker(element, marker)) {\n    this.removeMarker(element, marker);\n  } else {\n    this.addMarker(element, marker);\n  }\n};\n\nCanvas.prototype.getRootElement = function() {\n  if (!this._rootElement) {\n    this.setRootElement({ id: '__implicitroot', children: [] });\n  }\n\n  return this._rootElement;\n};\n\n\n\n// root element handling //////////////////////\n\n/**\n * Sets a given element as the new root element for the canvas\n * and returns the new root element.\n *\n * @param {Object|djs.model.Root} element\n * @param {Boolean} [override] whether to override the current root element, if any\n *\n * @return {Object|djs.model.Root} new root element\n */\nCanvas.prototype.setRootElement = function(element, override) {\n\n  if (element) {\n    this._ensureValid('root', element);\n  }\n\n  var currentRoot = this._rootElement,\n      elementRegistry = this._elementRegistry,\n      eventBus = this._eventBus;\n\n  if (currentRoot) {\n    if (!override) {\n      throw new Error('rootElement already set, need to specify override');\n    }\n\n    // simulate element remove event sequence\n    eventBus.fire('root.remove', { element: currentRoot });\n    eventBus.fire('root.removed', { element: currentRoot });\n\n    elementRegistry.remove(currentRoot);\n  }\n\n  if (element) {\n    var gfx = this.getDefaultLayer();\n\n    // resemble element add event sequence\n    eventBus.fire('root.add', { element: element });\n\n    elementRegistry.add(element, gfx, this._svg);\n\n    eventBus.fire('root.added', { element: element, gfx: gfx });\n  }\n\n  this._rootElement = element;\n\n  return element;\n};\n\n\n\n// add functionality //////////////////////\n\nCanvas.prototype._ensureValid = function(type, element) {\n  if (!element.id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elementRegistry.get(element.id)) {\n    throw new Error('element with id ' + element.id + ' already exists');\n  }\n\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\n\n  var valid = every(requiredAttrs, function(attr) {\n    return typeof element[attr] !== 'undefined';\n  });\n\n  if (!valid) {\n    throw new Error(\n      'must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\n  }\n};\n\nCanvas.prototype._setParent = function(element, parent, parentIndex) {\n  collectionAdd(parent.children, element, parentIndex);\n  element.parent = parent;\n};\n\n/**\n * Adds an element to the canvas.\n *\n * This wires the parent <-> child relationship between the element and\n * a explicitly specified parent or an implicit root element.\n *\n * During add it emits the events\n *\n *  * <{type}.add> (element, parent)\n *  * <{type}.added> (element, gfx)\n *\n * Extensions may hook into these events to perform their magic.\n *\n * @param {String} type\n * @param {Object|djs.model.Base} element\n * @param {Object|djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {Object|djs.model.Base} the added element\n */\nCanvas.prototype._addElement = function(type, element, parent, parentIndex) {\n\n  parent = parent || this.getRootElement();\n\n  var eventBus = this._eventBus,\n      graphicsFactory = this._graphicsFactory;\n\n  this._ensureValid(type, element);\n\n  eventBus.fire(type + '.add', { element: element, parent: parent });\n\n  this._setParent(element, parent, parentIndex);\n\n  // create graphics\n  var gfx = graphicsFactory.create(type, element, parentIndex);\n\n  this._elementRegistry.add(element, gfx);\n\n  // update its visual\n  graphicsFactory.update(type, element, gfx);\n\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\n\n  return element;\n};\n\n/**\n * Adds a shape to the canvas\n *\n * @param {Object|djs.model.Shape} shape to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {djs.model.Shape} the added shape\n */\nCanvas.prototype.addShape = function(shape, parent, parentIndex) {\n  return this._addElement('shape', shape, parent, parentIndex);\n};\n\n/**\n * Adds a connection to the canvas\n *\n * @param {Object|djs.model.Connection} connection to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {djs.model.Connection} the added connection\n */\nCanvas.prototype.addConnection = function(connection, parent, parentIndex) {\n  return this._addElement('connection', connection, parent, parentIndex);\n};\n\n\n/**\n * Internal remove element\n */\nCanvas.prototype._removeElement = function(element, type) {\n\n  var elementRegistry = this._elementRegistry,\n      graphicsFactory = this._graphicsFactory,\n      eventBus = this._eventBus;\n\n  element = elementRegistry.get(element.id || element);\n\n  if (!element) {\n\n    // element was removed already\n    return;\n  }\n\n  eventBus.fire(type + '.remove', { element: element });\n\n  graphicsFactory.remove(element);\n\n  // unset parent <-> child relationship\n  collectionRemove(element.parent && element.parent.children, element);\n  element.parent = null;\n\n  eventBus.fire(type + '.removed', { element: element });\n\n  elementRegistry.remove(element);\n\n  return element;\n};\n\n\n/**\n * Removes a shape from the canvas\n *\n * @param {String|djs.model.Shape} shape or shape id to be removed\n *\n * @return {djs.model.Shape} the removed shape\n */\nCanvas.prototype.removeShape = function(shape) {\n\n  /**\n   * An event indicating that a shape is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.remove\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n\n  /**\n   * An event indicating that a shape has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.removed\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n  return this._removeElement(shape, 'shape');\n};\n\n\n/**\n * Removes a connection from the canvas\n *\n * @param {String|djs.model.Connection} connection or connection id to be removed\n *\n * @return {djs.model.Connection} the removed connection\n */\nCanvas.prototype.removeConnection = function(connection) {\n\n  /**\n   * An event indicating that a connection is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.remove\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n\n  /**\n   * An event indicating that a connection has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.removed\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n  return this._removeElement(connection, 'connection');\n};\n\n\n/**\n * Return the graphical object underlaying a certain diagram element\n *\n * @param {String|djs.model.Base} element descriptor of the element\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nCanvas.prototype.getGraphics = function(element, secondary) {\n  return this._elementRegistry.getGraphics(element, secondary);\n};\n\n\n/**\n * Perform a viewbox update via a given change function.\n *\n * @param {Function} changeFn\n */\nCanvas.prototype._changeViewbox = function(changeFn) {\n\n  // notify others of the upcoming viewbox change\n  this._eventBus.fire('canvas.viewbox.changing');\n\n  // perform actual change\n  changeFn.apply(this);\n\n  // reset the cached viewbox so that\n  // a new get operation on viewbox or zoom\n  // triggers a viewbox re-computation\n  this._cachedViewbox = null;\n\n  // notify others of the change; this step\n  // may or may not be debounced\n  this._viewboxChanged();\n};\n\nCanvas.prototype._viewboxChanged = function() {\n  this._eventBus.fire('canvas.viewbox.changed', { viewbox: this.viewbox() });\n};\n\n\n/**\n * Gets or sets the view box of the canvas, i.e. the\n * area that is currently displayed.\n *\n * The getter may return a cached viewbox (if it is currently\n * changing). To force a recomputation, pass `false` as the first argument.\n *\n * @example\n *\n * canvas.viewbox({ x: 100, y: 100, width: 500, height: 500 })\n *\n * // sets the visible area of the diagram to (100|100) -> (600|100)\n * // and and scales it according to the diagram width\n *\n * var viewbox = canvas.viewbox(); // pass `false` to force recomputing the box.\n *\n * console.log(viewbox);\n * // {\n * //   inner: Dimensions,\n * //   outer: Dimensions,\n * //   scale,\n * //   x, y,\n * //   width, height\n * // }\n *\n * // if the current diagram is zoomed and scrolled, you may reset it to the\n * // default zoom via this method, too:\n *\n * var zoomedAndScrolledViewbox = canvas.viewbox();\n *\n * canvas.viewbox({\n *   x: 0,\n *   y: 0,\n *   width: zoomedAndScrolledViewbox.outer.width,\n *   height: zoomedAndScrolledViewbox.outer.height\n * });\n *\n * @param  {Object} [box] the new view box to set\n * @param  {Number} box.x the top left X coordinate of the canvas visible in view box\n * @param  {Number} box.y the top left Y coordinate of the canvas visible in view box\n * @param  {Number} box.width the visible width\n * @param  {Number} box.height\n *\n * @return {Object} the current view box\n */\nCanvas.prototype.viewbox = function(box) {\n\n  if (box === undefined && this._cachedViewbox) {\n    return this._cachedViewbox;\n  }\n\n  var viewport = this._viewport,\n      innerBox,\n      outerBox = this.getSize(),\n      matrix,\n      transform,\n      scale,\n      x, y;\n\n  if (!box) {\n\n    // compute the inner box based on the\n    // diagrams default layer. This allows us to exclude\n    // external components, such as overlays\n    innerBox = this.getDefaultLayer().getBBox();\n\n    transform = svgTransform(viewport);\n    matrix = transform ? transform.matrix : createMatrix();\n    scale = round(matrix.a, 1000);\n\n    x = round(-matrix.e || 0, 1000);\n    y = round(-matrix.f || 0, 1000);\n\n    box = this._cachedViewbox = {\n      x: x ? x / scale : 0,\n      y: y ? y / scale : 0,\n      width: outerBox.width / scale,\n      height: outerBox.height / scale,\n      scale: scale,\n      inner: {\n        width: innerBox.width,\n        height: innerBox.height,\n        x: innerBox.x,\n        y: innerBox.y\n      },\n      outer: outerBox\n    };\n\n    return box;\n  } else {\n\n    this._changeViewbox(function() {\n      scale = Math.min(outerBox.width / box.width, outerBox.height / box.height);\n\n      var matrix = this._svg.createSVGMatrix()\n        .scale(scale)\n        .translate(-box.x, -box.y);\n\n      svgTransform(viewport, matrix);\n    });\n  }\n\n  return box;\n};\n\n\n/**\n * Gets or sets the scroll of the canvas.\n *\n * @param {Object} [delta] the new scroll to apply.\n *\n * @param {Number} [delta.dx]\n * @param {Number} [delta.dy]\n */\nCanvas.prototype.scroll = function(delta) {\n\n  var node = this._viewport;\n  var matrix = node.getCTM();\n\n  if (delta) {\n    this._changeViewbox(function() {\n      delta = assign({ dx: 0, dy: 0 }, delta || {});\n\n      matrix = this._svg.createSVGMatrix().translate(delta.dx, delta.dy).multiply(matrix);\n\n      setCTM(node, matrix);\n    });\n  }\n\n  return { x: matrix.e, y: matrix.f };\n};\n\n\n/**\n * Gets or sets the current zoom of the canvas, optionally zooming\n * to the specified position.\n *\n * The getter may return a cached zoom level. Call it with `false` as\n * the first argument to force recomputation of the current level.\n *\n * @param {String|Number} [newScale] the new zoom level, either a number, i.e. 0.9,\n *                                   or `fit-viewport` to adjust the size to fit the current viewport\n * @param {String|Point} [center] the reference point { x: .., y: ..} to zoom to, 'auto' to zoom into mid or null\n *\n * @return {Number} the current scale\n */\nCanvas.prototype.zoom = function(newScale, center) {\n\n  if (!newScale) {\n    return this.viewbox(newScale).scale;\n  }\n\n  if (newScale === 'fit-viewport') {\n    return this._fitViewport(center);\n  }\n\n  var outer,\n      matrix;\n\n  this._changeViewbox(function() {\n\n    if (typeof center !== 'object') {\n      outer = this.viewbox().outer;\n\n      center = {\n        x: outer.width / 2,\n        y: outer.height / 2\n      };\n    }\n\n    matrix = this._setZoom(newScale, center);\n  });\n\n  return round(matrix.a, 1000);\n};\n\nfunction setCTM(node, m) {\n  var mstr = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\n  node.setAttribute('transform', mstr);\n}\n\nCanvas.prototype._fitViewport = function(center) {\n\n  var vbox = this.viewbox(),\n      outer = vbox.outer,\n      inner = vbox.inner,\n      newScale,\n      newViewbox;\n\n  // display the complete diagram without zooming in.\n  // instead of relying on internal zoom, we perform a\n  // hard reset on the canvas viewbox to realize this\n  //\n  // if diagram does not need to be zoomed in, we focus it around\n  // the diagram origin instead\n\n  if (inner.x >= 0 &&\n      inner.y >= 0 &&\n      inner.x + inner.width <= outer.width &&\n      inner.y + inner.height <= outer.height &&\n      !center) {\n\n    newViewbox = {\n      x: 0,\n      y: 0,\n      width: Math.max(inner.width + inner.x, outer.width),\n      height: Math.max(inner.height + inner.y, outer.height)\n    };\n  } else {\n\n    newScale = Math.min(1, outer.width / inner.width, outer.height / inner.height);\n    newViewbox = {\n      x: inner.x + (center ? inner.width / 2 - outer.width / newScale / 2 : 0),\n      y: inner.y + (center ? inner.height / 2 - outer.height / newScale / 2 : 0),\n      width: outer.width / newScale,\n      height: outer.height / newScale\n    };\n  }\n\n  this.viewbox(newViewbox);\n\n  return this.viewbox(false).scale;\n};\n\n\nCanvas.prototype._setZoom = function(scale, center) {\n\n  var svg = this._svg,\n      viewport = this._viewport;\n\n  var matrix = svg.createSVGMatrix();\n  var point = svg.createSVGPoint();\n\n  var centerPoint,\n      originalPoint,\n      currentMatrix,\n      scaleMatrix,\n      newMatrix;\n\n  currentMatrix = viewport.getCTM();\n\n  var currentScale = currentMatrix.a;\n\n  if (center) {\n    centerPoint = assign(point, center);\n\n    // revert applied viewport transformations\n    originalPoint = centerPoint.matrixTransform(currentMatrix.inverse());\n\n    // create scale matrix\n    scaleMatrix = matrix\n      .translate(originalPoint.x, originalPoint.y)\n      .scale(1 / currentScale * scale)\n      .translate(-originalPoint.x, -originalPoint.y);\n\n    newMatrix = currentMatrix.multiply(scaleMatrix);\n  } else {\n    newMatrix = matrix.scale(scale);\n  }\n\n  setCTM(this._viewport, newMatrix);\n\n  return newMatrix;\n};\n\n\n/**\n * Returns the size of the canvas\n *\n * @return {Dimensions}\n */\nCanvas.prototype.getSize = function() {\n  return {\n    width: this._container.clientWidth,\n    height: this._container.clientHeight\n  };\n};\n\n\n/**\n * Return the absolute bounding box for the given element\n *\n * The absolute bounding box may be used to display overlays in the\n * callers (browser) coordinate system rather than the zoomed in/out\n * canvas coordinates.\n *\n * @param  {ElementDescriptor} element\n * @return {Bounds} the absolute bounding box\n */\nCanvas.prototype.getAbsoluteBBox = function(element) {\n  var vbox = this.viewbox();\n  var bbox;\n\n  // connection\n  // use svg bbox\n  if (element.waypoints) {\n    var gfx = this.getGraphics(element);\n\n    bbox = gfx.getBBox();\n  }\n\n  // shapes\n  // use data\n  else {\n    bbox = element;\n  }\n\n  var x = bbox.x * vbox.scale - vbox.x * vbox.scale;\n  var y = bbox.y * vbox.scale - vbox.y * vbox.scale;\n\n  var width = bbox.width * vbox.scale;\n  var height = bbox.height * vbox.scale;\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n};\n\n/**\n * Fires an event in order other modules can react to the\n * canvas resizing\n */\nCanvas.prototype.resized = function() {\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n\n  this._eventBus.fire('canvas.resized');\n};\n","var ELEMENT_ID = 'data-element-id';\n\nimport { attr as svgAttr } from 'tiny-svg';\n\n\n/**\n * @class\n *\n * A registry that keeps track of all shapes in the diagram.\n */\nexport default function ElementRegistry(eventBus) {\n  this._elements = {};\n\n  this._eventBus = eventBus;\n}\n\nElementRegistry.$inject = [ 'eventBus' ];\n\n/**\n * Register a pair of (element, gfx, (secondaryGfx)).\n *\n * @param {djs.model.Base} element\n * @param {SVGElement} gfx\n * @param {SVGElement} [secondaryGfx] optional other element to register, too\n */\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\n\n  var id = element.id;\n\n  this._validateId(id);\n\n  // associate dom node with element\n  svgAttr(gfx, ELEMENT_ID, id);\n\n  if (secondaryGfx) {\n    svgAttr(secondaryGfx, ELEMENT_ID, id);\n  }\n\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\n};\n\n/**\n * Removes an element from the registry.\n *\n * @param {djs.model.Base} element\n */\nElementRegistry.prototype.remove = function(element) {\n  var elements = this._elements,\n      id = element.id || element,\n      container = id && elements[id];\n\n  if (container) {\n\n    // unset element id on gfx\n    svgAttr(container.gfx, ELEMENT_ID, '');\n\n    if (container.secondaryGfx) {\n      svgAttr(container.secondaryGfx, ELEMENT_ID, '');\n    }\n\n    delete elements[id];\n  }\n};\n\n/**\n * Update the id of an element\n *\n * @param {djs.model.Base} element\n * @param {String} newId\n */\nElementRegistry.prototype.updateId = function(element, newId) {\n\n  this._validateId(newId);\n\n  if (typeof element === 'string') {\n    element = this.get(element);\n  }\n\n  this._eventBus.fire('element.updateId', {\n    element: element,\n    newId: newId\n  });\n\n  var gfx = this.getGraphics(element),\n      secondaryGfx = this.getGraphics(element, true);\n\n  this.remove(element);\n\n  element.id = newId;\n\n  this.add(element, gfx, secondaryGfx);\n};\n\n/**\n * Return the model element for a given id or graphics.\n *\n * @example\n *\n * elementRegistry.get('SomeElementId_1');\n * elementRegistry.get(gfx);\n *\n *\n * @param {String|SVGElement} filter for selecting the element\n *\n * @return {djs.model.Base}\n */\nElementRegistry.prototype.get = function(filter) {\n  var id;\n\n  if (typeof filter === 'string') {\n    id = filter;\n  } else {\n    id = filter && svgAttr(filter, ELEMENT_ID);\n  }\n\n  var container = this._elements[id];\n  return container && container.element;\n};\n\n/**\n * Return all elements that match a given filter function.\n *\n * @param {Function} fn\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.filter = function(fn) {\n\n  var filtered = [];\n\n  this.forEach(function(element, gfx) {\n    if (fn(element, gfx)) {\n      filtered.push(element);\n    }\n  });\n\n  return filtered;\n};\n\n/**\n * Return all rendered model elements.\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.getAll = function() {\n  return this.filter(function(e) { return e; });\n};\n\n/**\n * Iterate over all diagram elements.\n *\n * @param {Function} fn\n */\nElementRegistry.prototype.forEach = function(fn) {\n\n  var map = this._elements;\n\n  Object.keys(map).forEach(function(id) {\n    var container = map[id],\n        element = container.element,\n        gfx = container.gfx;\n\n    return fn(element, gfx);\n  });\n};\n\n/**\n * Return the graphical representation of an element or its id.\n *\n * @example\n * elementRegistry.getGraphics('SomeElementId_1');\n * elementRegistry.getGraphics(rootElement); // <g ...>\n *\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\n *\n *\n * @param {String|djs.model.Base} filter\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\n  var id = filter.id || filter;\n\n  var container = this._elements[id];\n  return container && (secondary ? container.secondaryGfx : container.gfx);\n};\n\n/**\n * Validate the suitability of the given id and signals a problem\n * with an exception.\n *\n * @param {String} id\n *\n * @throws {Error} if id is empty or already assigned\n */\nElementRegistry.prototype._validateId = function(id) {\n  if (!id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elements[id]) {\n    throw new Error('element with id ' + id + ' already added');\n  }\n};\n","import { assign } from 'min-dash';\nimport inherits from 'inherits';\n\nimport Refs from 'object-refs';\n\nvar parentRefs = new Refs({ name: 'children', enumerable: true, collection: true }, { name: 'parent' }),\n    labelRefs = new Refs({ name: 'labels', enumerable: true, collection: true }, { name: 'labelTarget' }),\n    attacherRefs = new Refs({ name: 'attachers', collection: true }, { name: 'host' }),\n    outgoingRefs = new Refs({ name: 'outgoing', collection: true }, { name: 'source' }),\n    incomingRefs = new Refs({ name: 'incoming', collection: true }, { name: 'target' });\n\n/**\n * @namespace djs.model\n */\n\n/**\n * @memberOf djs.model\n */\n\n/**\n * The basic graphical representation\n *\n * @class\n *\n * @abstract\n */\nexport function Base() {\n\n  /**\n   * The object that backs up the shape\n   *\n   * @name Base#businessObject\n   * @type Object\n   */\n  Object.defineProperty(this, 'businessObject', {\n    writable: true\n  });\n\n\n  /**\n   * Single label support, will mapped to multi label array\n   *\n   * @name Base#label\n   * @type Object\n   */\n  Object.defineProperty(this, 'label', {\n    get: function() {\n      return this.labels[0];\n    },\n    set: function(newLabel) {\n\n      var label = this.label,\n          labels = this.labels;\n\n      if (!newLabel && label) {\n        labels.remove(label);\n      } else {\n        labels.add(newLabel, 0);\n      }\n    }\n  });\n\n  /**\n   * The parent shape\n   *\n   * @name Base#parent\n   * @type Shape\n   */\n  parentRefs.bind(this, 'parent');\n\n  /**\n   * The list of labels\n   *\n   * @name Base#labels\n   * @type Label\n   */\n  labelRefs.bind(this, 'labels');\n\n  /**\n   * The list of outgoing connections\n   *\n   * @name Base#outgoing\n   * @type Array<Connection>\n   */\n  outgoingRefs.bind(this, 'outgoing');\n\n  /**\n   * The list of incoming connections\n   *\n   * @name Base#incoming\n   * @type Array<Connection>\n   */\n  incomingRefs.bind(this, 'incoming');\n}\n\n\n/**\n * A graphical object\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nexport function Shape() {\n  Base.call(this);\n\n  /**\n   * Indicates frame shapes\n   *\n   * @name Shape#isFrame\n   * @type Boolean\n   */\n\n  /**\n   * The list of children\n   *\n   * @name Shape#children\n   * @type Array<Base>\n   */\n  parentRefs.bind(this, 'children');\n\n  /**\n   * @name Shape#host\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'host');\n\n  /**\n   * @name Shape#attachers\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'attachers');\n}\n\ninherits(Shape, Base);\n\n\n/**\n * A root graphical object\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nexport function Root() {\n  Shape.call(this);\n}\n\ninherits(Root, Shape);\n\n\n/**\n * A label for an element\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nexport function Label() {\n  Shape.call(this);\n\n  /**\n   * The labeled element\n   *\n   * @name Label#labelTarget\n   * @type Base\n   */\n  labelRefs.bind(this, 'labelTarget');\n}\n\ninherits(Label, Shape);\n\n\n/**\n * A connection between two elements\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nexport function Connection() {\n  Base.call(this);\n\n  /**\n   * The element this connection originates from\n   *\n   * @name Connection#source\n   * @type Base\n   */\n  outgoingRefs.bind(this, 'source');\n\n  /**\n   * The element this connection points to\n   *\n   * @name Connection#target\n   * @type Base\n   */\n  incomingRefs.bind(this, 'target');\n}\n\ninherits(Connection, Base);\n\n\nvar types = {\n  connection: Connection,\n  shape: Shape,\n  label: Label,\n  root: Root\n};\n\n/**\n * Creates a new model element of the specified type\n *\n * @method create\n *\n * @example\n *\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\n *\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\n *\n * @param  {String} type lower-cased model name\n * @param  {Object} attrs attributes to initialize the new model instance with\n *\n * @return {Base} the new model instance\n */\nexport function create(type, attrs) {\n  var Type = types[type];\n  if (!Type) {\n    throw new Error('unknown type: <' + type + '>');\n  }\n  return assign(new Type(), attrs);\n}","import {\n  create\n} from '../model';\n\nimport { assign } from 'min-dash';\n\n/**\n * A factory for diagram-js shapes\n */\nexport default function ElementFactory() {\n  this._uid = 12;\n}\n\n\nElementFactory.prototype.createRoot = function(attrs) {\n  return this.create('root', attrs);\n};\n\nElementFactory.prototype.createLabel = function(attrs) {\n  return this.create('label', attrs);\n};\n\nElementFactory.prototype.createShape = function(attrs) {\n  return this.create('shape', attrs);\n};\n\nElementFactory.prototype.createConnection = function(attrs) {\n  return this.create('connection', attrs);\n};\n\n/**\n * Create a model element with the given type and\n * a number of pre-set attributes.\n *\n * @param  {String} type\n * @param  {Object} attrs\n * @return {djs.model.Base} the newly created model instance\n */\nElementFactory.prototype.create = function(type, attrs) {\n\n  attrs = assign({}, attrs || {});\n\n  if (!attrs.id) {\n    attrs.id = type + '_' + (this._uid++);\n  }\n\n  return create(type, attrs);\n};","import {\n  isFunction,\n  isArray,\n  isNumber,\n  bind,\n  assign\n} from 'min-dash';\n\nvar FN_REF = '__fn';\n\nvar DEFAULT_PRIORITY = 1000;\n\nvar slice = Array.prototype.slice;\n\n/**\n * A general purpose event bus.\n *\n * This component is used to communicate across a diagram instance.\n * Other parts of a diagram can use it to listen to and broadcast events.\n *\n *\n * ## Registering for Events\n *\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\n * methods to register for events. {@link EventBus#off} can be used to\n * remove event registrations. Listeners receive an instance of {@link Event}\n * as the first argument. It allows them to hook into the event execution.\n *\n * ```javascript\n *\n * // listen for event\n * eventBus.on('foo', function(event) {\n *\n *   // access event type\n *   event.type; // 'foo'\n *\n *   // stop propagation to other listeners\n *   event.stopPropagation();\n *\n *   // prevent event default\n *   event.preventDefault();\n * });\n *\n * // listen for event with custom payload\n * eventBus.on('bar', function(event, payload) {\n *   console.log(payload);\n * });\n *\n * // listen for event returning value\n * eventBus.on('foobar', function(event) {\n *\n *   // stop event propagation + prevent default\n *   return false;\n *\n *   // stop event propagation + return custom result\n *   return {\n *     complex: 'listening result'\n *   };\n * });\n *\n *\n * // listen with custom priority (default=1000, higher is better)\n * eventBus.on('priorityfoo', 1500, function(event) {\n *   console.log('invoked first!');\n * });\n *\n *\n * // listen for event and pass the context (`this`)\n * eventBus.on('foobar', function(event) {\n *   this.foo();\n * }, this);\n * ```\n *\n *\n * ## Emitting Events\n *\n * Events can be emitted via the event bus using {@link EventBus#fire}.\n *\n * ```javascript\n *\n * // false indicates that the default action\n * // was prevented by listeners\n * if (eventBus.fire('foo') === false) {\n *   console.log('default has been prevented!');\n * };\n *\n *\n * // custom args + return value listener\n * eventBus.on('sum', function(event, a, b) {\n *   return a + b;\n * });\n *\n * // you can pass custom arguments + retrieve result values.\n * var sum = eventBus.fire('sum', 1, 2);\n * console.log(sum); // 3\n * ```\n */\nexport default function EventBus() {\n  this._listeners = {};\n\n  // cleanup on destroy on lowest priority to allow\n  // message passing until the bitter end\n  this.on('diagram.destroy', 1, this._destroy, this);\n}\n\n\n/**\n * Register an event listener for events with the given name.\n *\n * The callback will be invoked with `event, ...additionalArguments`\n * that have been passed to {@link EventBus#fire}.\n *\n * Returning false from a listener will prevent the events default action\n * (if any is specified). To stop an event from being processed further in\n * other listeners execute {@link Event#stopPropagation}.\n *\n * Returning anything but `undefined` from a listener will stop the listener propagation.\n *\n * @param {String|Array<String>} events\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.on = function(events, priority, callback, that) {\n\n  events = isArray(events) ? events : [ events ];\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  var actualCallback = callback;\n\n  if (that) {\n    actualCallback = bind(callback, that);\n\n    // make sure we remember and are able to remove\n    // bound callbacks via {@link #off} using the original\n    // callback\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\n  }\n\n  var self = this;\n\n  events.forEach(function(e) {\n    self._addListener(e, {\n      priority: priority,\n      callback: actualCallback,\n      next: null\n    });\n  });\n};\n\n\n/**\n * Register an event listener that is executed only once.\n *\n * @param {String} event the event name to register for\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback the callback to execute\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.once = function(event, priority, callback, that) {\n  var self = this;\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  function wrappedCallback() {\n    var result = callback.apply(that, arguments);\n\n    self.off(event, wrappedCallback);\n\n    return result;\n  }\n\n  // make sure we remember and are able to remove\n  // bound callbacks via {@link #off} using the original\n  // callback\n  wrappedCallback[FN_REF] = callback;\n\n  this.on(event, priority, wrappedCallback);\n};\n\n\n/**\n * Removes event listeners by event and callback.\n *\n * If no callback is given, all listeners for a given event name are being removed.\n *\n * @param {String|Array<String>} events\n * @param {Function} [callback]\n */\nEventBus.prototype.off = function(events, callback) {\n\n  events = isArray(events) ? events : [ events ];\n\n  var self = this;\n\n  events.forEach(function(event) {\n    self._removeListener(event, callback);\n  });\n\n};\n\n\n/**\n * Create an EventBus event.\n *\n * @param {Object} data\n *\n * @return {Object} event, recognized by the eventBus\n */\nEventBus.prototype.createEvent = function(data) {\n  var event = new InternalEvent();\n\n  event.init(data);\n\n  return event;\n};\n\n\n/**\n * Fires a named event.\n *\n * @example\n *\n * // fire event by name\n * events.fire('foo');\n *\n * // fire event object with nested type\n * var event = { type: 'foo' };\n * events.fire(event);\n *\n * // fire event with explicit type\n * var event = { x: 10, y: 20 };\n * events.fire('element.moved', event);\n *\n * // pass additional arguments to the event\n * events.on('foo', function(event, bar) {\n *   alert(bar);\n * });\n *\n * events.fire({ type: 'foo' }, 'I am bar!');\n *\n * @param {String} [name] the optional event name\n * @param {Object} [event] the event object\n * @param {...Object} additional arguments to be passed to the callback functions\n *\n * @return {Boolean} the events return value, if specified or false if the\n *                   default action was prevented by listeners\n */\nEventBus.prototype.fire = function(type, data) {\n\n  var event,\n      firstListener,\n      returnValue,\n      args;\n\n  args = slice.call(arguments);\n\n  if (typeof type === 'object') {\n    event = type;\n    type = event.type;\n  }\n\n  if (!type) {\n    throw new Error('no event type specified');\n  }\n\n  firstListener = this._listeners[type];\n\n  if (!firstListener) {\n    return;\n  }\n\n  // we make sure we fire instances of our home made\n  // events here. We wrap them only once, though\n  if (data instanceof InternalEvent) {\n\n    // we are fine, we alread have an event\n    event = data;\n  } else {\n    event = this.createEvent(data);\n  }\n\n  // ensure we pass the event as the first parameter\n  args[0] = event;\n\n  // original event type (in case we delegate)\n  var originalType = event.type;\n\n  // update event type before delegation\n  if (type !== originalType) {\n    event.type = type;\n  }\n\n  try {\n    returnValue = this._invokeListeners(event, args, firstListener);\n  } finally {\n\n    // reset event type after delegation\n    if (type !== originalType) {\n      event.type = originalType;\n    }\n  }\n\n  // set the return value to false if the event default\n  // got prevented and no other return value exists\n  if (returnValue === undefined && event.defaultPrevented) {\n    returnValue = false;\n  }\n\n  return returnValue;\n};\n\n\nEventBus.prototype.handleError = function(error) {\n  return this.fire('error', { error: error }) === false;\n};\n\n\nEventBus.prototype._destroy = function() {\n  this._listeners = {};\n};\n\nEventBus.prototype._invokeListeners = function(event, args, listener) {\n\n  var returnValue;\n\n  while (listener) {\n\n    // handle stopped propagation\n    if (event.cancelBubble) {\n      break;\n    }\n\n    returnValue = this._invokeListener(event, args, listener);\n\n    listener = listener.next;\n  }\n\n  return returnValue;\n};\n\nEventBus.prototype._invokeListener = function(event, args, listener) {\n\n  var returnValue;\n\n  try {\n\n    // returning false prevents the default action\n    returnValue = invokeFunction(listener.callback, args);\n\n    // stop propagation on return value\n    if (returnValue !== undefined) {\n      event.returnValue = returnValue;\n      event.stopPropagation();\n    }\n\n    // prevent default on return false\n    if (returnValue === false) {\n      event.preventDefault();\n    }\n  } catch (e) {\n    if (!this.handleError(e)) {\n      console.error('unhandled error in event listener');\n      console.error(e.stack);\n\n      throw e;\n    }\n  }\n\n  return returnValue;\n};\n\n/*\n * Add new listener with a certain priority to the list\n * of listeners (for the given event).\n *\n * The semantics of listener registration / listener execution are\n * first register, first serve: New listeners will always be inserted\n * after existing listeners with the same priority.\n *\n * Example: Inserting two listeners with priority 1000 and 1300\n *\n *    * before: [ 1500, 1500, 1000, 1000 ]\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\n *\n * @param {String} event\n * @param {Object} listener { priority, callback }\n */\nEventBus.prototype._addListener = function(event, newListener) {\n\n  var listener = this._getListeners(event),\n      previousListener;\n\n  // no prior listeners\n  if (!listener) {\n    this._setListeners(event, newListener);\n\n    return;\n  }\n\n  // ensure we order listeners by priority from\n  // 0 (high) to n > 0 (low)\n  while (listener) {\n\n    if (listener.priority < newListener.priority) {\n\n      newListener.next = listener;\n\n      if (previousListener) {\n        previousListener.next = newListener;\n      } else {\n        this._setListeners(event, newListener);\n      }\n\n      return;\n    }\n\n    previousListener = listener;\n    listener = listener.next;\n  }\n\n  // add new listener to back\n  previousListener.next = newListener;\n};\n\n\nEventBus.prototype._getListeners = function(name) {\n  return this._listeners[name];\n};\n\nEventBus.prototype._setListeners = function(name, listener) {\n  this._listeners[name] = listener;\n};\n\nEventBus.prototype._removeListener = function(event, callback) {\n\n  var listener = this._getListeners(event),\n      nextListener,\n      previousListener,\n      listenerCallback;\n\n  if (!callback) {\n\n    // clear listeners\n    this._setListeners(event, null);\n\n    return;\n  }\n\n  while (listener) {\n\n    nextListener = listener.next;\n\n    listenerCallback = listener.callback;\n\n    if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\n      if (previousListener) {\n        previousListener.next = nextListener;\n      } else {\n\n        // new first listener\n        this._setListeners(event, nextListener);\n      }\n    }\n\n    previousListener = listener;\n    listener = nextListener;\n  }\n};\n\n/**\n * A event that is emitted via the event bus.\n */\nfunction InternalEvent() { }\n\nInternalEvent.prototype.stopPropagation = function() {\n  this.cancelBubble = true;\n};\n\nInternalEvent.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n};\n\nInternalEvent.prototype.init = function(data) {\n  assign(this, data || {});\n};\n\n\n/**\n * Invoke function. Be fast...\n *\n * @param {Function} fn\n * @param {Array<Object>} args\n *\n * @return {Any}\n */\nfunction invokeFunction(fn, args) {\n  return fn.apply(null, args);\n}\n","/**\n * SVGs for elements are generated by the {@link GraphicsFactory}.\n *\n * This utility gives quick access to the important semantic\n * parts of an element.\n */\n\n/**\n * Returns the visual part of a diagram element\n *\n * @param {Snap<SVGElement>} gfx\n *\n * @return {Snap<SVGElement>}\n */\nexport function getVisual(gfx) {\n  return gfx.childNodes[0];\n}\n\n/**\n * Returns the children for a given diagram element.\n *\n * @param {Snap<SVGElement>} gfx\n * @return {Snap<SVGElement>}\n */\nexport function getChildren(gfx) {\n  return gfx.parentNode.childNodes[1];\n}","import {\r\n  transform as svgTransform,\r\n  createTransform\r\n} from 'tiny-svg';\r\n\r\n\r\n/**\r\n * @param {<SVGElement>} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} angle\r\n * @param {Number} amount\r\n */\r\nexport function transform(gfx, x, y, angle, amount) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  var scale = createTransform();\r\n  scale.setScale(amount || 1, amount || 1);\r\n\r\n  svgTransform(gfx, [ translate, rotate, scale ]);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nexport function translate(gfx, x, y) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  svgTransform(gfx, translate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} angle\r\n */\r\nexport function rotate(gfx, angle) {\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  svgTransform(gfx, rotate);\r\n}\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} amount\r\n */\r\nexport function scale(gfx, amount) {\r\n  var scale = createTransform();\r\n  scale.setScale(amount, amount);\r\n\r\n  svgTransform(gfx, scale);\r\n}","/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\nfunction attr(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n}\n\nvar indexOf = [].indexOf;\n\nvar indexof = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n/**\n * Taken from https://github.com/component/classes\n *\n * Without the component bits.\n */\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = indexof(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if ('undefined' !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if ('undefined' !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~indexof(this.array(), name);\n};\n\n/**\n * Remove all children from the given element.\n */\nfunction clear(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n}\n\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nvar matchesSelector = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}\n\nvar closest = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode;\r\n\r\n  while (parent && parent !== document) {\r\n    if (matchesSelector(parent, selector)) return parent;\r\n    parent = parent.parentNode;\r\n  }\r\n};\n\nvar bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar bind_1 = function(el, type, fn, capture){\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nvar unbind_1 = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};\n\nvar componentEvent = {\n\tbind: bind_1,\n\tunbind: unbind_1\n};\n\n/**\n * Module dependencies.\n */\n\n\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\n// Some events don't bubble, so we want to bind to the capture phase instead\n// when delegating.\nvar forceCaptureEvents = ['focus', 'blur'];\n\nvar bind$1 = function(el, selector, type, fn, capture){\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\n\n  return componentEvent.bind(el, type, function(e){\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nvar unbind$1 = function(el, type, fn, capture){\n  if (forceCaptureEvents.indexOf(type) !== -1) capture = true;\n\n  componentEvent.unbind(el, type, fn, capture);\n};\n\nvar delegateEvents = {\n\tbind: bind$1,\n\tunbind: unbind$1\n};\n\n/**\n * Expose `parse`.\n */\n\nvar domify = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^\\s+|\\s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n\nvar proto$1 = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor$1 = proto$1.matches\n  || proto$1.matchesSelector\n  || proto$1.webkitMatchesSelector\n  || proto$1.mozMatchesSelector\n  || proto$1.msMatchesSelector\n  || proto$1.oMatchesSelector;\n\nvar matchesSelector$1 = match$1;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match$1(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor$1) return vendor$1.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\nfunction query(selector, el) {\n  el = el || document;\n\n  return el.querySelector(selector);\n}\n\nfunction all(selector, el) {\n  el = el || document;\n\n  return el.querySelectorAll(selector);\n}\n\nfunction remove(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n}\n\nexport { attr, classes, clear, closest, delegateEvents as delegate, domify, componentEvent as event, matchesSelector$1 as matches, query, all as queryAll, remove };\n","import {\n  forEach,\n  reduce\n} from 'min-dash';\n\nimport {\n  getChildren,\n  getVisual\n} from '../util/GraphicsUtil';\n\nimport { translate } from '../util/SvgTransformUtil';\n\nimport { clear as domClear } from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n/**\n * A factory that creates graphical elements\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n */\nexport default function GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\n\n\nGraphicsFactory.prototype._getChildren = function(element) {\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var childrenGfx;\n\n  // root element\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = getChildren(gfx);\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n\n  return childrenGfx;\n};\n\n/**\n * Clears the graphical representation of the element and returns the\n * cleared visual (the <g class=\"djs-visual\" /> element).\n */\nGraphicsFactory.prototype._clear = function(gfx) {\n  var visual = getVisual(gfx);\n\n  domClear(visual);\n\n  return visual;\n};\n\n/**\n * Creates a gfx container for shapes and connections\n *\n * The layout is as follows:\n *\n * <g class=\"djs-group\">\n *\n *   <!-- the gfx -->\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\n *     <g class=\"djs-visual\">\n *       <!-- the renderer draws in here -->\n *     </g>\n *\n *     <!-- extensions (overlays, click box, ...) goes here\n *   </g>\n *\n *   <!-- the gfx child nodes -->\n *   <g class=\"djs-children\"></g>\n * </g>\n *\n * @param {String} type the type of the element, i.e. shape | connection\n * @param {SVGElement} [childrenGfx]\n * @param {Number} [parentIndex] position to create container in parent\n * @param {Boolean} [isFrame] is frame element\n *\n * @return {SVGElement}\n */\nGraphicsFactory.prototype._createContainer = function(\n    type, childrenGfx, parentIndex, isFrame\n) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group');\n\n  // insert node at position\n  if (typeof parentIndex !== 'undefined') {\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\n  } else {\n    svgAppend(childrenGfx, outerGfx);\n  }\n\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n\n  if (isFrame) {\n    svgClasses(gfx).add('djs-frame');\n  }\n\n  svgAppend(outerGfx, gfx);\n\n  // create visual\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(gfx, visual);\n\n  return gfx;\n};\n\nGraphicsFactory.prototype.create = function(type, element, parentIndex) {\n  var childrenGfx = this._getChildren(element.parent);\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\n};\n\nGraphicsFactory.prototype.updateContainments = function(elements) {\n\n  var self = this,\n      elementRegistry = this._elementRegistry,\n      parents;\n\n  parents = reduce(elements, function(map, e) {\n\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n\n    return map;\n  }, {});\n\n  // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n  forEach(parents, function(parent) {\n\n    var children = parent.children;\n\n    if (!children) {\n      return;\n    }\n\n    var childGfx = self._getChildren(parent);\n\n    forEach(children.slice().reverse(), function(c) {\n      var gfx = elementRegistry.getGraphics(c);\n\n      prependTo(gfx.parentNode, childGfx);\n    });\n  });\n};\n\nGraphicsFactory.prototype.drawShape = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getShapePath = function(element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getShapePath', element);\n};\n\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\n\nGraphicsFactory.prototype.update = function(type, element, gfx) {\n\n  // do NOT update root element\n  if (!element.parent) {\n    return;\n  }\n\n  var visual = this._clear(gfx);\n\n  // redraw\n  if (type === 'shape') {\n    this.drawShape(visual, element);\n\n    // update positioning\n    translate(gfx, element.x, element.y);\n  } else\n  if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\n\nGraphicsFactory.prototype.remove = function(element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  // remove\n  svgRemove(gfx.parentNode);\n};\n\n\n// helpers //////////\n\nfunction prependTo(newNode, parentNode, siblingNode) {\n  var node = siblingNode || parentNode.firstChild;\n\n  // do not prepend node to itself to prevent IE from crashing\n  // https://github.com/bpmn-io/bpmn-js/issues/746\n  if (newNode === node) {\n    return;\n  }\n\n  parentNode.insertBefore(newNode, node);\n}\n","import DrawModule from '../draw';\n\nimport Canvas from './Canvas';\nimport ElementRegistry from './ElementRegistry';\nimport ElementFactory from './ElementFactory';\nimport EventBus from './EventBus';\nimport GraphicsFactory from './GraphicsFactory';\n\nexport default {\n  __depends__: [ DrawModule ],\n  __init__: [ 'canvas' ],\n  canvas: [ 'type', Canvas ],\n  elementRegistry: [ 'type', ElementRegistry ],\n  elementFactory: [ 'type', ElementFactory ],\n  eventBus: [ 'type', EventBus ],\n  graphicsFactory: [ 'type', GraphicsFactory ]\n};","import { Injector } from 'didi';\n\nimport CoreModule from './core';\n\n\n/**\n * Bootstrap an injector from a list of modules, instantiating a number of default components\n *\n * @ignore\n * @param {Array<didi.Module>} bootstrapModules\n *\n * @return {didi.Injector} a injector to use to access the components\n */\nfunction bootstrap(bootstrapModules) {\n\n  var modules = [],\n      components = [];\n\n  function hasModule(m) {\n    return modules.indexOf(m) >= 0;\n  }\n\n  function addModule(m) {\n    modules.push(m);\n  }\n\n  function visit(m) {\n    if (hasModule(m)) {\n      return;\n    }\n\n    (m.__depends__ || []).forEach(visit);\n\n    if (hasModule(m)) {\n      return;\n    }\n\n    addModule(m);\n\n    (m.__init__ || []).forEach(function(c) {\n      components.push(c);\n    });\n  }\n\n  bootstrapModules.forEach(visit);\n\n  var injector = new Injector(modules);\n\n  components.forEach(function(c) {\n\n    try {\n\n      // eagerly resolve component (fn or string)\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\n    } catch (e) {\n      console.error('Failed to instantiate component');\n      console.error(e.stack);\n\n      throw e;\n    }\n  });\n\n  return injector;\n}\n\n/**\n * Creates an injector from passed options.\n *\n * @ignore\n * @param  {Object} options\n * @return {didi.Injector}\n */\nfunction createInjector(options) {\n\n  options = options || {};\n\n  var configModule = {\n    'config': ['value', options]\n  };\n\n  var modules = [ configModule, CoreModule ].concat(options.modules || []);\n\n  return bootstrap(modules);\n}\n\n\n/**\n * The main diagram-js entry point that bootstraps the diagram with the given\n * configuration.\n *\n * To register extensions with the diagram, pass them as Array<didi.Module> to the constructor.\n *\n * @class djs.Diagram\n * @memberOf djs\n * @constructor\n *\n * @example\n *\n * <caption>Creating a plug-in that logs whenever a shape is added to the canvas.</caption>\n *\n * // plug-in implemenentation\n * function MyLoggingPlugin(eventBus) {\n *   eventBus.on('shape.added', function(event) {\n *     console.log('shape ', event.shape, ' was added to the diagram');\n *   });\n * }\n *\n * // export as module\n * export default {\n *   __init__: [ 'myLoggingPlugin' ],\n *     myLoggingPlugin: [ 'type', MyLoggingPlugin ]\n * };\n *\n *\n * // instantiate the diagram with the new plug-in\n *\n * import MyLoggingModule from 'path-to-my-logging-plugin';\n *\n * var diagram = new Diagram({\n *   modules: [\n *     MyLoggingModule\n *   ]\n * });\n *\n * diagram.invoke([ 'canvas', function(canvas) {\n *   // add shape to drawing canvas\n *   canvas.addShape({ x: 10, y: 10 });\n * });\n *\n * // 'shape ... was added to the diagram' logged to console\n *\n * @param {Object} options\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the diagram\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the diagram with\n */\nexport default function Diagram(options, injector) {\n\n  // create injector unless explicitly specified\n  this.injector = injector = injector || createInjector(options);\n\n  // API\n\n  /**\n   * Resolves a diagram service\n   *\n   * @method Diagram#get\n   *\n   * @param {String} name the name of the diagram service to be retrieved\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   */\n  this.get = injector.get;\n\n  /**\n   * Executes a function into which diagram services are injected\n   *\n   * @method Diagram#invoke\n   *\n   * @param {Function|Object[]} fn the function to resolve\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\n   */\n  this.invoke = injector.invoke;\n\n  // init\n\n  // indicate via event\n\n\n  /**\n   * An event indicating that all plug-ins are loaded.\n   *\n   * Use this event to fire other events to interested plug-ins\n   *\n   * @memberOf Diagram\n   *\n   * @event diagram.init\n   *\n   * @example\n   *\n   * eventBus.on('diagram.init', function() {\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\n   * });\n   *\n   * @type {Object}\n   */\n  this.get('eventBus').fire('diagram.init');\n}\n\n\n/**\n * Destroys the diagram\n *\n * @method  Diagram#destroy\n */\nDiagram.prototype.destroy = function() {\n  this.get('eventBus').fire('diagram.destroy');\n};\n\n/**\n * Clear the diagram, removing all contents.\n */\nDiagram.prototype.clear = function() {\n  this.get('eventBus').fire('diagram.clear');\n};\n","function __stopPropagation(event) {\n  if (!event || typeof event.stopPropagation !== 'function') {\n    return;\n  }\n\n  event.stopPropagation();\n}\n\n\nexport function getOriginal(event) {\n  return event.originalEvent || event.srcEvent;\n}\n\n\nexport function stopPropagation(event, immediate) {\n  __stopPropagation(event, immediate);\n  __stopPropagation(getOriginal(event), immediate);\n}\n\n\nexport function toPoint(event) {\n\n  if (event.pointers && event.pointers.length) {\n    event = event.pointers[0];\n  }\n\n  if (event.touches && event.touches.length) {\n    event = event.touches[0];\n  }\n\n  return event ? {\n    x: event.clientX,\n    y: event.clientY\n  } : null;\n}","import {\n  getOriginal as getOriginalEvent\n} from './Event';\n\nimport {\n  isMac\n} from './Platform';\n\nexport {\n  isMac\n} from './Platform';\n\n\nexport function isPrimaryButton(event) {\n\n  // button === 0 -> left áka primary mouse button\n  return !(getOriginalEvent(event) || event).button;\n}\n\nexport function hasPrimaryModifier(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  if (!isPrimaryButton(event)) {\n    return false;\n  }\n\n  // Use alt as primary modifier key for mac OS\n  if (isMac()) {\n    return originalEvent.metaKey;\n  } else {\n    return originalEvent.ctrlKey;\n  }\n}\n\n\nexport function hasSecondaryModifier(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  return isPrimaryButton(event) && originalEvent.shiftKey;\n}","export function isMac() {\n  return (/mac/i).test(navigator.platform);\n}","import {\n  forEach,\n  assign\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport { isPrimaryButton } from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  createLine,\n  updateLine\n} from '../../util/RenderUtil';\n\nfunction allowAll(e) { return true; }\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n\n  var self = this;\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {String} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n\n    if (isIgnored(type, event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n\n  function isIgnored(localEventName, event) {\n\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\n\n    // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n    return !filter(event);\n  }\n\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup',\n  };\n\n  var ignoredFilters = {\n    'element.contextmenu': allowAll\n  };\n\n\n  // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {String} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n\n  var ELEMENT_SELECTOR = 'svg, .djs-element';\n\n  // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n\n    var handler = handlers[localEvent] = function(event) {\n      fire(localEvent, event);\n    };\n\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n\n    var handler = mouseHandler(localEvent);\n\n    if (!handler) {\n      return;\n    }\n\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function(val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function(val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function(event) {\n    unregisterEvents(event.svg);\n  });\n\n  eventBus.on('canvas.init', function(event) {\n    registerEvents(event.svg);\n  });\n\n\n  // hit box updating ////////////////\n\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.createHit', { element: element, gfx: gfx });\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([\n    'shape.changed',\n    'connection.changed'\n  ], LOW_PRIORITY, function(event) {\n\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.updateHit', { element: element, gfx: gfx });\n  });\n\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.createDefaultHit(element, gfx);\n  });\n\n  eventBus.on('interactionEvents.updateHit', function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.updateDefaultHit(element, gfx);\n  });\n\n\n  // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n\n  function createHitStyle(classNames, attrs) {\n\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n\n    return styles.cls(classNames, [ 'no-fill', 'no-border' ], attrs);\n  }\n\n\n  // style helpers ///////////////\n\n  function applyStyle(hit, type) {\n\n    var attrs = HIT_TYPES[type];\n\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n\n    svgAttr(hit, attrs);\n\n    return hit;\n  }\n\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  }\n\n\n  // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n  this.removeHits = function(gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n\n    forEach(hits, svgRemove);\n  };\n\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n  this.createDefaultHit = function(element, gfx) {\n    var waypoints = element.waypoints,\n        isFrame = element.isFrame,\n        boxType;\n\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n\n      boxType = isFrame ? 'stroke' : 'all';\n\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n  this.createWaypointsHit = function(gfx, waypoints) {\n\n    var hit = createLine(waypoints);\n\n    applyStyle(hit, 'stroke');\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {String} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n  this.createBoxHit = function(gfx, type, attrs) {\n\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n\n    var hit = svgCreate('rect');\n\n    applyStyle(hit, type);\n\n    svgAttr(hit, attrs);\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n  this.updateDefaultHit = function(element, gfx) {\n\n    var hit = domQuery('.djs-hit', gfx);\n\n    if (!hit) {\n      return;\n    }\n\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    return hit;\n  };\n\n  this.fire = fire;\n\n  this.triggerMouseEvent = triggerMouseEvent;\n\n  this.mouseHandler = mouseHandler;\n\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\n\n\nInteractionEvents.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'styles'\n];\n\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */","import InteractionEvents from './InteractionEvents';\n\nexport default {\n  __init__: [ 'interactionEvents' ],\n  interactionEvents: [ 'type', InteractionEvents ]\n};","import { getBBox } from '../../util/Elements';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  assign\n} from 'min-dash';\n\n\n/**\n * @class\n *\n * A plugin that adds an outline to shapes and connections that may be activated and styled\n * via CSS classes.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Outline(eventBus, styles, elementRegistry) {\n\n  this.offset = 6;\n\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\n\n  var self = this;\n\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n\n    svgAppend(gfx, outline);\n\n    return outline;\n  }\n\n  // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateShapeOutline(outline, element);\n  });\n\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateConnectionOutline(outline, element);\n  });\n}\n\n\n/**\n * Updates the outline of a shape respecting the dimension of the\n * element and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateShapeOutline = function(outline, element) {\n\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n\n};\n\n\n/**\n * Updates the outline of a connection respecting the bounding box of\n * the connection and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\n\n  var bbox = getBBox(connection);\n\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n\n};\n\n\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];","import Outline from './Outline';\n\nexport default {\n  __init__: [ 'outline' ],\n  outline: [ 'type', Outline ]\n};","import {\n  isArray,\n  forEach\n} from 'min-dash';\n\n\n/**\n * A service that offers the current selection in a diagram.\n * Offers the api to control the selection, too.\n *\n * @class\n *\n * @param {EventBus} eventBus the event bus\n */\nexport default function Selection(eventBus) {\n\n  this._eventBus = eventBus;\n\n  this._selectedElements = [];\n\n  var self = this;\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    self.deselect(element);\n  });\n\n  eventBus.on([ 'diagram.clear' ], function(e) {\n    self.select(null);\n  });\n}\n\nSelection.$inject = [ 'eventBus' ];\n\n\nSelection.prototype.deselect = function(element) {\n  var selectedElements = this._selectedElements;\n\n  var idx = selectedElements.indexOf(element);\n\n  if (idx !== -1) {\n    var oldSelection = selectedElements.slice();\n\n    selectedElements.splice(idx, 1);\n\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n  }\n};\n\n\nSelection.prototype.get = function() {\n  return this._selectedElements;\n};\n\nSelection.prototype.isSelected = function(element) {\n  return this._selectedElements.indexOf(element) !== -1;\n};\n\n\n/**\n * This method selects one or more elements on the diagram.\n *\n * By passing an additional add parameter you can decide whether or not the element(s)\n * should be added to the already existing selection or not.\n *\n * @method Selection#select\n *\n * @param  {Object|Object[]} elements element or array of elements to be selected\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\n */\nSelection.prototype.select = function(elements, add) {\n  var selectedElements = this._selectedElements,\n      oldSelection = selectedElements.slice();\n\n  if (!isArray(elements)) {\n    elements = elements ? [ elements ] : [];\n  }\n\n  // selection may be cleared by passing an empty array or null\n  // to the method\n  if (add) {\n    forEach(elements, function(element) {\n      if (selectedElements.indexOf(element) !== -1) {\n\n        // already selected\n        return;\n      } else {\n        selectedElements.push(element);\n      }\n    });\n  } else {\n    this._selectedElements = selectedElements = elements.slice();\n  }\n\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n};\n","import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_HOVER = 'hover',\n    MARKER_SELECTED = 'selected';\n\n\n/**\n * A plugin that adds a visible selection UI to shapes and connections\n * by appending the <code>hover</code> and <code>selected</code> classes to them.\n *\n * @class\n *\n * Makes elements selectable, too.\n *\n * @param {EventBus} events\n * @param {SelectionService} selection\n * @param {Canvas} canvas\n */\nexport default function SelectionVisuals(events, canvas, selection, styles) {\n\n  this._multiSelectionBox = null;\n\n  function addMarker(e, cls) {\n    canvas.addMarker(e, cls);\n  }\n\n  function removeMarker(e, cls) {\n    canvas.removeMarker(e, cls);\n  }\n\n  events.on('element.hover', function(event) {\n    addMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('element.out', function(event) {\n    removeMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('selection.changed', function(event) {\n\n    function deselect(s) {\n      removeMarker(s, MARKER_SELECTED);\n    }\n\n    function select(s) {\n      addMarker(s, MARKER_SELECTED);\n    }\n\n    var oldSelection = event.oldSelection,\n        newSelection = event.newSelection;\n\n    forEach(oldSelection, function(e) {\n      if (newSelection.indexOf(e) === -1) {\n        deselect(e);\n      }\n    });\n\n    forEach(newSelection, function(e) {\n      if (oldSelection.indexOf(e) === -1) {\n        select(e);\n      }\n    });\n  });\n}\n\nSelectionVisuals.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'styles'\n];","import {\n  hasPrimaryModifier\n} from '../../util/Mouse';\n\nimport {\n  find, isArray\n} from 'min-dash';\n\n\nexport default function SelectionBehavior(\n    eventBus, selection, canvas,\n    elementRegistry) {\n\n  eventBus.on('create.end', 500, function(e) {\n\n    var context = e.context,\n        canExecute = context.canExecute,\n        elements = context.elements,\n        hints = context.hints || {},\n        autoSelect = hints.autoSelect;\n\n    // select elements after they have been created\n    if (canExecute) {\n      if (autoSelect === false) {\n\n        // select no elements\n        return;\n      }\n\n      if (isArray(autoSelect)) {\n        selection.select(autoSelect);\n      } else {\n\n        // select all elements by default\n        selection.select(elements);\n      }\n    }\n  });\n\n  eventBus.on('connect.end', 500, function(e) {\n\n    // select the connect end target\n    // after a connect operation\n    if (e.context.canExecute && e.context.target) {\n      selection.select(e.context.target);\n    }\n  });\n\n  eventBus.on('shape.move.end', 500, function(e) {\n    var previousSelection = e.previousSelection || [];\n\n    var shape = elementRegistry.get(e.context.shape.id);\n\n    // make sure at least the main moved element is being\n    // selected after a move operation\n    var inSelection = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!inSelection) {\n      selection.select(shape);\n    }\n  });\n\n  // Shift + click selection\n  eventBus.on('element.click', function(event) {\n\n    var element = event.element;\n\n    // do not select the root element\n    // or connections\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // mouse-event: SELECTION_KEY\n    var add = hasPrimaryModifier(event);\n\n    // select OR deselect element in multi selection\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        return selection.deselect(element);\n      } else {\n        return selection.select(element);\n      }\n    } else\n    if (!isSelected) {\n      selection.select(element, add);\n    } else {\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [\n  'eventBus',\n  'selection',\n  'canvas',\n  'elementRegistry'\n];\n","import InteractionEventsModule from '../interaction-events';\nimport OutlineModule from '../outline';\n\nimport Selection from './Selection';\nimport SelectionVisuals from './SelectionVisuals';\nimport SelectionBehavior from './SelectionBehavior';\n\n\nexport default {\n  __init__: [ 'selectionVisuals', 'selectionBehavior' ],\n  __depends__: [\n    InteractionEventsModule,\n    OutlineModule\n  ],\n  selection: [ 'type', Selection ],\n  selectionVisuals: [ 'type', SelectionVisuals ],\n  selectionBehavior: [ 'type', SelectionBehavior ]\n};\n","/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nexport default function Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {String} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {Boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};","import Rules from './Rules';\n\nexport default {\n  __init__: [ 'rules' ],\n  rules: [ 'type', Rules ]\n};\n","import {\n  classes as domClasses\n} from 'min-dom';\n\nvar CURSOR_CLS_PATTERN = /^djs-cursor-.*$/;\n\n\nexport function set(mode) {\n  var classes = domClasses(document.body);\n\n  classes.removeMatching(CURSOR_CLS_PATTERN);\n\n  if (mode) {\n    classes.add('djs-cursor-' + mode);\n  }\n}\n\nexport function unset() {\n  set(null);\n}\n\nexport function has(mode) {\n  var classes = domClasses(document.body);\n\n  return classes.has('djs-cursor-' + mode);\n}\n","var TRAP_PRIORITY = 5000;\n\n/**\n * Installs a click trap that prevents a ghost click following a dragging operation.\n *\n * @return {Function} a function to immediately remove the installed trap.\n */\nexport function install(eventBus, eventName) {\n\n  eventName = eventName || 'element.click';\n\n  function trap() {\n    return false;\n  }\n\n  eventBus.once(eventName, TRAP_PRIORITY, trap);\n\n  return function() {\n    eventBus.off(eventName, trap);\n  };\n}","export function center(bounds) {\n  return {\n    x: bounds.x + (bounds.width / 2),\n    y: bounds.y + (bounds.height / 2)\n  };\n}\n\n\nexport function delta(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}","/* global TouchEvent */\n\nvar round = Math.round;\n\nimport { assign } from 'min-dash';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  getOriginal,\n  toPoint,\n  stopPropagation\n} from '../../util/Event';\n\nimport {\n  set as cursorSet,\n  unset as cursorUnset\n} from '../../util/Cursor';\n\nimport {\n  install as installClickTrap\n} from '../../util/ClickTrap';\n\nimport {\n  delta as deltaPos\n} from '../../util/PositionUtil';\n\nvar DRAG_ACTIVE_CLS = 'djs-drag-active';\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nfunction isTouchEvent(event) {\n\n  // check for TouchEvent being available first\n  // (i.e. not available on desktop Firefox)\n  return typeof TouchEvent !== 'undefined' && event instanceof TouchEvent;\n}\n\nfunction getLength(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n\n/**\n * A helper that fires canvas localized drag events and realizes\n * the general \"drag-and-drop\" look and feel.\n *\n * Calling {@link Dragging#activate} activates dragging on a canvas.\n *\n * It provides the following:\n *\n *   * emits life cycle events, namespaced with a prefix assigned\n *     during dragging activation\n *   * sets and restores the cursor\n *   * sets and restores the selection\n *   * ensures there can be only one drag operation active at a time\n *\n * Dragging may be canceled manually by calling {@link Dragging#cancel}\n * or by pressing ESC.\n *\n *\n * ## Life-cycle events\n *\n * Dragging can be in three different states, off, initialized\n * and active.\n *\n * (1) off: no dragging operation is in progress\n * (2) initialized: a new drag operation got initialized but not yet\n *                  started (i.e. because of no initial move)\n * (3) started: dragging is in progress\n *\n * Eventually dragging will be off again after a drag operation has\n * been ended or canceled via user click or ESC key press.\n *\n * To indicate transitions between these states dragging emits generic\n * life-cycle events with the `drag.` prefix _and_ events namespaced\n * to a prefix choosen by a user during drag initialization.\n *\n * The following events are emitted (appropriately prefixed) via\n * the {@link EventBus}.\n *\n * * `init`\n * * `start`\n * * `move`\n * * `end`\n * * `ended` (dragging already in off state)\n * * `cancel` (only if previously started)\n * * `canceled` (dragging already in off state, only if previously started)\n * * `cleanup`\n *\n *\n * @example\n *\n * function MyDragComponent(eventBus, dragging) {\n *\n *   eventBus.on('mydrag.start', function(event) {\n *     console.log('yes, we start dragging');\n *   });\n *\n *   eventBus.on('mydrag.move', function(event) {\n *     console.log('canvas local coordinates', event.x, event.y, event.dx, event.dy);\n *\n *     // local drag data is passed with the event\n *     event.context.foo; // \"BAR\"\n *\n *     // the original mouse event, too\n *     event.originalEvent; // MouseEvent(...)\n *   });\n *\n *   eventBus.on('element.click', function(event) {\n *     dragging.init(event, 'mydrag', {\n *       cursor: 'grabbing',\n *       data: {\n *         context: {\n *           foo: \"BAR\"\n *         }\n *       }\n *     });\n *   });\n * }\n */\nexport default function Dragging(eventBus, canvas, selection) {\n\n  var defaultOptions = {\n    threshold: 5,\n    trapClick: true\n  };\n\n  // the currently active drag operation\n  // dragging is active as soon as this context exists.\n  //\n  // it is visually _active_ only when a context.active flag is set to true.\n  var context;\n\n  /* convert a global event into local coordinates */\n  function toLocalPoint(globalPosition) {\n\n    var viewbox = canvas.viewbox();\n\n    var clientRect = canvas._container.getBoundingClientRect();\n\n    return {\n      x: viewbox.x + (globalPosition.x - clientRect.left) / viewbox.scale,\n      y: viewbox.y + (globalPosition.y - clientRect.top) / viewbox.scale\n    };\n  }\n\n  // helpers\n\n  function fire(type, dragContext) {\n    dragContext = dragContext || context;\n\n    var event = eventBus.createEvent(\n      assign(\n        {},\n        dragContext.payload,\n        dragContext.data,\n        { isTouch: dragContext.isTouch }\n      )\n    );\n\n    // default integration\n    if (eventBus.fire('drag.' + type, event) === false) {\n      return false;\n    }\n\n    return eventBus.fire(dragContext.prefix + '.' + type, event);\n  }\n\n  // event listeners\n\n  function move(event, activate) {\n    var payload = context.payload,\n        displacement = context.displacement;\n\n    var globalStart = context.globalStart,\n        globalCurrent = toPoint(event),\n        globalDelta = deltaPos(globalCurrent, globalStart);\n\n    var localStart = context.localStart,\n        localCurrent = toLocalPoint(globalCurrent),\n        localDelta = deltaPos(localCurrent, localStart);\n\n\n    // activate context explicitly or once threshold is reached\n    if (!context.active && (activate || getLength(globalDelta) > context.threshold)) {\n\n      // fire start event with original\n      // starting coordinates\n\n      assign(payload, {\n        x: round(localStart.x + displacement.x),\n        y: round(localStart.y + displacement.y),\n        dx: 0,\n        dy: 0\n      }, { originalEvent: event });\n\n      if (false === fire('start')) {\n        return cancel();\n      }\n\n      context.active = true;\n\n      // unset selection and remember old selection\n      // the previous (old) selection will always passed\n      // with the event via the event.previousSelection property\n      if (!context.keepSelection) {\n        payload.previousSelection = selection.get();\n        selection.select(null);\n      }\n\n      // allow custom cursor\n      if (context.cursor) {\n        cursorSet(context.cursor);\n      }\n\n      // indicate dragging via marker on root element\n      canvas.addMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\n    }\n\n    stopPropagation(event);\n\n    if (context.active) {\n\n      // update payload with actual coordinates\n      assign(payload, {\n        x: round(localCurrent.x + displacement.x),\n        y: round(localCurrent.y + displacement.y),\n        dx: round(localDelta.x),\n        dy: round(localDelta.y)\n      }, { originalEvent: event });\n\n      // emit move event\n      fire('move');\n    }\n  }\n\n  function end(event) {\n    var previousContext,\n        returnValue = true;\n\n    if (context.active) {\n\n      if (event) {\n        context.payload.originalEvent = event;\n\n        // suppress original event (click, ...)\n        // because we just ended a drag operation\n        stopPropagation(event);\n      }\n\n      // implementations may stop restoring the\n      // original state (selections, ...) by preventing the\n      // end events default action\n      returnValue = fire('end');\n    }\n\n    if (returnValue === false) {\n      fire('rejected');\n    }\n\n    previousContext = cleanup(returnValue !== true);\n\n    // last event to be fired when all drag operations are done\n    // at this point in time no drag operation is in progress anymore\n    fire('ended', previousContext);\n  }\n\n\n  // cancel active drag operation if the user presses\n  // the ESC key on the keyboard\n\n  function checkCancel(event) {\n\n    if (event.which === 27) {\n      preventDefault(event);\n\n      cancel();\n    }\n  }\n\n\n  // prevent ghost click that might occur after a finished\n  // drag and drop session\n\n  function trapClickAndEnd(event) {\n\n    var untrap;\n\n    // trap the click in case we are part of an active\n    // drag operation. This will effectively prevent\n    // the ghost click that cannot be canceled otherwise.\n    if (context.active) {\n\n      untrap = installClickTrap(eventBus);\n\n      // remove trap after minimal delay\n      setTimeout(untrap, 400);\n\n      // prevent default action (click)\n      preventDefault(event);\n    }\n\n    end(event);\n  }\n\n  function trapTouch(event) {\n    move(event);\n  }\n\n  // update the drag events hover (djs.model.Base) and hoverGfx (Snap<SVGElement>)\n  // properties during hover and out and fire {prefix}.hover and {prefix}.out properties\n  // respectively\n\n  function hover(event) {\n    var payload = context.payload;\n\n    payload.hoverGfx = event.gfx;\n    payload.hover = event.element;\n\n    fire('hover');\n  }\n\n  function out(event) {\n    fire('out');\n\n    var payload = context.payload;\n\n    payload.hoverGfx = null;\n    payload.hover = null;\n  }\n\n\n  // life-cycle methods\n\n  function cancel(restore) {\n    var previousContext;\n\n    if (!context) {\n      return;\n    }\n\n    var wasActive = context.active;\n\n    if (wasActive) {\n      fire('cancel');\n    }\n\n    previousContext = cleanup(restore);\n\n    if (wasActive) {\n\n      // last event to be fired when all drag operations are done\n      // at this point in time no drag operation is in progress anymore\n      fire('canceled', previousContext);\n    }\n  }\n\n  function cleanup(restore) {\n    var previousContext,\n        endDrag;\n\n    fire('cleanup');\n\n    // reset cursor\n    cursorUnset();\n\n    if (context.trapClick) {\n      endDrag = trapClickAndEnd;\n    } else {\n      endDrag = end;\n    }\n\n    // reset dom listeners\n    domEvent.unbind(document, 'mousemove', move);\n\n    domEvent.unbind(document, 'dragstart', preventDefault);\n    domEvent.unbind(document, 'selectstart', preventDefault);\n\n    domEvent.unbind(document, 'mousedown', endDrag, true);\n    domEvent.unbind(document, 'mouseup', endDrag, true);\n\n    domEvent.unbind(document, 'keyup', checkCancel);\n\n    domEvent.unbind(document, 'touchstart', trapTouch, true);\n    domEvent.unbind(document, 'touchcancel', cancel, true);\n    domEvent.unbind(document, 'touchmove', move, true);\n    domEvent.unbind(document, 'touchend', end, true);\n\n    eventBus.off('element.hover', hover);\n    eventBus.off('element.out', out);\n\n    // remove drag marker on root element\n    canvas.removeMarker(canvas.getRootElement(), DRAG_ACTIVE_CLS);\n\n    // restore selection, unless it has changed\n    var previousSelection = context.payload.previousSelection;\n\n    if (restore !== false && previousSelection && !selection.get().length) {\n      selection.select(previousSelection);\n    }\n\n    previousContext = context;\n\n    context = null;\n\n    return previousContext;\n  }\n\n  /**\n   * Initialize a drag operation.\n   *\n   * If `localPosition` is given, drag events will be emitted\n   * relative to it.\n   *\n   * @param {MouseEvent|TouchEvent} [event]\n   * @param {Point} [localPosition] actual diagram local position this drag operation should start at\n   * @param {String} prefix\n   * @param {Object} [options]\n   */\n  function init(event, relativeTo, prefix, options) {\n\n    // only one drag operation may be active, at a time\n    if (context) {\n      cancel(false);\n    }\n\n    if (typeof relativeTo === 'string') {\n      options = prefix;\n      prefix = relativeTo;\n      relativeTo = null;\n    }\n\n    options = assign({}, defaultOptions, options || {});\n\n    var data = options.data || {},\n        originalEvent,\n        globalStart,\n        localStart,\n        endDrag,\n        isTouch;\n\n    if (options.trapClick) {\n      endDrag = trapClickAndEnd;\n    } else {\n      endDrag = end;\n    }\n\n    if (event) {\n      originalEvent = getOriginal(event) || event;\n      globalStart = toPoint(event);\n\n      stopPropagation(event);\n\n      // prevent default browser dragging behavior\n      if (originalEvent.type === 'dragstart') {\n        preventDefault(originalEvent);\n      }\n    } else {\n      originalEvent = null;\n      globalStart = { x: 0, y: 0 };\n    }\n\n    localStart = toLocalPoint(globalStart);\n\n    if (!relativeTo) {\n      relativeTo = localStart;\n    }\n\n    isTouch = isTouchEvent(originalEvent);\n\n    context = assign({\n      prefix: prefix,\n      data: data,\n      payload: {},\n      globalStart: globalStart,\n      displacement: deltaPos(relativeTo, localStart),\n      localStart: localStart,\n      isTouch: isTouch\n    }, options);\n\n    // skip dom registration if trigger\n    // is set to manual (during testing)\n    if (!options.manual) {\n\n      // add dom listeners\n\n      if (isTouch) {\n        domEvent.bind(document, 'touchstart', trapTouch, true);\n        domEvent.bind(document, 'touchcancel', cancel, true);\n        domEvent.bind(document, 'touchmove', move, true);\n        domEvent.bind(document, 'touchend', end, true);\n      } else {\n\n        // assume we use the mouse to interact per default\n        domEvent.bind(document, 'mousemove', move);\n\n        // prevent default browser drag and text selection behavior\n        domEvent.bind(document, 'dragstart', preventDefault);\n        domEvent.bind(document, 'selectstart', preventDefault);\n\n        domEvent.bind(document, 'mousedown', endDrag, true);\n        domEvent.bind(document, 'mouseup', endDrag, true);\n      }\n\n      domEvent.bind(document, 'keyup', checkCancel);\n\n      eventBus.on('element.hover', hover);\n      eventBus.on('element.out', out);\n    }\n\n    fire('init');\n\n    if (options.autoActivate) {\n      move(event, true);\n    }\n  }\n\n  // cancel on diagram destruction\n  eventBus.on('diagram.destroy', cancel);\n\n\n  // API\n\n  this.init = init;\n  this.move = move;\n  this.hover = hover;\n  this.out = out;\n  this.end = end;\n\n  this.cancel = cancel;\n\n  // for introspection\n\n  this.context = function() {\n    return context;\n  };\n\n  this.setOptions = function(options) {\n    assign(defaultOptions, options);\n  };\n}\n\nDragging.$inject = [\n  'eventBus',\n  'canvas',\n  'selection'\n];\n","import {\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\nvar HIGH_PRIORITY = 1500;\n\n\n/**\n * Browsers may swallow certain events (hover, out ...) if users are to\n * fast with the mouse.\n *\n * @see http://stackoverflow.com/questions/7448468/why-cant-i-reliably-capture-a-mouseout-event\n *\n * The fix implemented in this component ensure that we\n *\n * 1) have a hover state after a successful drag.move event\n * 2) have an out event when dragging leaves an element\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {ElementRegistry} elementRegistry\n */\nexport default function HoverFix(eventBus, dragging, elementRegistry) {\n\n  var self = this;\n\n  /**\n   * Make sure we are god damn hovering!\n   *\n   * @param {Event} dragging event\n   */\n  function ensureHover(event) {\n\n    if (event.hover) {\n      return;\n    }\n\n    var originalEvent = event.originalEvent;\n\n    var gfx = self._findTargetGfx(originalEvent);\n\n    var element = gfx && elementRegistry.get(gfx);\n\n    if (gfx && element) {\n\n      // 1) cancel current mousemove\n      event.stopPropagation();\n\n      // 2) emit fake hover for new target\n      dragging.hover({ element: element, gfx: gfx });\n\n      // 3) re-trigger move event\n      dragging.move(originalEvent);\n    }\n  }\n\n  /**\n   * We wait for a specific sequence of events before\n   * emitting a fake drag.hover event.\n   *\n   * Event Sequence:\n   *\n   * drag.start\n   * drag.move >> ensure we are hovering\n   */\n  eventBus.on('drag.start', function(event) {\n\n    eventBus.once('drag.move', HIGH_PRIORITY, function(event) {\n\n      ensureHover(event);\n\n    });\n\n  });\n\n\n  /**\n   * We make sure that drag.out is always fired, even if the\n   * browser swallows an element.out event.\n   *\n   * Event sequence:\n   *\n   * drag.hover\n   * (element.out >> sometimes swallowed)\n   * element.hover >> ensure we fired drag.out\n   */\n  eventBus.on('drag.init', function() {\n\n    var hover, hoverGfx;\n\n    function setDragHover(event) {\n      hover = event.hover;\n      hoverGfx = event.hoverGfx;\n    }\n\n    function unsetHover() {\n      hover = null;\n      hoverGfx = null;\n    }\n\n    function ensureOut() {\n\n      if (!hover) {\n        return;\n      }\n\n      var element = hover,\n          gfx = hoverGfx;\n\n      hover = null;\n      hoverGfx = null;\n\n      // emit synthetic out event\n      dragging.out({\n        element: element,\n        gfx: gfx\n      });\n    }\n\n    eventBus.on('drag.hover', setDragHover);\n    eventBus.on('element.out', unsetHover);\n    eventBus.on('element.hover', HIGH_PRIORITY, ensureOut);\n\n    eventBus.once('drag.cleanup', function() {\n      eventBus.off('drag.hover', setDragHover);\n      eventBus.off('element.out', unsetHover);\n      eventBus.off('element.hover', ensureOut);\n    });\n\n  });\n\n  this._findTargetGfx = function(event) {\n    var position,\n        target;\n\n    if (!(event instanceof MouseEvent)) {\n      return;\n    }\n\n    position = toPoint(event);\n\n    // damn expensive operation, ouch!\n    target = document.elementFromPoint(position.x, position.y);\n\n    return getGfx(target);\n  };\n\n}\n\nHoverFix.$inject = [\n  'eventBus',\n  'dragging',\n  'elementRegistry'\n];\n\n\n// helpers /////////////////////\n\nfunction getGfx(target) {\n  return domClosest(target, 'svg, .djs-element', true);\n}","import SelectionModule from '../selection';\n\nimport Dragging from './Dragging';\nimport HoverFix from './HoverFix';\n\nexport default {\n  __init__: [\n    'hoverFix'\n  ],\n  __depends__: [\n    SelectionModule\n  ],\n  dragging: [ 'type', Dragging ],\n  hoverFix: [ 'type', HoverFix ]\n};","import {\n  isObject,\n  sortBy\n} from 'min-dash';\n\nimport {\n  pointDistance,\n  pointsOnLine\n} from '../util/Geometry';\n\nimport intersectPaths from 'path-intersection';\n\n\nexport function roundBounds(bounds) {\n  return {\n    x: Math.round(bounds.x),\n    y: Math.round(bounds.y),\n    width: Math.round(bounds.width),\n    height: Math.round(bounds.height)\n  };\n}\n\n\nexport function roundPoint(point) {\n\n  return {\n    x: Math.round(point.x),\n    y: Math.round(point.y)\n  };\n}\n\n\n/**\n * Convert the given bounds to a { top, left, bottom, right } descriptor.\n *\n * @param {Bounds|Point} bounds\n *\n * @return {Object}\n */\nexport function asTRBL(bounds) {\n  return {\n    top: bounds.y,\n    right: bounds.x + (bounds.width || 0),\n    bottom: bounds.y + (bounds.height || 0),\n    left: bounds.x\n  };\n}\n\n\n/**\n * Convert a { top, left, bottom, right } to an objects bounds.\n *\n * @param {Object} trbl\n *\n * @return {Bounds}\n */\nexport function asBounds(trbl) {\n  return {\n    x: trbl.left,\n    y: trbl.top,\n    width: trbl.right - trbl.left,\n    height: trbl.bottom - trbl.top\n  };\n}\n\n\n/**\n * Get the mid of the given bounds or point.\n *\n * @param {Bounds|Point} bounds\n *\n * @return {Point}\n */\nexport function getMid(bounds) {\n  return roundPoint({\n    x: bounds.x + (bounds.width || 0) / 2,\n    y: bounds.y + (bounds.height || 0) / 2\n  });\n}\n\n\n// orientation utils //////////////////////\n\n/**\n * Get orientation of the given rectangle with respect to\n * the reference rectangle.\n *\n * A padding (positive or negative) may be passed to influence\n * horizontal / vertical orientation and intersection.\n *\n * @param {Bounds} rect\n * @param {Bounds} reference\n * @param {Point|Number} padding\n *\n * @return {String} the orientation; one of top, top-left, left, ..., bottom, right or intersect.\n */\nexport function getOrientation(rect, reference, padding) {\n\n  padding = padding || 0;\n\n  // make sure we can use an object, too\n  // for individual { x, y } padding\n  if (!isObject(padding)) {\n    padding = { x: padding, y: padding };\n  }\n\n\n  var rectOrientation = asTRBL(rect),\n      referenceOrientation = asTRBL(reference);\n\n  var top = rectOrientation.bottom + padding.y <= referenceOrientation.top,\n      right = rectOrientation.left - padding.x >= referenceOrientation.right,\n      bottom = rectOrientation.top - padding.y >= referenceOrientation.bottom,\n      left = rectOrientation.right + padding.x <= referenceOrientation.left;\n\n  var vertical = top ? 'top' : (bottom ? 'bottom' : null),\n      horizontal = left ? 'left' : (right ? 'right' : null);\n\n  if (horizontal && vertical) {\n    return vertical + '-' + horizontal;\n  } else {\n    return horizontal || vertical || 'intersect';\n  }\n}\n\n\n// intersection utils //////////////////////\n\n/**\n * Get intersection between an element and a line path.\n *\n * @param {PathDef} elementPath\n * @param {PathDef} linePath\n * @param {Boolean} cropStart crop from start or end\n *\n * @return {Point}\n */\nexport function getElementLineIntersection(elementPath, linePath, cropStart) {\n\n  var intersections = getIntersections(elementPath, linePath);\n\n  // recognize intersections\n  // only one -> choose\n  // two close together -> choose first\n  // two or more distinct -> pull out appropriate one\n  // none -> ok (fallback to point itself)\n  if (intersections.length === 1) {\n    return roundPoint(intersections[0]);\n  } else if (intersections.length === 2 && pointDistance(intersections[0], intersections[1]) < 1) {\n    return roundPoint(intersections[0]);\n  } else if (intersections.length > 1) {\n\n    // sort by intersections based on connection segment +\n    // distance from start\n    intersections = sortBy(intersections, function(i) {\n      var distance = Math.floor(i.t2 * 100) || 1;\n\n      distance = 100 - distance;\n\n      distance = (distance < 10 ? '0' : '') + distance;\n\n      // create a sort string that makes sure we sort\n      // line segment ASC + line segment position DESC (for cropStart)\n      // line segment ASC + line segment position ASC (for cropEnd)\n      return i.segment2 + '#' + distance;\n    });\n\n    return roundPoint(intersections[cropStart ? 0 : intersections.length - 1]);\n  }\n\n  return null;\n}\n\n\nexport function getIntersections(a, b) {\n  return intersectPaths(a, b);\n}\n\n\nexport function filterRedundantWaypoints(waypoints) {\n\n  // alter copy of waypoints, not original\n  waypoints = waypoints.slice();\n\n  var idx = 0,\n      point,\n      previousPoint,\n      nextPoint;\n\n  while (waypoints[idx]) {\n    point = waypoints[idx];\n    previousPoint = waypoints[idx - 1];\n    nextPoint = waypoints[idx + 1];\n\n    if (pointDistance(point, nextPoint) === 0 ||\n        pointsOnLine(previousPoint, nextPoint, point)) {\n\n      // remove point, if overlapping with {nextPoint}\n      // or on line with {previousPoint} -> {point} -> {nextPoint}\n      waypoints.splice(idx, 1);\n    } else {\n      idx++;\n    }\n  }\n\n  return waypoints;\n}\n","import {\n  getMid\n} from '../../layout/LayoutUtil';\n\n\nexport default function Connect(eventBus, dragging, modeling, rules) {\n\n  // rules\n\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n\n\n  // event handlers\n\n  eventBus.on('connect.hover', function(event) {\n    var context = event.context,\n        source = context.source,\n        hover = event.hover,\n        canExecute;\n\n    canExecute = context.canExecute = canConnect(source, hover);\n\n    // simply ignore hover\n    if (canExecute === null) {\n      return;\n    }\n\n    context.target = hover;\n  });\n\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\n    var context = event.context;\n\n    context.target = null;\n    context.canExecute = false;\n  });\n\n  eventBus.on('connect.end', function(event) {\n\n    var context = event.context,\n        source = context.source,\n        sourcePosition = context.sourcePosition,\n        target = context.target,\n        targetPosition = {\n          x: event.x,\n          y: event.y\n        },\n        canExecute = context.canExecute || canConnect(source, target);\n\n    if (!canExecute) {\n      return false;\n    }\n\n    var attrs = null,\n        hints = {\n          connectionStart: sourcePosition,\n          connectionEnd: targetPosition\n        };\n\n    if (typeof canExecute === 'object') {\n      attrs = canExecute;\n    }\n\n    modeling.connect(source, target, attrs, hints);\n  });\n\n\n  // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {DOMEvent} event\n   * @param {djs.model.Base} source\n   * @param {Point} [sourcePosition]\n   * @param {Boolean} [autoActivate=false]\n   */\n  this.start = function(event, source, sourcePosition, autoActivate) {\n\n    if (typeof sourcePosition !== 'object') {\n      autoActivate = sourcePosition;\n      sourcePosition = getMid(source);\n    }\n\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: source,\n        context: {\n          source: source,\n          sourcePosition: sourcePosition\n        }\n      }\n    });\n  };\n}\n\nConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'rules'\n];\n","var HIGH_PRIORITY = 1100,\n    LOW_PRIORITY = 900;\n\nvar MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * Shows connection preview during connect.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ConnectPreview(injector, eventBus, canvas) {\n  var connectionPreview = injector.get('connectionPreview', false);\n\n  connectionPreview && eventBus.on('connect.move', function(event) {\n    var context = event.context,\n        source = context.source,\n        target = context.target,\n        canConnect = context.canExecute;\n\n    var endPosition = {\n      x: event.x,\n      y: event.y\n    };\n\n    connectionPreview.drawPreview(context, canConnect, {\n      source: source,\n      target: target,\n      connectionEnd: endPosition\n    });\n  });\n\n  eventBus.on('connect.hover', LOW_PRIORITY, function(event) {\n    var context = event.context,\n        hover = event.hover,\n        canExecute = context.canExecute;\n\n    // ignore hover\n    if (canExecute === null) {\n      return;\n    }\n\n    canvas.addMarker(hover, canExecute ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], HIGH_PRIORITY, function(event) {\n    var context = event.context;\n\n    // remove marker before target is removed from context\n    if (context.target) {\n      canvas.removeMarker(context.target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n\n  connectionPreview && eventBus.on('connect.cleanup', function(event) {\n    connectionPreview.cleanUp(event.context);\n  });\n}\n\nConnectPreview.$inject = [\n  'injector',\n  'eventBus',\n  'canvas'\n];\n","import SelectionModule from '../selection';\nimport RulesModule from '../rules';\nimport DraggingModule from '../dragging';\n\nimport Connect from './Connect';\nimport ConnectPreview from './ConnectPreview';\n\nexport default {\n  __depends__: [\n    SelectionModule,\n    RulesModule,\n    DraggingModule\n  ],\n  __init__: [\n    'connectPreview'\n  ],\n  connect: [ 'type', Connect ],\n  connectPreview: [ 'type', ConnectPreview ]\n};\n","/**\n * Util that provides unique IDs.\n *\n * @class djs.util.IdGenerator\n * @constructor\n * @memberOf djs.util\n *\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\n *\n * @param {String} prefix a prefix to prepend to generated ids (for better readability)\n */\nexport default function IdGenerator(prefix) {\n\n  this._counter = 0;\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\n}\n\n/**\n * Returns a next unique ID.\n *\n * @method djs.util.IdGenerator#next\n *\n * @returns {String} the id\n */\nIdGenerator.prototype.next = function() {\n  return this._prefix + (++this._counter);\n};\n","import {\n  isArray,\n  isString,\n  isObject,\n  assign,\n  forEach,\n  find,\n  filter,\n  matchPattern,\n  isDefined\n} from 'min-dash';\n\nimport {\n  domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove,\n  clear as domClear\n} from 'min-dom';\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  this._overlayDefaults = assign({\n\n    // no show constraints\n    show: null,\n\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [\n  'config.overlays',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {String} [search.id]\n * @param {String|djs.model.Base} [search.element]\n * @param {String} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else\n  if (search.type) {\n    return filter(this._overlays, matchPattern({ type: search.type }));\n  } else {\n\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {String|djs.model.Base}   element   attach overlay to this shape\n * @param {String}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {String|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {Number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {Number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {Number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {Number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {Number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {Number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {Boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {Number}                  [overlay.scale.min]\n * @param {Number}                  [overlay.scale.max]\n *\n * @return {String}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {String} [id]\n * @param {Object} [filter]\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n};\n\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var scale = viewbox.scale || 1;\n\n  var matrix = 'matrix(' +\n  [\n    scale,\n    0,\n    0,\n    scale,\n    -1 * viewbox.x * scale,\n    -1 * viewbox.y * scale\n  ].join(',') +\n  ')';\n\n  setTransform(this._overlayRoot, matrix);\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      visible = true;\n\n  if (show) {\n    if (\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\n    ) {\n      visible = false;\n    }\n\n    setVisible(htmlContainer, visible);\n  }\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\n\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n\n  var scale, transform = '';\n\n  if (shouldScale !== true) {\n\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n\n  el.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}","import Overlays from './Overlays';\n\nexport default {\n  __init__: [ 'overlays' ],\n  overlays: [ 'type', Overlays ]\n};","import {\n  assign,\n  isFunction,\n  isArray,\n  forEach,\n  isDefined\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  event as domEvent,\n  attr as domAttr,\n  query as domQuery,\n  classes as domClasses,\n  domify as domify\n} from 'min-dom';\n\nvar entrySelector = '.entry';\n\n\n/**\n * A context pad that displays element specific, contextual actions next\n * to a diagram element.\n *\n * @param {Object} config\n * @param {Boolean|Object} [config.scale={ min: 1.0, max: 1.5 }]\n * @param {Number} [config.scale.min]\n * @param {Number} [config.scale.max]\n * @param {EventBus} eventBus\n * @param {Overlays} overlays\n */\nexport default function ContextPad(config, eventBus, overlays) {\n\n  this._providers = [];\n\n  this._eventBus = eventBus;\n  this._overlays = overlays;\n\n  var scale = isDefined(config && config.scale) ? config.scale : {\n    min: 1,\n    max: 1.5\n  };\n\n  this._overlaysConfig = {\n    position: {\n      right: -9,\n      top: -6\n    },\n    scale: scale\n  };\n\n  this._current = null;\n\n  this._init();\n}\n\nContextPad.$inject = [\n  'config.contextPad',\n  'eventBus',\n  'overlays'\n];\n\n\n/**\n * Registers events needed for interaction with other components\n */\nContextPad.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n  eventBus.on('selection.changed', function(e) {\n\n    var selection = e.newSelection;\n\n    if (selection.length === 1) {\n      self.open(selection[0]);\n    } else {\n      self.close();\n    }\n  });\n\n  eventBus.on('elements.delete', function(event) {\n    var elements = event.elements;\n\n    forEach(elements, function(e) {\n      if (self.isOpen(e)) {\n        self.close();\n      }\n    });\n  });\n\n  eventBus.on('element.changed', function(event) {\n    var element = event.element,\n        current = self._current;\n\n    // force reopen if element for which we are currently opened changed\n    if (current && current.element === element) {\n      self.open(element, true);\n    }\n  });\n};\n\n\n/**\n * Register a provider with the context pad\n *\n * @param  {ContextPadProvider} provider\n */\nContextPad.prototype.registerProvider = function(provider) {\n  this._providers.push(provider);\n};\n\n\n/**\n * Returns the context pad entries for a given element\n *\n * @param {djs.element.Base} element\n *\n * @return {Array<ContextPadEntryDescriptor>} list of entries\n */\nContextPad.prototype.getEntries = function(element) {\n  var entries = {};\n\n  // loop through all providers and their entries.\n  // group entries by id so that overriding an entry is possible\n  forEach(this._providers, function(provider) {\n    var e = provider.getContextPadEntries(element);\n\n    forEach(e, function(entry, id) {\n      entries[id] = entry;\n    });\n  });\n\n  return entries;\n};\n\n\n/**\n * Trigger an action available on the opened context pad\n *\n * @param  {String} action\n * @param  {Event} event\n * @param  {Boolean} [autoActivate=false]\n */\nContextPad.prototype.trigger = function(action, event, autoActivate) {\n\n  var element = this._current.element,\n      entries = this._current.entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      return handler(originalEvent, element, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      return handler[action](originalEvent, element, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\n\n/**\n * Open the context pad for the given element\n *\n * @param {djs.model.Base} element\n * @param {Boolean} force if true, force reopening the context pad\n */\nContextPad.prototype.open = function(element, force) {\n  if (!force && this.isOpen(element)) {\n    return;\n  }\n\n  this.close();\n  this._updateAndOpen(element);\n};\n\n\nContextPad.prototype._updateAndOpen = function(element) {\n\n  var entries = this.getEntries(element),\n      pad = this.getPad(element),\n      html = pad.html;\n\n  forEach(entries, function(entry, id) {\n    var grouping = entry.group || 'default',\n        control = domify(entry.html || '<div class=\"entry\" draggable=\"true\"></div>'),\n        container;\n\n    domAttr(control, 'data-action', id);\n\n    container = domQuery('[data-group=' + grouping + ']', html);\n    if (!container) {\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\n      html.appendChild(container);\n    }\n\n    container.appendChild(control);\n\n    if (entry.className) {\n      addClasses(control, entry.className);\n    }\n\n    if (entry.title) {\n      domAttr(control, 'title', entry.title);\n    }\n\n    if (entry.imageUrl) {\n      control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\n    }\n  });\n\n  domClasses(html).add('open');\n\n  this._current = {\n    element: element,\n    pad: pad,\n    entries: entries\n  };\n\n  this._eventBus.fire('contextPad.open', { current: this._current });\n};\n\n\nContextPad.prototype.getPad = function(element) {\n  if (this.isOpen()) {\n    return this._current.pad;\n  }\n\n  var self = this;\n\n  var overlays = this._overlays;\n\n  var html = domify('<div class=\"djs-context-pad\"></div>');\n\n  var overlaysConfig = assign({\n    html: html\n  }, this._overlaysConfig);\n\n  domDelegate.bind(html, entrySelector, 'click', function(event) {\n    self.trigger('click', event);\n  });\n\n  domDelegate.bind(html, entrySelector, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  // stop propagation of mouse events\n  domEvent.bind(html, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  this._overlayId = overlays.add(element, 'context-pad', overlaysConfig);\n\n  var pad = overlays.get(this._overlayId);\n\n  this._eventBus.fire('contextPad.create', { element: element, pad: pad });\n\n  return pad;\n};\n\n\n/**\n * Close the context pad\n */\nContextPad.prototype.close = function() {\n  if (!this.isOpen()) {\n    return;\n  }\n\n  this._overlays.remove(this._overlayId);\n\n  this._overlayId = null;\n\n  this._eventBus.fire('contextPad.close', { current: this._current });\n\n  this._current = null;\n};\n\n/**\n * Check if pad is open. If element is given, will check\n * if pad is opened with given element.\n *\n * @param {Element} element\n * @return {Boolean}\n */\nContextPad.prototype.isOpen = function(element) {\n  return !!this._current && (!element ? true : this._current.element === element);\n};\n\n\n\n\n// helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}","import InteractionEventsModule from '../interaction-events';\nimport OverlaysModule from '../overlays';\n\nimport ContextPad from './ContextPad';\n\n\nexport default {\n  __depends__: [\n    InteractionEventsModule,\n    OverlaysModule\n  ],\n  contextPad: [ 'type', ContextPad ]\n};","import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  clone as svgClone,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport { query as domQuery } from 'min-dom';\r\n\r\nimport { getVisual } from '../../util/GraphicsUtil';\r\n\r\nvar MARKER_TYPES = [\r\n  'marker-start',\r\n  'marker-mid',\r\n  'marker-end'\r\n];\r\n\r\nvar NODES_CAN_HAVE_MARKER = [\r\n  'circle',\r\n  'ellipse',\r\n  'line',\r\n  'path',\r\n  'polygon',\r\n  'polyline',\r\n  'rect'\r\n];\r\n\r\n\r\n/**\r\n * Adds support for previews of moving/resizing elements.\r\n */\r\nexport default function PreviewSupport(elementRegistry, eventBus, canvas, styles) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._canvas = canvas;\r\n  this._styles = styles;\r\n\r\n  this._clonedMarkers = {};\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('drag.cleanup', function() {\r\n    forEach(self._clonedMarkers, function(clonedMarker) {\r\n      svgRemove(clonedMarker);\r\n    });\r\n\r\n    self._clonedMarkers = {};\r\n  });\r\n}\r\n\r\nPreviewSupport.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'canvas',\r\n  'styles'\r\n];\r\n\r\n\r\n/**\r\n * Returns graphics of an element.\r\n *\r\n * @param {djs.model.Base} element\r\n *\r\n * @return {SVGElement}\r\n */\r\nPreviewSupport.prototype.getGfx = function(element) {\r\n  return this._elementRegistry.getGraphics(element);\r\n};\r\n\r\n/**\r\n * Adds a move preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n * @param {SVGElement} [gfx]\r\n *\r\n * @return {SVGElement} dragger\r\n */\r\nPreviewSupport.prototype.addDragger = function(element, group, gfx) {\r\n  gfx = gfx || this.getGfx(element);\r\n\r\n  var dragger = svgClone(gfx);\r\n  var bbox = gfx.getBoundingClientRect();\r\n\r\n  this._cloneMarkers(getVisual(dragger));\r\n\r\n  svgAttr(dragger, this._styles.cls('djs-dragger', [], {\r\n    x: bbox.top,\r\n    y: bbox.left\r\n  }));\r\n\r\n  svgAppend(group, dragger);\r\n\r\n  return dragger;\r\n};\r\n\r\n/**\r\n * Adds a resize preview of a given shape to a given svg group.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {SVGElement} group\r\n *\r\n * @return {SVGElement} frame\r\n */\r\nPreviewSupport.prototype.addFrame = function(shape, group) {\r\n\r\n  var frame = svgCreate('rect', {\r\n    class: 'djs-resize-overlay',\r\n    width:  shape.width,\r\n    height: shape.height,\r\n    x: shape.x,\r\n    y: shape.y\r\n  });\r\n\r\n  svgAppend(group, frame);\r\n\r\n  return frame;\r\n};\r\n\r\n/**\r\n * Clone all markers referenced by a node and its child nodes.\r\n *\r\n * @param {SVGElement} gfx\r\n */\r\nPreviewSupport.prototype._cloneMarkers = function(gfx) {\r\n  var self = this;\r\n\r\n  if (gfx.childNodes) {\r\n\r\n    // TODO: use forEach once we drop PhantomJS\r\n    for (var i = 0; i < gfx.childNodes.length; i++) {\r\n\r\n      // recursively clone markers of child nodes\r\n      self._cloneMarkers(gfx.childNodes[ i ]);\r\n    }\r\n  }\r\n\r\n  if (!canHaveMarker(gfx)) {\r\n    return;\r\n  }\r\n\r\n  MARKER_TYPES.forEach(function(markerType) {\r\n    if (svgAttr(gfx, markerType)) {\r\n      var marker = getMarker(gfx, markerType, self._canvas.getContainer());\r\n\r\n      self._cloneMarker(gfx, marker, markerType);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Clone marker referenced by an element.\r\n *\r\n * @param {SVGElement} gfx\r\n * @param {SVGElement} marker\r\n * @param {string} markerType\r\n */\r\nPreviewSupport.prototype._cloneMarker = function(gfx, marker, markerType) {\r\n  var markerId = marker.id;\r\n\r\n  var clonedMarker = this._clonedMarkers[ markerId ];\r\n\r\n  if (!clonedMarker) {\r\n    clonedMarker = svgClone(marker);\r\n\r\n    var clonedMarkerId = markerId + '-clone';\r\n\r\n    clonedMarker.id = clonedMarkerId;\r\n\r\n    svgClasses(clonedMarker)\r\n      .add('djs-dragger')\r\n      .add('djs-dragger-marker');\r\n\r\n    this._clonedMarkers[ markerId ] = clonedMarker;\r\n\r\n    var defs = domQuery('defs', this._canvas._svg);\r\n\r\n    if (!defs) {\r\n      defs = svgCreate('defs');\r\n\r\n      svgAppend(this._canvas._svg, defs);\r\n    }\r\n\r\n    svgAppend(defs, clonedMarker);\r\n  }\r\n\r\n  var reference = idToReference(this._clonedMarkers[ markerId ].id);\r\n\r\n  svgAttr(gfx, markerType, reference);\r\n};\r\n\r\n// helpers //////////\r\n\r\n/**\r\n * Get marker of given type referenced by node.\r\n *\r\n * @param {Node} node\r\n * @param {string} markerType\r\n * @param {Node} [parentNode]\r\n *\r\n * @param {Node}\r\n */\r\nfunction getMarker(node, markerType, parentNode) {\r\n  var id = referenceToId(svgAttr(node, markerType));\r\n\r\n  return domQuery('marker#' + id, parentNode || document);\r\n}\r\n\r\n/**\r\n * Get ID of fragment within current document from its functional IRI reference.\r\n * References may use single or double quotes.\r\n *\r\n * @param {string} reference\r\n *\r\n * @returns {string}\r\n */\r\nfunction referenceToId(reference) {\r\n  return reference.match(/url\\(['\"]?#([^'\"]*)['\"]?\\)/)[1];\r\n}\r\n\r\n/**\r\n * Get functional IRI reference for given ID of fragment within current document.\r\n *\r\n * @param {string} id\r\n *\r\n * @returns {string}\r\n */\r\nfunction idToReference(id) {\r\n  return 'url(#' + id + ')';\r\n}\r\n\r\n/**\r\n * Check wether node type can have marker attributes.\r\n *\r\n * @param {Node} node\r\n *\r\n * @returns {boolean}\r\n */\r\nfunction canHaveMarker(node) {\r\n  return NODES_CAN_HAVE_MARKER.indexOf(node.nodeName) !== -1;\r\n}","import PreviewSupport from './PreviewSupport';\n\nexport default {\n  __init__: [ 'previewSupport' ],\n  previewSupport: [ 'type', PreviewSupport ]\n};\n","var MARKER_OK = 'drop-ok',\n    MARKER_NOT_OK = 'drop-not-ok',\n    MARKER_ATTACH = 'attach-ok',\n    MARKER_NEW_PARENT = 'new-parent';\n\nimport {\n  assign,\n  filter,\n  find,\n  forEach,\n  isArray,\n  isNumber,\n  map\n} from 'min-dash';\n\nimport { getBBox } from '../../util/Elements';\n\n\n/**\n * Create new elements through drag and drop.\n *\n * @param {Canvas} canvas\n * @param {Dragging} dragging\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n * @param {Rules} rules\n */\nexport default function Create(\n    canvas,\n    dragging,\n    eventBus,\n    modeling,\n    rules\n) {\n\n  // rules //////////\n\n  /**\n   * Check wether elements can be created.\n   *\n   * @param {Array<djs.model.Base>} elements\n   * @param {djs.model.Base} target\n   * @param {Point} position\n   * @param {djs.model.Base} [source]\n   *\n   * @returns {boolean|Object|null}\n   */\n  function canCreate(elements, target, position, source) {\n    if (!target) {\n      return false;\n    }\n\n    // ignore child elements\n    elements = filter(elements, function(element) {\n      return !element.parent;\n    });\n\n    var shape = find(elements, function(element) {\n      return !isConnection(element);\n    });\n\n    var attach = false,\n        connect = false,\n        create = false;\n\n    // (1) attaching single shapes\n    if (isSingleShape(elements)) {\n      attach = rules.allowed('shape.attach', {\n        position: position,\n        shape: shape,\n        target: target\n      });\n    }\n\n    if (!attach) {\n\n      // (2) creating elements\n      if (isSingleShape(elements)) {\n        create = rules.allowed('shape.create', {\n          position: position,\n          shape: shape,\n          source: source,\n          target: target\n        });\n      } else {\n        create = rules.allowed('elements.create', {\n          elements: elements,\n          position: position,\n          target: target\n        });\n      }\n\n    }\n\n    // (3) appending single shapes\n    if (create || attach) {\n\n      if (shape && source) {\n        connect = rules.allowed('connection.create', {\n          source: source,\n          target: shape,\n          hints: {\n            targetParent: target,\n            targetAttach: attach\n          }\n        });\n      }\n\n      return {\n        attach: attach,\n        connect: connect\n      };\n    }\n\n    // ignore wether or not elements can be created\n    if (create === null || attach === null) {\n      return null;\n    }\n\n    return false;\n  }\n\n  function setMarker(element, marker) {\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\n\n      if (m === marker) {\n        canvas.addMarker(element, m);\n      } else {\n        canvas.removeMarker(element, m);\n      }\n    });\n  }\n\n  // event handling //////////\n\n  eventBus.on([ 'create.move', 'create.hover' ], function(event) {\n    var context = event.context,\n        elements = context.elements,\n        hover = event.hover,\n        source = context.source;\n\n    if (!hover) {\n      context.canExecute = false;\n      context.target = null;\n\n      return;\n    }\n\n    ensureConstraints(event);\n\n    var position = {\n      x: event.x,\n      y: event.y\n    };\n\n    var canExecute = context.canExecute = hover && canCreate(elements, hover, position, source);\n\n    if (hover && canExecute !== null) {\n      context.target = hover;\n\n      if (canExecute && canExecute.attach) {\n        setMarker(hover, MARKER_ATTACH);\n      } else {\n        setMarker(hover, canExecute ? MARKER_NEW_PARENT : MARKER_NOT_OK);\n      }\n    }\n  });\n\n  eventBus.on([ 'create.end', 'create.out', 'create.cleanup' ], function(event) {\n    var hover = event.hover;\n\n    if (hover) {\n      setMarker(hover, null);\n    }\n  });\n\n  eventBus.on('create.end', function(event) {\n    var context = event.context,\n        source = context.source,\n        shape = context.shape,\n        elements = context.elements,\n        target = context.target,\n        hints = context.hints,\n        canExecute = context.canExecute,\n        attach = canExecute && canExecute.attach,\n        connect = canExecute && canExecute.connect;\n\n    if (canExecute === false || !target) {\n      return false;\n    }\n\n    ensureConstraints(event);\n\n    var position = {\n      x: event.x,\n      y: event.y\n    };\n\n    if (connect) {\n      shape = modeling.appendShape(source, shape, position, target, {\n        attach: attach,\n        connection: connect === true ? {} : connect\n      });\n    } else {\n      elements = modeling.createElements(elements, position, target, assign({}, hints, {\n        attach: attach\n      }));\n\n      // update shape\n      shape = find(elements, function(element) {\n        return !isConnection(element);\n      });\n    }\n\n    // update elements and shape\n    assign(context, {\n      elements: elements,\n      shape: shape\n    });\n\n    assign(event, {\n      elements: elements,\n      shape: shape\n    });\n  });\n\n  // API //////////\n\n  this.start = function(event, elements, context) {\n    if (!isArray(elements)) {\n      elements = [ elements ];\n    }\n\n    var shape = find(elements, function(element) {\n      return !isConnection(element);\n    });\n\n    if (!shape) {\n\n      // at least one shape is required\n      return;\n    }\n\n    context = assign({\n      elements: elements,\n      hints: {},\n      shape: shape\n    }, context || {});\n\n    // make sure each element has x and y\n    forEach(elements, function(element) {\n      if (!isNumber(element.x)) {\n        element.x = 0;\n      }\n\n      if (!isNumber(element.y)) {\n        element.y = 0;\n      }\n    });\n\n    var bbox = getBBox(elements);\n\n    // center elements around cursor\n    forEach(elements, function(element) {\n      if (isConnection(element)) {\n        element.waypoints = map(element.waypoints, function(waypoint) {\n          return {\n            x: waypoint.x - bbox.x - bbox.width / 2,\n            y: waypoint.y - bbox.y - bbox.height / 2\n          };\n        });\n      }\n\n      assign(element, {\n        x: element.x - bbox.x - bbox.width / 2,\n        y: element.y - bbox.y - bbox.height / 2\n      });\n    });\n\n    dragging.init(event, 'create', {\n      cursor: 'grabbing',\n      autoActivate: true,\n      data: {\n        shape: shape,\n        elements: elements,\n        context: context\n      }\n    });\n  };\n}\n\nCreate.$inject = [\n  'canvas',\n  'dragging',\n  'eventBus',\n  'modeling',\n  'rules'\n];\n\n// helpers //////////\n\nfunction ensureConstraints(event) {\n  var context = event.context,\n      createConstraints = context.createConstraints;\n\n  if (!createConstraints) {\n    return;\n  }\n\n  if (createConstraints.left) {\n    event.x = Math.max(event.x, createConstraints.left);\n  }\n\n  if (createConstraints.right) {\n    event.x = Math.min(event.x, createConstraints.right);\n  }\n\n  if (createConstraints.top) {\n    event.y = Math.max(event.y, createConstraints.top);\n  }\n\n  if (createConstraints.bottom) {\n    event.y = Math.min(event.y, createConstraints.bottom);\n  }\n}\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction isSingleShape(elements) {\n  return elements && elements.length === 1 && !isConnection(elements[0]);\n}","import {\r\n  translate\r\n} from '../../util/SvgTransformUtil';\r\n\r\nimport { getVisual } from '../../util/GraphicsUtil';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nvar LOW_PRIORITY = 750;\r\n\r\n\r\nexport default function CreatePreview(\r\n    canvas,\r\n    eventBus,\r\n    graphicsFactory,\r\n    previewSupport,\r\n    styles\r\n) {\r\n  function createDragGroup(elements) {\r\n    var dragGroup = svgCreate('g');\r\n\r\n    svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\r\n\r\n    var childrenGfx = svgCreate('g');\r\n\r\n    elements.forEach(function(element) {\r\n\r\n      // create graphics\r\n      var gfx;\r\n\r\n      if (element.waypoints) {\r\n        gfx = graphicsFactory._createContainer('connection', childrenGfx);\r\n\r\n        graphicsFactory.drawConnection(getVisual(gfx), element);\r\n      } else {\r\n        gfx = graphicsFactory._createContainer('shape', childrenGfx);\r\n\r\n        graphicsFactory.drawShape(getVisual(gfx), element);\r\n\r\n        translate(gfx, element.x, element.y);\r\n      }\r\n\r\n      // add preview\r\n      previewSupport.addDragger(element, dragGroup, gfx);\r\n    });\r\n\r\n    return dragGroup;\r\n  }\r\n\r\n  eventBus.on('create.move', LOW_PRIORITY, function(event) {\r\n\r\n    var hover = event.hover,\r\n        context = event.context,\r\n        elements = context.elements,\r\n        dragGroup = context.dragGroup;\r\n\r\n    // lazily create previews\r\n    if (!dragGroup) {\r\n      dragGroup = context.dragGroup = createDragGroup(elements);\r\n    }\r\n\r\n    var defaultLayer;\r\n\r\n    if (hover) {\r\n      if (!dragGroup.parentNode) {\r\n        defaultLayer = canvas.getDefaultLayer();\r\n\r\n        svgAppend(defaultLayer, dragGroup);\r\n      }\r\n\r\n      translate(dragGroup, event.x, event.y);\r\n    } else {\r\n      svgRemove(dragGroup);\r\n    }\r\n  });\r\n\r\n  eventBus.on('create.cleanup', function(event) {\r\n    var context = event.context,\r\n        dragGroup = context.dragGroup;\r\n\r\n    if (dragGroup) {\r\n      svgRemove(dragGroup);\r\n    }\r\n  });\r\n}\r\n\r\nCreatePreview.$inject = [\r\n  'canvas',\r\n  'eventBus',\r\n  'graphicsFactory',\r\n  'previewSupport',\r\n  'styles'\r\n];","import DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\nimport RulesModule from '../rules';\nimport SelectionModule from '../selection';\n\nimport Create from './Create';\nimport CreatePreview from './CreatePreview';\n\n\nexport default {\n  __depends__: [\n    DraggingModule,\n    PreviewSupportModule,\n    RulesModule,\n    SelectionModule\n  ],\n  __init__: [\n    'create',\n    'createPreview'\n  ],\n  create: [ 'type', Create ],\n  createPreview: [ 'type', CreatePreview ]\n};\n","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  closest as domClosest\n} from 'min-dom';\n\nvar LOW_PRIORITY = 250;\n\n/**\n * The tool manager acts as middle-man between the available tool's and the Palette,\n * it takes care of making sure that the correct active state is set.\n *\n * @param  {Object}    eventBus\n * @param  {Object}    dragging\n */\nexport default function ToolManager(eventBus, dragging) {\n  this._eventBus = eventBus;\n  this._dragging = dragging;\n\n  this._tools = [];\n  this._active = null;\n}\n\nToolManager.$inject = [ 'eventBus', 'dragging' ];\n\nToolManager.prototype.registerTool = function(name, events) {\n  var tools = this._tools;\n\n  if (!events) {\n    throw new Error('A tool has to be registered with it\\'s \"events\"');\n  }\n\n  tools.push(name);\n\n  this.bindEvents(name, events);\n};\n\nToolManager.prototype.isActive = function(tool) {\n  return tool && this._active === tool;\n};\n\nToolManager.prototype.length = function(tool) {\n  return this._tools.length;\n};\n\nToolManager.prototype.setActive = function(tool) {\n  var eventBus = this._eventBus;\n\n  if (this._active !== tool) {\n    this._active = tool;\n\n    eventBus.fire('tool-manager.update', { tool: tool });\n  }\n};\n\nToolManager.prototype.bindEvents = function(name, events) {\n  var eventBus = this._eventBus,\n      dragging = this._dragging;\n\n  var eventsToRegister = [];\n\n  eventBus.on(events.tool + '.init', function(event) {\n    var context = event.context;\n\n    // Active tools that want to reactivate themselves must do this explicitly\n    if (!context.reactivate && this.isActive(name)) {\n      this.setActive(null);\n\n      dragging.cancel();\n      return;\n    }\n\n    this.setActive(name);\n\n  }, this);\n\n  // Todo[ricardo]: add test cases\n  forEach(events, function(event) {\n    eventsToRegister.push(event + '.ended');\n    eventsToRegister.push(event + '.canceled');\n  });\n\n  eventBus.on(eventsToRegister, LOW_PRIORITY, function(event) {\n    var originalEvent = event.originalEvent;\n\n    // We defer the de-activation of the tool to the .activate phase,\n    // so we're able to check if we want to toggle off the current\n    // active tool or switch to a new one\n    if (!this._active) {\n      return;\n    }\n\n    if (originalEvent && domClosest(originalEvent.target, '.group[data-group=\"tools\"]')) {\n      return;\n    }\n\n    this.setActive(null);\n  }, this);\n};\n","import DraggingModule from '../dragging';\n\nimport ToolManager from './ToolManager';\n\nexport default {\n  __depends__: [\n    DraggingModule\n  ],\n  __init__: [ 'toolManager' ],\n  toolManager: [ 'type', ToolManager ]\n};\n","import { values } from 'min-dash';\n\nimport { getEnclosedElements } from '../../util/Elements';\n\nimport { hasSecondaryModifier } from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nvar LASSO_TOOL_CURSOR = 'crosshair';\n\n\nexport default function LassoTool(\n    eventBus, canvas, dragging,\n    elementRegistry, selection, toolManager) {\n\n  this._selection = selection;\n  this._dragging = dragging;\n\n  var self = this;\n\n  // lasso visuals implementation\n\n  /**\n  * A helper that realizes the selection box visual\n  */\n  var visuals = {\n\n    create: function(context) {\n      var container = canvas.getDefaultLayer(),\n          frame;\n\n      frame = context.frame = svgCreate('rect');\n      svgAttr(frame, {\n        class: 'djs-lasso-overlay',\n        width:  1,\n        height: 1,\n        x: 0,\n        y: 0\n      });\n\n      svgAppend(container, frame);\n    },\n\n    update: function(context) {\n      var frame = context.frame,\n          bbox = context.bbox;\n\n      svgAttr(frame, {\n        x: bbox.x,\n        y: bbox.y,\n        width: bbox.width,\n        height: bbox.height\n      });\n    },\n\n    remove: function(context) {\n\n      if (context.frame) {\n        svgRemove(context.frame);\n      }\n    }\n  };\n\n  toolManager.registerTool('lasso', {\n    tool: 'lasso.selection',\n    dragging: 'lasso'\n  });\n\n  eventBus.on('lasso.selection.end', function(event) {\n    var target = event.originalEvent.target;\n\n    // only reactive on diagram click\n    // on some occasions, event.hover is not set and we have to check if the target is an svg\n    if (!event.hover && !(target instanceof SVGElement)) {\n      return;\n    }\n\n    eventBus.once('lasso.selection.ended', function() {\n      self.activateLasso(event.originalEvent, true);\n    });\n  });\n\n  // lasso interaction implementation\n\n  eventBus.on('lasso.end', function(event) {\n\n    var bbox = toBBox(event);\n\n    var elements = elementRegistry.filter(function(element) {\n      return element;\n    });\n\n    self.select(elements, bbox);\n  });\n\n  eventBus.on('lasso.start', function(event) {\n\n    var context = event.context;\n\n    context.bbox = toBBox(event);\n    visuals.create(context);\n  });\n\n  eventBus.on('lasso.move', function(event) {\n\n    var context = event.context;\n\n    context.bbox = toBBox(event);\n    visuals.update(context);\n  });\n\n  eventBus.on('lasso.cleanup', function(event) {\n\n    var context = event.context;\n\n    visuals.remove(context);\n  });\n\n\n  // event integration\n\n  eventBus.on('element.mousedown', 1500, function(event) {\n\n    if (hasSecondaryModifier(event)) {\n      self.activateLasso(event.originalEvent);\n\n      // we've handled the event\n      return true;\n    }\n  });\n}\n\nLassoTool.$inject = [\n  'eventBus',\n  'canvas',\n  'dragging',\n  'elementRegistry',\n  'selection',\n  'toolManager'\n];\n\n\nLassoTool.prototype.activateLasso = function(event, autoActivate) {\n\n  this._dragging.init(event, 'lasso', {\n    autoActivate: autoActivate,\n    cursor: LASSO_TOOL_CURSOR,\n    data: {\n      context: {}\n    }\n  });\n};\n\nLassoTool.prototype.activateSelection = function(event) {\n\n  this._dragging.init(event, 'lasso.selection', {\n    trapClick: false,\n    cursor: LASSO_TOOL_CURSOR,\n    data: {\n      context: {}\n    }\n  });\n};\n\nLassoTool.prototype.select = function(elements, bbox) {\n  var selectedElements = getEnclosedElements(elements, bbox);\n\n  this._selection.select(values(selectedElements));\n};\n\nLassoTool.prototype.toggle = function() {\n  if (this.isActive()) {\n    this._dragging.cancel();\n  } else {\n    this.activateSelection();\n  }\n};\n\nLassoTool.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^lasso/.test(context.prefix);\n};\n\n\n\nfunction toBBox(event) {\n\n  var start = {\n\n    x: event.x - event.dx,\n    y: event.y - event.dy\n  };\n\n  var end = {\n    x: event.x,\n    y: event.y\n  };\n\n  var bbox;\n\n  if ((start.x <= end.x && start.y < end.y) ||\n      (start.x < end.x && start.y <= end.y)) {\n\n    bbox = {\n      x: start.x,\n      y: start.y,\n      width:  end.x - start.x,\n      height: end.y - start.y\n    };\n  } else if ((start.x >= end.x && start.y < end.y) ||\n             (start.x > end.x && start.y <= end.y)) {\n\n    bbox = {\n      x: end.x,\n      y: start.y,\n      width:  start.x - end.x,\n      height: end.y - start.y\n    };\n  } else if ((start.x <= end.x && start.y > end.y) ||\n             (start.x < end.x && start.y >= end.y)) {\n\n    bbox = {\n      x: start.x,\n      y: end.y,\n      width:  end.x - start.x,\n      height: start.y - end.y\n    };\n  } else if ((start.x >= end.x && start.y > end.y) ||\n             (start.x > end.x && start.y >= end.y)) {\n\n    bbox = {\n      x: end.x,\n      y: end.y,\n      width:  start.x - end.x,\n      height: start.y - end.y\n    };\n  } else {\n\n    bbox = {\n      x: end.x,\n      y: end.y,\n      width:  0,\n      height: 0\n    };\n  }\n  return bbox;\n}\n","import ToolManagerModule from '../tool-manager';\n\nimport LassoTool from './LassoTool';\n\nexport default {\n  __depends__: [\n    ToolManagerModule\n  ],\n  __init__: [ 'lassoTool' ],\n  lassoTool: [ 'type', LassoTool ]\n};\n","import {\n  uniqueBy,\n  isArray\n} from 'min-dash';\n\n\n/**\n * A service that offers un- and redoable execution of commands.\n *\n * The command stack is responsible for executing modeling actions\n * in a un- and redoable manner. To do this it delegates the actual\n * command execution to {@link CommandHandler}s.\n *\n * Command handlers provide {@link CommandHandler#execute(ctx)} and\n * {@link CommandHandler#revert(ctx)} methods to un- and redo a command\n * identified by a command context.\n *\n *\n * ## Life-Cycle events\n *\n * In the process the command stack fires a number of life-cycle events\n * that other components to participate in the command execution.\n *\n *    * preExecute\n *    * preExecuted\n *    * execute\n *    * executed\n *    * postExecute\n *    * postExecuted\n *    * revert\n *    * reverted\n *\n * A special event is used for validating, whether a command can be\n * performed prior to its execution.\n *\n *    * canExecute\n *\n * Each of the events is fired as `commandStack.{eventName}` and\n * `commandStack.{commandName}.{eventName}`, respectively. This gives\n * components fine grained control on where to hook into.\n *\n * The event object fired transports `command`, the name of the\n * command and `context`, the command context.\n *\n *\n * ## Creating Command Handlers\n *\n * Command handlers should provide the {@link CommandHandler#execute(ctx)}\n * and {@link CommandHandler#revert(ctx)} methods to implement\n * redoing and undoing of a command.\n *\n * A command handler _must_ ensure undo is performed properly in order\n * not to break the undo chain. It must also return the shapes that\n * got changed during the `execute` and `revert` operations.\n *\n * Command handlers may execute other modeling operations (and thus\n * commands) in their `preExecute` and `postExecute` phases. The command\n * stack will properly group all commands together into a logical unit\n * that may be re- and undone atomically.\n *\n * Command handlers must not execute other commands from within their\n * core implementation (`execute`, `revert`).\n *\n *\n * ## Change Tracking\n *\n * During the execution of the CommandStack it will keep track of all\n * elements that have been touched during the command's execution.\n *\n * At the end of the CommandStack execution it will notify interested\n * components via an 'elements.changed' event with all the dirty\n * elements.\n *\n * The event can be picked up by components that are interested in the fact\n * that elements have been changed. One use case for this is updating\n * their graphical representation after moving / resizing or deletion.\n *\n * @see CommandHandler\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function CommandStack(eventBus, injector) {\n\n  /**\n   * A map of all registered command handlers.\n   *\n   * @type {Object}\n   */\n  this._handlerMap = {};\n\n  /**\n   * A stack containing all re/undoable actions on the diagram\n   *\n   * @type {Array<Object>}\n   */\n  this._stack = [];\n\n  /**\n   * The current index on the stack\n   *\n   * @type {Number}\n   */\n  this._stackIdx = -1;\n\n  /**\n   * Current active commandStack execution\n   *\n   * @type {Object}\n   */\n  this._currentExecution = {\n    actions: [],\n    dirty: []\n  };\n\n\n  this._injector = injector;\n  this._eventBus = eventBus;\n\n  this._uid = 1;\n\n  eventBus.on([\n    'diagram.destroy',\n    'diagram.clear'\n  ], function() {\n    this.clear(false);\n  }, this);\n}\n\nCommandStack.$inject = [ 'eventBus', 'injector' ];\n\n\n/**\n * Execute a command\n *\n * @param {String} command the command to execute\n * @param {Object} context the environment to execute the command in\n */\nCommandStack.prototype.execute = function(command, context) {\n  if (!command) {\n    throw new Error('command required');\n  }\n\n  var action = { command: command, context: context };\n\n  this._pushAction(action);\n  this._internalExecute(action);\n  this._popAction(action);\n};\n\n\n/**\n * Ask whether a given command can be executed.\n *\n * Implementors may hook into the mechanism on two ways:\n *\n *   * in event listeners:\n *\n *     Users may prevent the execution via an event listener.\n *     It must prevent the default action for `commandStack.(<command>.)canExecute` events.\n *\n *   * in command handlers:\n *\n *     If the method {@link CommandHandler#canExecute} is implemented in a handler\n *     it will be called to figure out whether the execution is allowed.\n *\n * @param  {String} command the command to execute\n * @param  {Object} context the environment to execute the command in\n *\n * @return {Boolean} true if the command can be executed\n */\nCommandStack.prototype.canExecute = function(command, context) {\n\n  var action = { command: command, context: context };\n\n  var handler = this._getHandler(command);\n\n  var result = this._fire(command, 'canExecute', action);\n\n  // handler#canExecute will only be called if no listener\n  // decided on a result already\n  if (result === undefined) {\n    if (!handler) {\n      return false;\n    }\n\n    if (handler.canExecute) {\n      result = handler.canExecute(context);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Clear the command stack, erasing all undo / redo history\n */\nCommandStack.prototype.clear = function(emit) {\n  this._stack.length = 0;\n  this._stackIdx = -1;\n\n  if (emit !== false) {\n    this._fire('changed');\n  }\n};\n\n\n/**\n * Undo last command(s)\n */\nCommandStack.prototype.undo = function() {\n  var action = this._getUndoAction(),\n      next;\n\n  if (action) {\n    this._pushAction(action);\n\n    while (action) {\n      this._internalUndo(action);\n      next = this._getUndoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Redo last command(s)\n */\nCommandStack.prototype.redo = function() {\n  var action = this._getRedoAction(),\n      next;\n\n  if (action) {\n    this._pushAction(action);\n\n    while (action) {\n      this._internalExecute(action, true);\n      next = this._getRedoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Register a handler instance with the command stack\n *\n * @param {String} command\n * @param {CommandHandler} handler\n */\nCommandStack.prototype.register = function(command, handler) {\n  this._setHandler(command, handler);\n};\n\n\n/**\n * Register a handler type with the command stack\n * by instantiating it and injecting its dependencies.\n *\n * @param {String} command\n * @param {Function} a constructor for a {@link CommandHandler}\n */\nCommandStack.prototype.registerHandler = function(command, handlerCls) {\n\n  if (!command || !handlerCls) {\n    throw new Error('command and handlerCls must be defined');\n  }\n\n  var handler = this._injector.instantiate(handlerCls);\n  this.register(command, handler);\n};\n\nCommandStack.prototype.canUndo = function() {\n  return !!this._getUndoAction();\n};\n\nCommandStack.prototype.canRedo = function() {\n  return !!this._getRedoAction();\n};\n\n// stack access  //////////////////////\n\nCommandStack.prototype._getRedoAction = function() {\n  return this._stack[this._stackIdx + 1];\n};\n\n\nCommandStack.prototype._getUndoAction = function() {\n  return this._stack[this._stackIdx];\n};\n\n\n// internal functionality //////////////////////\n\nCommandStack.prototype._internalUndo = function(action) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n    self._fire(command, 'revert', action);\n\n    if (handler.revert) {\n      self._markDirty(handler.revert(context));\n    }\n\n    self._revertedAction(action);\n\n    self._fire(command, 'reverted', action);\n  });\n};\n\n\nCommandStack.prototype._fire = function(command, qualifier, event) {\n  if (arguments.length < 3) {\n    event = qualifier;\n    qualifier = null;\n  }\n\n  var names = qualifier ? [ command + '.' + qualifier, qualifier ] : [ command ],\n      i, name, result;\n\n  event = this._eventBus.createEvent(event);\n\n  for (i = 0; (name = names[i]); i++) {\n    result = this._eventBus.fire('commandStack.' + name, event);\n\n    if (event.cancelBubble) {\n      break;\n    }\n  }\n\n  return result;\n};\n\nCommandStack.prototype._createId = function() {\n  return this._uid++;\n};\n\nCommandStack.prototype._atomicDo = function(fn) {\n\n  var execution = this._currentExecution;\n\n  execution.atomic = true;\n\n  try {\n    fn();\n  } finally {\n    execution.atomic = false;\n  }\n};\n\nCommandStack.prototype._internalExecute = function(action, redo) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  if (!handler) {\n    throw new Error('no command handler registered for <' + command + '>');\n  }\n\n  this._pushAction(action);\n\n  if (!redo) {\n    this._fire(command, 'preExecute', action);\n\n    if (handler.preExecute) {\n      handler.preExecute(context);\n    }\n\n    this._fire(command, 'preExecuted', action);\n  }\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n\n    self._fire(command, 'execute', action);\n\n    if (handler.execute) {\n\n      // actual execute + mark return results as dirty\n      self._markDirty(handler.execute(context));\n    }\n\n    // log to stack\n    self._executedAction(action, redo);\n\n    self._fire(command, 'executed', action);\n  });\n\n  if (!redo) {\n    this._fire(command, 'postExecute', action);\n\n    if (handler.postExecute) {\n      handler.postExecute(context);\n    }\n\n    this._fire(command, 'postExecuted', action);\n  }\n\n  this._popAction(action);\n};\n\n\nCommandStack.prototype._pushAction = function(action) {\n\n  var execution = this._currentExecution,\n      actions = execution.actions;\n\n  var baseAction = actions[0];\n\n  if (execution.atomic) {\n    throw new Error('illegal invocation in <execute> or <revert> phase (action: ' + action.command + ')');\n  }\n\n  if (!action.id) {\n    action.id = (baseAction && baseAction.id) || this._createId();\n  }\n\n  actions.push(action);\n};\n\n\nCommandStack.prototype._popAction = function() {\n  var execution = this._currentExecution,\n      actions = execution.actions,\n      dirty = execution.dirty;\n\n  actions.pop();\n\n  if (!actions.length) {\n    this._eventBus.fire('elements.changed', { elements: uniqueBy('id', dirty) });\n\n    dirty.length = 0;\n\n    this._fire('changed');\n  }\n};\n\n\nCommandStack.prototype._markDirty = function(elements) {\n  var execution = this._currentExecution;\n\n  if (!elements) {\n    return;\n  }\n\n  elements = isArray(elements) ? elements : [ elements ];\n\n  execution.dirty = execution.dirty.concat(elements);\n};\n\n\nCommandStack.prototype._executedAction = function(action, redo) {\n  var stackIdx = ++this._stackIdx;\n\n  if (!redo) {\n    this._stack.splice(stackIdx, this._stack.length, action);\n  }\n};\n\n\nCommandStack.prototype._revertedAction = function(action) {\n  this._stackIdx--;\n};\n\n\nCommandStack.prototype._getHandler = function(command) {\n  return this._handlerMap[command];\n};\n\nCommandStack.prototype._setHandler = function(command, handler) {\n  if (!command || !handler) {\n    throw new Error('command and handler required');\n  }\n\n  if (this._handlerMap[command]) {\n    throw new Error('overriding handler for command <' + command + '>');\n  }\n\n  this._handlerMap[command] = handler;\n};\n","import CommandStack from './CommandStack';\n\nexport default {\n  commandStack: [ 'type', CommandStack ]\n};\n","import {\n  getType as getElementType\n} from '../../util/Elements';\n\n/**\n * Adds change support to the diagram, including\n *\n * <ul>\n *   <li>redrawing shapes and connections on change</li>\n * </ul>\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n * @param {GraphicsFactory} graphicsFactory\n */\nexport default function ChangeSupport(\n    eventBus, canvas, elementRegistry,\n    graphicsFactory) {\n\n\n  // redraw shapes / connections on change\n\n  eventBus.on('element.changed', function(event) {\n\n    var element = event.element;\n\n    // element might have been deleted and replaced by new element with same ID\n    // thus check for parent of element except for root element\n    if (element.parent || element === canvas.getRootElement()) {\n      event.gfx = elementRegistry.getGraphics(element);\n    }\n\n    // shape + gfx may have been deleted\n    if (!event.gfx) {\n      return;\n    }\n\n    eventBus.fire(getElementType(element) + '.changed', event);\n  });\n\n  eventBus.on('elements.changed', function(event) {\n\n    var elements = event.elements;\n\n    elements.forEach(function(e) {\n      eventBus.fire('element.changed', { element: e });\n    });\n\n    graphicsFactory.updateContainments(elements);\n  });\n\n  eventBus.on('shape.changed', function(event) {\n    graphicsFactory.update('shape', event.element, event.gfx);\n  });\n\n  eventBus.on('connection.changed', function(event) {\n    graphicsFactory.update('connection', event.element, event.gfx);\n  });\n}\n\nChangeSupport.$inject = [\n  'eventBus',\n  'canvas',\n  'elementRegistry',\n  'graphicsFactory'\n];","import ChangeSupport from './ChangeSupport';\n\nexport default {\n  __init__: [ 'changeSupport'],\n  changeSupport: [ 'type', ChangeSupport ]\n};","import { forEach } from 'min-dash';\n\n/**\n * A handler that align elements in a certain way.\n *\n */\nexport default function AlignElements(modeling, canvas) {\n  this._modeling = modeling;\n  this._canvas = canvas;\n}\n\nAlignElements.$inject = [ 'modeling', 'canvas' ];\n\n\nAlignElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var elements = context.elements,\n      alignment = context.alignment;\n\n\n  forEach(elements, function(element) {\n    var delta = {\n      x: 0,\n      y: 0\n    };\n\n    if (alignment.left) {\n      delta.x = alignment.left - element.x;\n\n    } else if (alignment.right) {\n      delta.x = (alignment.right - element.width) - element.x;\n\n    } else if (alignment.center) {\n      delta.x = (alignment.center - Math.round(element.width / 2)) - element.x;\n\n    } else if (alignment.top) {\n      delta.y = alignment.top - element.y;\n\n    } else if (alignment.bottom) {\n      delta.y = (alignment.bottom - element.height) - element.y;\n\n    } else if (alignment.middle) {\n      delta.y = (alignment.middle - Math.round(element.height / 2)) - element.y;\n    }\n\n    modeling.moveElements([ element ], delta, element.parent);\n  });\n};\n\nAlignElements.prototype.postExecute = function(context) {\n\n};\n","import { some } from 'min-dash';\n\n\n/**\n * A handler that implements reversible appending of shapes\n * to a source shape.\n *\n * @param {canvas} Canvas\n * @param {elementFactory} ElementFactory\n * @param {modeling} Modeling\n */\nexport default function AppendShapeHandler(modeling) {\n  this._modeling = modeling;\n}\n\nAppendShapeHandler.$inject = [ 'modeling' ];\n\n\n// api //////////////////////\n\n\n/**\n * Creates a new shape\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.shape the new shape\n * @param {ElementDescriptor} context.source the source object\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nAppendShapeHandler.prototype.preExecute = function(context) {\n\n  var source = context.source;\n\n  if (!source) {\n    throw new Error('source required');\n  }\n\n  var target = context.target || source.parent,\n      shape = context.shape;\n\n  shape = context.shape =\n    this._modeling.createShape(\n      shape,\n      context.position,\n      target, { attach: context.attach });\n\n  context.shape = shape;\n};\n\nAppendShapeHandler.prototype.postExecute = function(context) {\n  var parent = context.connectionParent || context.shape.parent;\n\n  if (!existsConnection(context.source, context.shape)) {\n\n    // create connection\n    this._modeling.connect(context.source, context.shape, context.connection, parent);\n  }\n};\n\n\nfunction existsConnection(source, target) {\n  return some(source.outgoing, function(c) {\n    return c.target === target;\n  });\n}","export default function CreateConnectionHandler(canvas, layouter) {\n  this._canvas = canvas;\n  this._layouter = layouter;\n}\n\nCreateConnectionHandler.$inject = [ 'canvas', 'layouter' ];\n\n\n// api //////////////////////\n\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.element.Base} context.source the source object\n * @param {djs.element.Base} context.target the parent object\n * @param {Point} context.position position of the new element\n */\nCreateConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      source = context.source,\n      target = context.target,\n      parent = context.parent,\n      parentIndex = context.parentIndex,\n      hints = context.hints;\n\n  if (!source || !target) {\n    throw new Error('source and target required');\n  }\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  connection.source = source;\n  connection.target = target;\n\n  if (!connection.waypoints) {\n    connection.waypoints = this._layouter.layoutConnection(connection, hints);\n  }\n\n  // add connection\n  this._canvas.addConnection(connection, parent, parentIndex);\n\n  return connection;\n};\n\nCreateConnectionHandler.prototype.revert = function(context) {\n  var connection = context.connection;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n};","import {\r\n  assign,\r\n  forEach,\r\n  isNumber,\r\n  map,\r\n  pick,\r\n  values\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getBBox,\r\n  getParents\r\n} from '../../../util/Elements';\r\n\r\nvar round = Math.round;\r\n\r\nexport default function CreateElementsHandler(modeling) {\r\n  this._modeling = modeling;\r\n}\r\n\r\nCreateElementsHandler.$inject = [\r\n  'modeling'\r\n];\r\n\r\nCreateElementsHandler.prototype.preExecute = function(context) {\r\n  var elements = context.elements,\r\n      parent = context.parent,\r\n      parentIndex = context.parentIndex,\r\n      position = context.position,\r\n      hints = context.hints;\r\n\r\n  var modeling = this._modeling;\r\n\r\n  // make sure each element has x and y\r\n  forEach(elements, function(element) {\r\n    if (!isNumber(element.x)) {\r\n      element.x = 0;\r\n    }\r\n\r\n    if (!isNumber(element.y)) {\r\n      element.y = 0;\r\n    }\r\n  });\r\n\r\n  var bbox = getBBox(elements);\r\n\r\n  // center elements around position\r\n  forEach(elements, function(element) {\r\n    if (isConnection(element)) {\r\n      element.waypoints = map(element.waypoints, function(waypoint) {\r\n        return {\r\n          x: round(waypoint.x - bbox.x - bbox.width / 2 + position.x),\r\n          y: round(waypoint.y - bbox.y - bbox.height / 2 + position.y)\r\n        };\r\n      });\r\n    }\r\n\r\n    assign(element, {\r\n      x: round(element.x - bbox.x - bbox.width / 2 + position.x),\r\n      y: round(element.y - bbox.y - bbox.height / 2 + position.y)\r\n    });\r\n  });\r\n\r\n  var parents = getParents(elements);\r\n\r\n  var cache = {};\r\n\r\n  forEach(elements, function(element) {\r\n    if (isConnection(element)) {\r\n      cache[ element.id ] = isNumber(parentIndex) ?\r\n        modeling.createConnection(\r\n          cache[ element.source.id ],\r\n          cache[ element.target.id ],\r\n          parentIndex,\r\n          element,\r\n          element.parent || parent,\r\n          hints\r\n        ) :\r\n        modeling.createConnection(\r\n          cache[ element.source.id ],\r\n          cache[ element.target.id ],\r\n          element,\r\n          element.parent || parent,\r\n          hints\r\n        );\r\n\r\n      return;\r\n    }\r\n\r\n    var createShapeHints = assign({}, hints);\r\n\r\n    if (parents.indexOf(element) === -1) {\r\n      createShapeHints.autoResize = false;\r\n    }\r\n\r\n    cache[ element.id ] = isNumber(parentIndex) ?\r\n      modeling.createShape(\r\n        element,\r\n        pick(element, [ 'x', 'y', 'width', 'height' ]),\r\n        element.parent || parent,\r\n        parentIndex,\r\n        createShapeHints\r\n      ) :\r\n      modeling.createShape(\r\n        element,\r\n        pick(element, [ 'x', 'y', 'width', 'height' ]),\r\n        element.parent || parent,\r\n        createShapeHints\r\n      );\r\n  });\r\n\r\n  context.elements = values(cache);\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}","import { assign } from 'min-dash';\n\nvar round = Math.round;\n\n\n/**\n * A handler that implements reversible addition of shapes.\n *\n * @param {canvas} Canvas\n */\nexport default function CreateShapeHandler(canvas) {\n  this._canvas = canvas;\n}\n\nCreateShapeHandler.$inject = [ 'canvas' ];\n\n\n// api //////////////////////\n\n\n/**\n * Appends a shape to a target shape\n *\n * @param {Object} context\n * @param {djs.model.Base} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nCreateShapeHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      positionOrBounds = context.position,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  if (!parent) {\n    throw new Error('parent required');\n  }\n\n  if (!positionOrBounds) {\n    throw new Error('position required');\n  }\n\n  // (1) add at event center position _or_ at given bounds\n  if (positionOrBounds.width !== undefined) {\n    assign(shape, positionOrBounds);\n  } else {\n    assign(shape, {\n      x: positionOrBounds.x - round(shape.width / 2),\n      y: positionOrBounds.y - round(shape.height / 2)\n    });\n  }\n\n  // (2) add to canvas\n  this._canvas.addShape(shape, parent, parentIndex);\n\n  return shape;\n};\n\n\n/**\n * Undo append by removing the shape\n */\nCreateShapeHandler.prototype.revert = function(context) {\n\n  // (3) remove form canvas\n  this._canvas.removeShape(context.shape);\n};","import inherits from 'inherits';\n\nimport CreateShapeHandler from './CreateShapeHandler';\n\n\n/**\n * A handler that attaches a label to a given target shape.\n *\n * @param {Canvas} canvas\n */\nexport default function CreateLabelHandler(canvas) {\n  CreateShapeHandler.call(this, canvas);\n}\n\ninherits(CreateLabelHandler, CreateShapeHandler);\n\nCreateLabelHandler.$inject = [ 'canvas' ];\n\n\n// api //////////////////////\n\n\nvar originalExecute = CreateShapeHandler.prototype.execute;\n\n/**\n * Appends a label to a target shape.\n *\n * @method CreateLabelHandler#execute\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.target the element the label is attached to\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nCreateLabelHandler.prototype.execute = function(context) {\n\n  var label = context.shape;\n\n  ensureValidDimensions(label);\n\n  label.labelTarget = context.labelTarget;\n\n  return originalExecute.call(this, context);\n};\n\nvar originalRevert = CreateShapeHandler.prototype.revert;\n\n/**\n * Undo append by removing the shape\n */\nCreateLabelHandler.prototype.revert = function(context) {\n  context.shape.labelTarget = null;\n\n  return originalRevert.call(this, context);\n};\n\n\n// helpers //////////////////////\n\nfunction ensureValidDimensions(label) {\n\n  // make sure a label has valid { width, height } dimensions\n  [ 'width', 'height' ].forEach(function(prop) {\n    if (typeof label[prop] === 'undefined') {\n      label[prop] = 0;\n    }\n  });\n}","import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteConnectionHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\nDeleteConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      parent = connection.parent;\n\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};\n","import { forEach } from 'min-dash';\n\n\nexport default function DeleteElementsHandler(modeling, elementRegistry) {\n  this._modeling = modeling;\n  this._elementRegistry = elementRegistry;\n}\n\nDeleteElementsHandler.$inject = [\n  'modeling',\n  'elementRegistry'\n];\n\n\nDeleteElementsHandler.prototype.postExecute = function(context) {\n\n  var modeling = this._modeling,\n      elementRegistry = this._elementRegistry,\n      elements = context.elements;\n\n  forEach(elements, function(element) {\n\n    // element may have been removed with previous\n    // remove operations already (e.g. in case of nesting)\n    if (!elementRegistry.get(element.id)) {\n      return;\n    }\n\n    if (element.waypoints) {\n      modeling.removeConnection(element);\n    } else {\n      modeling.removeShape(element);\n    }\n  });\n};","/**\n * Remove from the beginning of a collection until it is empty.\n *\n * This is a null-safe operation that ensures elements\n * are being removed from the given collection until the\n * collection is empty.\n *\n * The implementation deals with the fact that a remove operation\n * may touch, i.e. remove multiple elements in the collection\n * at a time.\n *\n * @param {Array<Object>} [collection]\n * @param {Function} removeFn\n *\n * @return {Array<Object>} the cleared collection\n */\nexport function saveClear(collection, removeFn) {\n\n  if (typeof removeFn !== 'function') {\n    throw new Error('removeFn iterator must be a function');\n  }\n\n  if (!collection) {\n    return;\n  }\n\n  var e;\n\n  while ((e = collection[0])) {\n    removeFn(e);\n  }\n\n  return collection;\n}\n","import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\nimport { saveClear } from '../../../util/Removal';\n\n\n/**\n * A handler that implements reversible deletion of shapes.\n *\n */\nexport default function DeleteShapeHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteShapeHandler.$inject = [ 'canvas', 'modeling' ];\n\n\n/**\n * - Remove connections\n * - Remove all direct children\n */\nDeleteShapeHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling;\n\n  var shape = context.shape;\n\n  // remove connections\n  saveClear(shape.incoming, function(connection) {\n\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  saveClear(shape.outgoing, function(connection) {\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  // remove child shapes and connections\n  saveClear(shape.children, function(child) {\n    if (isConnection(child)) {\n      modeling.removeConnection(child, { nested: true });\n    } else {\n      modeling.removeShape(child, { nested: true });\n    }\n  });\n};\n\n/**\n * Remove shape and remember the parent\n */\nDeleteShapeHandler.prototype.execute = function(context) {\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = shape.parent;\n\n  context.oldParent = oldParent;\n\n  // remove containment\n  context.oldParentIndex = collectionIdx(oldParent.children, shape);\n\n  // remove shape\n  canvas.removeShape(shape);\n\n  return shape;\n};\n\n\n/**\n * Command revert implementation\n */\nDeleteShapeHandler.prototype.revert = function(context) {\n\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex;\n\n  // restore containment\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  canvas.addShape(shape, oldParent);\n\n  return shape;\n};\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n","import {\n  forEach,\n  sortBy\n} from 'min-dash';\n\n\n/**\n * A handler that distributes elements evenly.\n */\nexport default function DistributeElements(modeling) {\n  this._modeling = modeling;\n}\n\nDistributeElements.$inject = [ 'modeling' ];\n\nvar OFF_AXIS = {\n  x: 'y',\n  y: 'x'\n};\n\nDistributeElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var groups = context.groups,\n      axis = context.axis,\n      dimension = context.dimension;\n\n  function updateRange(group, element) {\n    group.range.min = Math.min(element[axis], group.range.min);\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\n  }\n\n  function center(element) {\n    return element[axis] + element[dimension] / 2;\n  }\n\n  function lastIdx(arr) {\n    return arr.length - 1;\n  }\n\n  function rangeDiff(range) {\n    return range.max - range.min;\n  }\n\n  function centerElement(refCenter, element) {\n    var delta = { y: 0 };\n\n    delta[axis] = refCenter - center(element);\n\n    if (delta[axis]) {\n\n      delta[OFF_AXIS[axis]] = 0;\n\n      modeling.moveElements([ element ], delta, element.parent);\n    }\n  }\n\n  var firstGroup = groups[0],\n      lastGroupIdx = lastIdx(groups),\n      lastGroup = groups[ lastGroupIdx ];\n\n  var margin,\n      spaceInBetween,\n      groupsSize = 0; // the size of each range\n\n  forEach(groups, function(group, idx) {\n    var sortedElements,\n        refElem,\n        refCenter;\n\n    if (group.elements.length < 2) {\n      if (idx && idx !== groups.length - 1) {\n        updateRange(group, group.elements[0]);\n\n        groupsSize += rangeDiff(group.range);\n      }\n      return;\n    }\n\n    sortedElements = sortBy(group.elements, axis);\n\n    refElem = sortedElements[0];\n\n    if (idx === lastGroupIdx) {\n      refElem = sortedElements[lastIdx(sortedElements)];\n    }\n\n    refCenter = center(refElem);\n\n    // wanna update the ranges after the shapes have been centered\n    group.range = null;\n\n    forEach(sortedElements, function(element) {\n\n      centerElement(refCenter, element);\n\n      if (group.range === null) {\n        group.range = {\n          min: element[axis],\n          max: element[axis] + element[dimension]\n        };\n\n        return;\n      }\n\n      // update group's range after centering the range elements\n      updateRange(group, element);\n    });\n\n    if (idx && idx !== groups.length - 1) {\n      groupsSize += rangeDiff(group.range);\n    }\n  });\n\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\n\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\n\n  if (margin < groups.length - 1) {\n    return;\n  }\n\n  forEach(groups, function(group, groupIdx) {\n    var delta = {},\n        prevGroup;\n\n    if (group === firstGroup || group === lastGroup) {\n      return;\n    }\n\n    prevGroup = groups[groupIdx - 1];\n\n    group.range.max = 0;\n\n    forEach(group.elements, function(element, idx) {\n      delta[OFF_AXIS[axis]] = 0;\n      delta[axis] = (prevGroup.range.max - element[axis]) + margin;\n\n      if (group.range.min !== element[axis]) {\n        delta[axis] += element[axis] - group.range.min;\n      }\n\n      if (delta[axis]) {\n        modeling.moveElements([ element ], delta, element.parent);\n      }\n\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\n    });\n  });\n};\n\nDistributeElements.prototype.postExecute = function(context) {\n\n};\n","import { assign } from 'min-dash';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function LayoutConnectionHandler(layouter, canvas) {\n  this._layouter = layouter;\n  this._canvas = canvas;\n}\n\nLayoutConnectionHandler.$inject = [ 'layouter', 'canvas' ];\n\nLayoutConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection;\n\n  var oldWaypoints = connection.waypoints;\n\n  assign(context, {\n    oldWaypoints: oldWaypoints\n  });\n\n  connection.waypoints = this._layouter.layoutConnection(connection, context.hints);\n\n  return connection;\n};\n\nLayoutConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection;\n\n  connection.waypoints = context.oldWaypoints;\n\n  return connection;\n};\n","import { forEach } from 'min-dash';\n\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\n\n/**\n * A handler that implements reversible moving of connections.\n *\n * The handler differs from the layout connection handler in a sense\n * that it preserves the connection layout.\n */\nexport default function MoveConnectionHandler() { }\n\n\nMoveConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      delta = context.delta;\n\n  var newParent = context.newParent || connection.parent,\n      newParentIndex = context.newParentIndex,\n      oldParent = connection.parent;\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, connection);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, connection, newParentIndex);\n\n  // update parent\n  connection.parent = newParent;\n\n  // update waypoint positions\n  forEach(connection.waypoints, function(p) {\n    p.x += delta.x;\n    p.y += delta.y;\n\n    if (p.original) {\n      p.original.x += delta.x;\n      p.original.y += delta.y;\n    }\n  });\n\n  return connection;\n};\n\nMoveConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      newParent = connection.parent,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex,\n      delta = context.delta;\n\n  // remove from newParent\n  collectionRemove(newParent.children, connection);\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, connection, oldParentIndex);\n\n  // restore parent\n  connection.parent = oldParent;\n\n  // revert to old waypoint positions\n  forEach(connection.waypoints, function(p) {\n    p.x -= delta.x;\n    p.y -= delta.y;\n\n    if (p.original) {\n      p.original.x -= delta.x;\n      p.original.y -= delta.y;\n    }\n  });\n\n  return connection;\n};","import {\n  roundPoint\n} from '../layout/LayoutUtil';\n\nimport {\n  center,\n  delta\n} from './PositionUtil';\n\n\n/**\n * Calculates the absolute point relative to the new element's position\n *\n * @param {point} point [absolute]\n * @param {bounds} oldBounds\n * @param {bounds} newBounds\n *\n * @return {point} point [absolute]\n */\nexport function getNewAttachPoint(point, oldBounds, newBounds) {\n  var oldCenter = center(oldBounds),\n      newCenter = center(newBounds),\n      oldDelta = delta(point, oldCenter);\n\n  var newDelta = {\n    x: oldDelta.x * (newBounds.width / oldBounds.width),\n    y: oldDelta.y * (newBounds.height / oldBounds.height)\n  };\n\n  return roundPoint({\n    x: newCenter.x + newDelta.x,\n    y: newCenter.y + newDelta.y\n  });\n}\n\n\n/**\n * Calculates the shape's delta relative to a new position\n * of a certain element's bounds\n *\n * @param {djs.model.Shape} point [absolute]\n * @param {bounds} oldBounds\n * @param {bounds} newBounds\n *\n * @return {delta} delta\n */\nexport function getNewAttachShapeDelta(shape, oldBounds, newBounds) {\n  var shapeCenter = center(shape),\n      oldCenter = center(oldBounds),\n      newCenter = center(newBounds),\n      shapeDelta = delta(shape, shapeCenter),\n      oldCenterDelta = delta(shapeCenter, oldCenter);\n\n  var newCenterDelta = {\n    x: oldCenterDelta.x * (newBounds.width / oldBounds.width),\n    y: oldCenterDelta.y * (newBounds.height / oldBounds.height)\n  };\n\n  var newShapeCenter = {\n    x: newCenter.x + newCenterDelta.x,\n    y: newCenter.y + newCenterDelta.y\n  };\n\n  return roundPoint({\n    x: newShapeCenter.x + shapeDelta.x - shape.x,\n    y: newShapeCenter.y + shapeDelta.y - shape.y\n  });\n}","import {\n  getNewAttachPoint\n} from '../../../../util/AttachUtil';\n\n\nexport function getResizedSourceAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldAnchor = waypoints[0];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getResizedTargetAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldAnchor = waypoints[waypoints.length - 1];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getMovedSourceAnchor(connection, source, moveDelta) {\n  return getResizedSourceAnchor(connection, source, substractPosition(source, moveDelta));\n}\n\n\nexport function getMovedTargetAnchor(connection, target, moveDelta) {\n  return getResizedTargetAnchor(connection, target, substractPosition(target, moveDelta));\n}\n\n\n// helpers //////////////////////\n\nfunction substractPosition(bounds, delta) {\n  return {\n    x: bounds.x - delta.x,\n    y: bounds.y - delta.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n}\n\n\n/**\n * Return waypoints of given connection; throw if non exists (should not happen!!).\n *\n * @param {Connection} connection\n *\n * @return {Array<Point>}\n */\nfunction safeGetWaypoints(connection) {\n\n  var waypoints = connection.waypoints;\n\n  if (!waypoints.length) {\n    throw new Error('connection#' + connection.id + ': no waypoints');\n  }\n\n  return waypoints;\n}\n","import {\n  assign\n} from 'min-dash';\n\nimport {\n  getClosure\n} from '../../../../util/Elements';\n\n\nexport default function MoveClosure() {\n\n  this.allShapes = {};\n  this.allConnections = {};\n\n  this.enclosedElements = {};\n  this.enclosedConnections = {};\n\n  this.topLevel = {};\n}\n\n\nMoveClosure.prototype.add = function(element, isTopLevel) {\n  return this.addAll([ element ], isTopLevel);\n};\n\n\nMoveClosure.prototype.addAll = function(elements, isTopLevel) {\n\n  var newClosure = getClosure(elements, !!isTopLevel, this);\n\n  assign(this, newClosure);\n\n  return this;\n};","import {\n  forEach\n} from 'min-dash';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor\n} from './AnchorsHelper';\n\nimport MoveClosure from './MoveClosure';\n\n\n/**\n * A helper that is able to carry out serialized move\n * operations on multiple elements.\n *\n * @param {Modeling} modeling\n */\nexport default function MoveHelper(modeling) {\n  this._modeling = modeling;\n}\n\n/**\n * Move the specified elements and all children by the given delta.\n *\n * This moves all enclosed connections, too and layouts all affected\n * external connections.\n *\n * @param  {Array<djs.model.Base>} elements\n * @param  {Point} delta\n * @param  {djs.model.Base} newParent applied to the first level of shapes\n *\n * @return {Array<djs.model.Base>} list of touched elements\n */\nMoveHelper.prototype.moveRecursive = function(elements, delta, newParent) {\n  if (!elements) {\n    return [];\n  } else {\n    return this.moveClosure(this.getClosure(elements), delta, newParent);\n  }\n};\n\n/**\n * Move the given closure of elmements.\n *\n * @param {Object} closure\n * @param {Point} delta\n * @param {djs.model.Base} [newParent]\n * @param {djs.model.Base} [newHost]\n */\nMoveHelper.prototype.moveClosure = function(closure, delta, newParent, newHost, primaryShape) {\n  var modeling = this._modeling;\n\n  var allShapes = closure.allShapes,\n      allConnections = closure.allConnections,\n      enclosedConnections = closure.enclosedConnections,\n      topLevel = closure.topLevel,\n      keepParent = false;\n\n  if (primaryShape && primaryShape.parent === newParent) {\n    keepParent = true;\n  }\n\n  // move all shapes\n  forEach(allShapes, function(shape) {\n\n    // move the element according to the given delta\n    modeling.moveShape(shape, delta, topLevel[shape.id] && !keepParent && newParent, {\n      recurse: false,\n      layout: false\n    });\n  });\n\n  // move all child connections / layout external connections\n  forEach(allConnections, function(c) {\n\n    var sourceMoved = !!allShapes[c.source.id],\n        targetMoved = !!allShapes[c.target.id];\n\n    if (enclosedConnections[c.id] && sourceMoved && targetMoved) {\n      modeling.moveConnection(c, delta, topLevel[c.id] && !keepParent && newParent);\n    } else {\n      modeling.layoutConnection(c, {\n        connectionStart: sourceMoved && getMovedSourceAnchor(c, c.source, delta),\n        connectionEnd: targetMoved && getMovedTargetAnchor(c, c.target, delta)\n      });\n    }\n  });\n};\n\n/**\n * Returns the closure for the selected elements\n *\n * @param  {Array<djs.model.Base>} elements\n * @return {MoveClosure} closure\n */\nMoveHelper.prototype.getClosure = function(elements) {\n  return new MoveClosure().addAll(elements, true);\n};","import MoveHelper from './helper/MoveHelper';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function MoveElementsHandler(modeling) {\n  this._helper = new MoveHelper(modeling);\n}\n\nMoveElementsHandler.$inject = [ 'modeling' ];\n\nMoveElementsHandler.prototype.preExecute = function(context) {\n  context.closure = this._helper.getClosure(context.shapes);\n};\n\nMoveElementsHandler.prototype.postExecute = function(context) {\n\n  var hints = context.hints,\n      primaryShape;\n\n  if (hints && hints.primaryShape) {\n    primaryShape = hints.primaryShape;\n    hints.oldParent = primaryShape.parent;\n  }\n\n  this._helper.moveClosure(\n    context.closure,\n    context.delta,\n    context.newParent,\n    context.newHost,\n    primaryShape\n  );\n};","import {\n  assign,\n  forEach,\n  pick\n} from 'min-dash';\n\nimport MoveHelper from './helper/MoveHelper';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * A handler that implements reversible moving of shapes.\n */\nexport default function MoveShapeHandler(modeling) {\n  this._modeling = modeling;\n\n  this._helper = new MoveHelper(modeling);\n}\n\nMoveShapeHandler.$inject = [ 'modeling' ];\n\n\nMoveShapeHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      newParent = context.newParent || shape.parent,\n      newParentIndex = context.newParentIndex,\n      oldParent = shape.parent;\n\n  context.oldBounds = pick(shape, [ 'x', 'y', 'width', 'height']);\n\n  // save old parent in context\n  context.oldParent = oldParent;\n  context.oldParentIndex = collectionRemove(oldParent.children, shape);\n\n  // add to new parent at position\n  collectionAdd(newParent.children, shape, newParentIndex);\n\n  // update shape parent + position\n  assign(shape, {\n    parent: newParent,\n    x: shape.x + delta.x,\n    y: shape.y + delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.postExecute = function(context) {\n\n  var shape = context.shape,\n      delta = context.delta,\n      hints = context.hints;\n\n  var modeling = this._modeling;\n\n  if (hints.layout !== false) {\n\n    forEach(shape.incoming, function(c) {\n      modeling.layoutConnection(c, {\n        connectionEnd: getMovedTargetAnchor(c, shape, delta)\n      });\n    });\n\n    forEach(shape.outgoing, function(c) {\n      modeling.layoutConnection(c, {\n        connectionStart: getMovedSourceAnchor(c, shape, delta)\n      });\n    });\n  }\n\n  if (hints.recurse !== false) {\n    this.moveChildren(context);\n  }\n};\n\nMoveShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex,\n      delta = context.delta;\n\n  // restore previous location in old parent\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  // revert to old position and parent\n  assign(shape, {\n    parent: oldParent,\n    x: shape.x - delta.x,\n    y: shape.y - delta.y\n  });\n\n  return shape;\n};\n\nMoveShapeHandler.prototype.moveChildren = function(context) {\n\n  var delta = context.delta,\n      shape = context.shape;\n\n  this._helper.moveRecursive(shape.children, delta, null);\n};\n\nMoveShapeHandler.prototype.getNewParent = function(context) {\n  return context.newParent || context.shape.parent;\n};\n","import { isArray } from 'min-dash';\n\n\n/**\n * Reconnect connection handler\n */\nexport default function ReconnectConnectionHandler(modeling) {\n  this._modeling = modeling;\n}\n\nReconnectConnectionHandler.$inject = [ 'modeling' ];\n\nReconnectConnectionHandler.prototype.execute = function(context) {\n\n  var newSource = context.newSource,\n      newTarget = context.newTarget,\n      connection = context.connection,\n      dockingOrPoints = context.dockingOrPoints;\n\n  if (!newSource && !newTarget) {\n    throw new Error('newSource or newTarget are required');\n  }\n\n  if (newSource && newTarget) {\n    throw new Error('must specify either newSource or newTarget');\n  }\n\n  if (isArray(dockingOrPoints)) {\n    context.oldWaypoints = connection.waypoints;\n    connection.waypoints = dockingOrPoints;\n  }\n\n  if (newSource) {\n    context.oldSource = connection.source;\n    connection.source = newSource;\n  }\n\n  if (newTarget) {\n    context.oldTarget = connection.target;\n    connection.target = newTarget;\n  }\n\n  return connection;\n};\n\nReconnectConnectionHandler.prototype.postExecute = function(context) {\n  var connection = context.connection,\n      dockingOrPoints = context.dockingOrPoints,\n      newSource = context.newSource,\n      movedEnd = newSource ? 'connectionStart' : 'connectionEnd',\n      newWaypoint,\n      hints = context.hints,\n      layoutHints = {};\n\n  if (hints.layoutConnection === false) {\n    return;\n  }\n\n  if (isArray(dockingOrPoints)) {\n    newWaypoint = newSource ? dockingOrPoints[0] : dockingOrPoints[dockingOrPoints.length - 1];\n  } else {\n    newWaypoint = dockingOrPoints;\n  }\n\n  layoutHints[movedEnd] = getDocking(newWaypoint);\n\n  this._modeling.layoutConnection(connection, layoutHints);\n};\n\nReconnectConnectionHandler.prototype.revert = function(context) {\n\n  var oldSource = context.oldSource,\n      oldTarget = context.oldTarget,\n      oldWaypoints = context.oldWaypoints,\n      connection = context.connection;\n\n  if (oldSource) {\n    connection.source = oldSource;\n  }\n\n  if (oldTarget) {\n    connection.target = oldTarget;\n  }\n\n  if (oldWaypoints) {\n    connection.waypoints = oldWaypoints;\n  }\n\n  return connection;\n};\n\n\n\n// helper ///////////////\n\nfunction getDocking(point) {\n  return point.original || point;\n}","import { forEach } from 'min-dash';\n\n\n/**\n * A handler that implements reversible replacing of shapes.\n * Internally the old shape will be removed and the new shape will be added.\n *\n *\n * @class\n * @constructor\n *\n * @param {canvas} Canvas\n */\nexport default function ReplaceShapeHandler(modeling, rules) {\n  this._modeling = modeling;\n  this._rules = rules;\n}\n\nReplaceShapeHandler.$inject = [ 'modeling', 'rules' ];\n\n\n// api //////////////////////\n\n\n/**\n * Replaces a shape with an replacement Element.\n *\n * The newData object should contain type, x, y.\n *\n * If possible also the incoming/outgoing connection\n * will be restored.\n *\n * @param {Object} context\n */\nReplaceShapeHandler.prototype.preExecute = function(context) {\n\n  var self = this,\n      modeling = this._modeling,\n      rules = this._rules;\n\n  var oldShape = context.oldShape,\n      newData = context.newData,\n      hints = context.hints,\n      newShape;\n\n  function canReconnect(type, source, target, connection) {\n    return rules.allowed(type, {\n      source: source,\n      target: target,\n      connection: connection\n    });\n  }\n\n\n  // (1) place a new shape at the given position\n\n  var position = {\n    x: newData.x,\n    y: newData.y\n  };\n\n  newShape = context.newShape =\n    context.newShape ||\n    self.createShape(newData, position, oldShape.parent, hints);\n\n\n  // (2) update the host\n\n  if (oldShape.host) {\n    modeling.updateAttachment(newShape, oldShape.host);\n  }\n\n\n  // (3) adopt all children from the old shape\n\n  var children;\n\n  if (hints.moveChildren !== false) {\n    children = oldShape.children.slice();\n\n    modeling.moveElements(children, { x: 0, y: 0 }, newShape);\n  }\n\n  // (4) reconnect connections to the new shape (where allowed)\n\n  var incoming = oldShape.incoming.slice(),\n      outgoing = oldShape.outgoing.slice();\n\n  forEach(incoming, function(connection) {\n    var waypoints = connection.waypoints,\n        docking = waypoints[waypoints.length - 1],\n        source = connection.source,\n        allowed = canReconnect('connection.reconnectEnd', source, newShape, connection);\n\n    if (allowed) {\n      self.reconnectEnd(connection, newShape, docking, { layoutConnection: hints.layoutConnection });\n    }\n  });\n\n  forEach(outgoing, function(connection) {\n    var waypoints = connection.waypoints,\n        docking = waypoints[0],\n        target = connection.target,\n        allowed = canReconnect('connection.reconnectStart', newShape, target, connection);\n\n    if (allowed) {\n      self.reconnectStart(connection, newShape, docking, { layoutConnection: hints.layoutConnection });\n    }\n\n  });\n};\n\n\nReplaceShapeHandler.prototype.postExecute = function(context) {\n  var modeling = this._modeling;\n\n  var oldShape = context.oldShape,\n      newShape = context.newShape,\n      layoutConnection = context.hints.layoutConnection;\n\n  // do not layout if explicitly excluded\n  if (layoutConnection !== false) {\n    forEach(newShape.incoming, function(c) {\n      modeling.layoutConnection(c, { endChanged: true });\n    });\n\n    forEach(newShape.outgoing, function(c) {\n      modeling.layoutConnection(c, { startChanged: true });\n    });\n  }\n\n  modeling.removeShape(oldShape);\n};\n\n\nReplaceShapeHandler.prototype.execute = function(context) {};\n\nReplaceShapeHandler.prototype.revert = function(context) {};\n\n\nReplaceShapeHandler.prototype.createShape = function(shape, position, target, hints) {\n  return this._modeling.createShape(shape, position, target, hints);\n};\n\n\nReplaceShapeHandler.prototype.reconnectStart = function(connection, newSource, dockingPoint, hints) {\n  this._modeling.reconnectStart(connection, newSource, dockingPoint, hints);\n};\n\n\nReplaceShapeHandler.prototype.reconnectEnd = function(connection, newTarget, dockingPoint, hints) {\n  this._modeling.reconnectEnd(connection, newTarget, dockingPoint, hints);\n};\n","import {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  getResizedSourceAnchor,\n  getResizedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * A handler that implements reversible resizing of shapes.\n *\n * @param {Modeling} modeling\n */\nexport default function ResizeShapeHandler(modeling) {\n  this._modeling = modeling;\n}\n\nResizeShapeHandler.$inject = [ 'modeling' ];\n\n/**\n * {\n *   shape: {....}\n *   newBounds: {\n *     width:  20,\n *     height: 40,\n *     x:       5,\n *     y:      10\n *   }\n *\n * }\n */\nResizeShapeHandler.prototype.execute = function(context) {\n  var shape = context.shape,\n      newBounds = context.newBounds,\n      minBounds = context.minBounds;\n\n  if (newBounds.x === undefined || newBounds.y === undefined ||\n      newBounds.width === undefined || newBounds.height === undefined) {\n    throw new Error('newBounds must have {x, y, width, height} properties');\n  }\n\n  if (minBounds && (newBounds.width < minBounds.width\n    || newBounds.height < minBounds.height)) {\n    throw new Error('width and height cannot be less than minimum height and width');\n  } else if (!minBounds\n    && newBounds.width < 10 || newBounds.height < 10) {\n    throw new Error('width and height cannot be less than 10px');\n  }\n\n  // save old bbox in context\n  context.oldBounds = {\n    width:  shape.width,\n    height: shape.height,\n    x:      shape.x,\n    y:      shape.y\n  };\n\n  // update shape\n  assign(shape, {\n    width:  newBounds.width,\n    height: newBounds.height,\n    x:      newBounds.x,\n    y:      newBounds.y\n  });\n\n  return shape;\n};\n\nResizeShapeHandler.prototype.postExecute = function(context) {\n\n  var shape = context.shape,\n      oldBounds = context.oldBounds;\n\n  var modeling = this._modeling;\n\n  forEach(shape.incoming, function(c) {\n    modeling.layoutConnection(c, {\n      connectionEnd: getResizedTargetAnchor(c, shape, oldBounds)\n    });\n  });\n\n  forEach(shape.outgoing, function(c) {\n    modeling.layoutConnection(c, {\n      connectionStart: getResizedSourceAnchor(c, shape, oldBounds)\n    });\n  });\n\n};\n\nResizeShapeHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldBounds = context.oldBounds;\n\n  // restore previous bbox\n  assign(shape, {\n    width:  oldBounds.width,\n    height: oldBounds.height,\n    x:      oldBounds.x,\n    y:      oldBounds.y\n  });\n\n  return shape;\n};\n","import { forEach } from 'min-dash';\n\nimport {\n  resizeBounds\n} from '../../space-tool/SpaceUtil';\n\n\n/**\n * A handler that implements reversible creating and removing of space.\n *\n * It executes in two phases:\n *\n *  (1) resize all affected resizeShapes\n *  (2) move all affected moveElements\n */\nexport default function SpaceToolHandler(modeling) {\n  this._modeling = modeling;\n}\n\nSpaceToolHandler.$inject = [ 'modeling' ];\n\n\nSpaceToolHandler.prototype.preExecute = function(context) {\n\n  // resize\n  var modeling = this._modeling,\n      resizingShapes = context.resizingShapes,\n      delta = context.delta,\n      direction = context.direction;\n\n  forEach(resizingShapes, function(shape) {\n    var newBounds = resizeBounds(shape, direction, delta);\n\n    modeling.resizeShape(shape, newBounds);\n  });\n};\n\nSpaceToolHandler.prototype.postExecute = function(context) {\n\n  // move\n  var modeling = this._modeling,\n      movingShapes = context.movingShapes,\n      delta = context.delta;\n\n  modeling.moveElements(movingShapes, delta, undefined, { autoResize: false, attach: false });\n};\n\nSpaceToolHandler.prototype.execute = function(context) {};\nSpaceToolHandler.prototype.revert = function(context) {};\n","/**\n * A handler that toggles the collapsed state of an element\n * and the visibility of all its children.\n *\n * @param {Modeling} modeling\n */\nexport default function ToggleShapeCollapseHandler(modeling) {\n  this._modeling = modeling;\n}\n\nToggleShapeCollapseHandler.$inject = [ 'modeling' ];\n\n\nToggleShapeCollapseHandler.prototype.execute = function(context) {\n\n  var shape = context.shape,\n      children = shape.children;\n\n  // remember previous visibility of children\n  context.oldChildrenVisibility = getElementsVisibility(children);\n\n  // toggle state\n  shape.collapsed = !shape.collapsed;\n\n  // hide/show children\n  setHidden(children, shape.collapsed);\n\n  return [shape].concat(children);\n};\n\n\nToggleShapeCollapseHandler.prototype.revert = function(context) {\n\n  var shape = context.shape,\n      oldChildrenVisibility = context.oldChildrenVisibility;\n\n  var children = shape.children;\n\n  // set old visability of children\n  restoreVisibility(children, oldChildrenVisibility);\n\n  // retoggle state\n  shape.collapsed = !shape.collapsed;\n\n  return [shape].concat(children);\n};\n\n\n// helpers //////////////////////\n\n/**\n * Return a map { elementId -> hiddenState}.\n *\n * @param {Array<djs.model.Shape>} elements\n *\n * @return {Object}\n */\nfunction getElementsVisibility(elements) {\n\n  var result = {};\n\n  elements.forEach(function(e) {\n    result[e.id] = e.hidden;\n  });\n\n  return result;\n}\n\n\nfunction setHidden(elements, newHidden) {\n  elements.forEach(function(element) {\n    element.hidden = newHidden;\n  });\n}\n\nfunction restoreVisibility(elements, lastState) {\n  elements.forEach(function(e) {\n    e.hidden = lastState[e.id];\n  });\n}\n","import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from '../../../util/Collections';\n\n/**\n * A handler that implements reversible attaching/detaching of shapes.\n */\nexport default function UpdateAttachmentHandler(modeling) {\n  this._modeling = modeling;\n}\n\nUpdateAttachmentHandler.$inject = [ 'modeling' ];\n\n\nUpdateAttachmentHandler.prototype.execute = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = shape.host;\n\n  // (0) detach from old host\n  context.oldHost = oldHost;\n  context.attacherIdx = removeAttacher(oldHost, shape);\n\n  // (1) attach to new host\n  addAttacher(newHost, shape);\n\n  // (2) update host\n  shape.host = newHost;\n\n  return shape;\n};\n\nUpdateAttachmentHandler.prototype.revert = function(context) {\n  var shape = context.shape,\n      newHost = context.newHost,\n      oldHost = context.oldHost,\n      attacherIdx = context.attacherIdx;\n\n  // (2) update host\n  shape.host = oldHost;\n\n  // (1) attach to new host\n  removeAttacher(newHost, shape);\n\n  // (0) detach from old host\n  addAttacher(oldHost, shape, attacherIdx);\n\n  return shape;\n};\n\n\nfunction removeAttacher(host, attacher) {\n\n  // remove attacher from host\n  return collectionRemove(host && host.attachers, attacher);\n}\n\nfunction addAttacher(host, attacher, idx) {\n\n  if (!host) {\n    return;\n  }\n\n  var attachers = host.attachers;\n\n  if (!attachers) {\n    host.attachers = attachers = [];\n  }\n\n  collectionAdd(attachers, attacher, idx);\n}\n","export default function UpdateWaypointsHandler() { }\n\nUpdateWaypointsHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      newWaypoints = context.newWaypoints;\n\n  context.oldWaypoints = connection.waypoints;\n\n  connection.waypoints = newWaypoints;\n\n  return connection;\n};\n\nUpdateWaypointsHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      oldWaypoints = context.oldWaypoints;\n\n  connection.waypoints = oldWaypoints;\n\n  return connection;\n};","import {\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport {\n  Base\n} from '../../model';\n\nimport AlignElementsHandler from './cmd/AlignElementsHandler';\nimport AppendShapeHandler from './cmd/AppendShapeHandler';\nimport CreateConnectionHandler from './cmd/CreateConnectionHandler';\nimport CreateElementsHandler from './cmd/CreateElementsHandler';\nimport CreateLabelHandler from './cmd/CreateLabelHandler';\nimport CreateShapeHandler from './cmd/CreateShapeHandler';\nimport DeleteConnectionHandler from './cmd/DeleteConnectionHandler';\nimport DeleteElementsHandler from './cmd/DeleteElementsHandler';\nimport DeleteShapeHandler from './cmd/DeleteShapeHandler';\nimport DistributeElementsHandler from './cmd/DistributeElementsHandler';\nimport LayoutConnectionHandler from './cmd/LayoutConnectionHandler';\nimport MoveConnectionHandler from './cmd/MoveConnectionHandler';\nimport MoveElementsHandler from './cmd/MoveElementsHandler';\nimport MoveShapeHandler from './cmd/MoveShapeHandler';\nimport ReconnectConnectionHandler from './cmd/ReconnectConnectionHandler';\nimport ReplaceShapeHandler from './cmd/ReplaceShapeHandler';\nimport ResizeShapeHandler from './cmd/ResizeShapeHandler';\nimport SpaceToolHandler from './cmd/SpaceToolHandler';\nimport ToggleShapeCollapseHandler from './cmd/ToggleShapeCollapseHandler';\nimport UpdateAttachmentHandler from './cmd/UpdateAttachmentHandler';\nimport UpdateWaypointsHandler from './cmd/UpdateWaypointsHandler';\n\n\n/**\n * The basic modeling entry point.\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n */\nexport default function Modeling(eventBus, elementFactory, commandStack) {\n  this._eventBus = eventBus;\n  this._elementFactory = elementFactory;\n  this._commandStack = commandStack;\n\n  var self = this;\n\n  eventBus.on('diagram.init', function() {\n\n    // register modeling handlers\n    self.registerHandlers(commandStack);\n  });\n}\n\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack' ];\n\n\nModeling.prototype.getHandlers = function() {\n  return {\n    'shape.append': AppendShapeHandler,\n    'shape.create': CreateShapeHandler,\n    'shape.delete': DeleteShapeHandler,\n    'shape.move': MoveShapeHandler,\n    'shape.resize': ResizeShapeHandler,\n    'shape.replace': ReplaceShapeHandler,\n    'shape.toggleCollapse': ToggleShapeCollapseHandler,\n\n    'spaceTool': SpaceToolHandler,\n\n    'label.create': CreateLabelHandler,\n\n    'connection.create': CreateConnectionHandler,\n    'connection.delete': DeleteConnectionHandler,\n    'connection.move': MoveConnectionHandler,\n    'connection.layout': LayoutConnectionHandler,\n\n    'connection.updateWaypoints': UpdateWaypointsHandler,\n\n    'connection.reconnectStart': ReconnectConnectionHandler,\n    'connection.reconnectEnd': ReconnectConnectionHandler,\n\n    'elements.create': CreateElementsHandler,\n    'elements.move': MoveElementsHandler,\n    'elements.delete': DeleteElementsHandler,\n\n    'elements.distribute': DistributeElementsHandler,\n    'elements.align': AlignElementsHandler,\n\n    'element.updateAttachment': UpdateAttachmentHandler\n  };\n};\n\n/**\n * Register handlers with the command stack\n *\n * @param {CommandStack} commandStack\n */\nModeling.prototype.registerHandlers = function(commandStack) {\n  forEach(this.getHandlers(), function(handler, id) {\n    commandStack.registerHandler(id, handler);\n  });\n};\n\n\n// modeling helpers //////////////////////\n\nModeling.prototype.moveShape = function(shape, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = null;\n  }\n\n  var context = {\n    shape: shape,\n    delta:  delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.move', context);\n};\n\n\n/**\n * Update the attachment of the given shape.\n *\n * @param {djs.mode.Base} shape\n * @param {djs.model.Base} [newHost]\n */\nModeling.prototype.updateAttachment = function(shape, newHost) {\n  var context = {\n    shape: shape,\n    newHost: newHost\n  };\n\n  this._commandStack.execute('element.updateAttachment', context);\n};\n\n\n/**\n * Move a number of shapes to a new target, either setting it as\n * the new parent or attaching it.\n *\n * @param {Array<djs.mode.Base>} shapes\n * @param {Point} delta\n * @param {djs.model.Base} [target]\n * @param {Object} [hints]\n * @param {Boolean} [hints.attach=false]\n */\nModeling.prototype.moveElements = function(shapes, delta, target, hints) {\n\n  hints = hints || {};\n\n  var attach = hints.attach;\n\n  var newParent = target,\n      newHost;\n\n  if (attach === true) {\n    newHost = target;\n    newParent = target.parent;\n  } else\n\n  if (attach === false) {\n    newHost = null;\n  }\n\n  var context = {\n    shapes: shapes,\n    delta: delta,\n    newParent: newParent,\n    newHost: newHost,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.move', context);\n};\n\n\nModeling.prototype.moveConnection = function(connection, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = undefined;\n  }\n\n  var context = {\n    connection: connection,\n    delta: delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.move', context);\n};\n\n\nModeling.prototype.layoutConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.layout', context);\n};\n\n\n/**\n * Create connection.\n *\n * @param {djs.model.Base} source\n * @param {djs.model.Base} target\n * @param {Number} [parentIndex]\n * @param {Object|djs.model.Connection} connection\n * @param {djs.model.Base} parent\n * @param {Object} hints\n *\n * @return {djs.model.Connection} the created connection.\n */\nModeling.prototype.createConnection = function(source, target, parentIndex, connection, parent, hints) {\n\n  if (typeof parentIndex === 'object') {\n    hints = parent;\n    parent = connection;\n    connection = parentIndex;\n    parentIndex = undefined;\n  }\n\n  connection = this._create('connection', connection);\n\n  var context = {\n    source: source,\n    target: target,\n    parent: parent,\n    parentIndex: parentIndex,\n    connection: connection,\n    hints: hints\n  };\n\n  this._commandStack.execute('connection.create', context);\n\n  return context.connection;\n};\n\n\n/**\n * Create a shape at the specified position.\n *\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape|djs.model.Root} target\n * @param {Number} [parentIndex] position in parents children list\n * @param {Object} [hints]\n * @param {Boolean} [hints.attach] whether to attach to target or become a child\n *\n * @return {djs.model.Shape} the created shape\n */\nModeling.prototype.createShape = function(shape, position, target, parentIndex, hints) {\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var attach = hints.attach,\n      parent,\n      host;\n\n  shape = this._create('shape', shape);\n\n  if (attach) {\n    parent = target.parent;\n    host = target;\n  } else {\n    parent = target;\n  }\n\n  var context = {\n    position: position,\n    shape: shape,\n    parent: parent,\n    parentIndex: parentIndex,\n    host: host,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.create', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.createElements = function(elements, position, parent, parentIndex, hints) {\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var context = {\n    position: position,\n    elements: elements,\n    parent: parent,\n    parentIndex: parentIndex,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.create', context);\n\n  return context.elements;\n};\n\n\nModeling.prototype.createLabel = function(labelTarget, position, label, parent) {\n\n  label = this._create('label', label);\n\n  var context = {\n    labelTarget: labelTarget,\n    position: position,\n    parent: parent || labelTarget.parent,\n    shape: label\n  };\n\n  this._commandStack.execute('label.create', context);\n\n  return context.shape;\n};\n\n\n/**\n * Append shape to given source, drawing a connection\n * between source and the newly created shape.\n *\n * @param {djs.model.Shape} source\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape} target\n * @param {Object} [hints]\n * @param {Boolean} [hints.attach]\n * @param {djs.model.Connection|Object} [hints.connection]\n * @param {djs.model.Base} [hints.connectionParent]\n *\n * @return {djs.model.Shape} the newly created shape\n */\nModeling.prototype.appendShape = function(source, shape, position, target, hints) {\n\n  hints = hints || {};\n\n  shape = this._create('shape', shape);\n\n  var context = {\n    source: source,\n    position: position,\n    target: target,\n    shape: shape,\n    connection: hints.connection,\n    connectionParent: hints.connectionParent,\n    attach: hints.attach\n  };\n\n  this._commandStack.execute('shape.append', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.removeElements = function(elements) {\n  var context = {\n    elements: elements\n  };\n\n  this._commandStack.execute('elements.delete', context);\n};\n\n\nModeling.prototype.distributeElements = function(groups, axis, dimension) {\n  var context = {\n    groups: groups,\n    axis: axis,\n    dimension: dimension\n  };\n\n  this._commandStack.execute('elements.distribute', context);\n};\n\n\nModeling.prototype.removeShape = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.delete', context);\n};\n\n\nModeling.prototype.removeConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.delete', context);\n};\n\nModeling.prototype.replaceShape = function(oldShape, newShape, hints) {\n  var context = {\n    oldShape: oldShape,\n    newData: newShape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.replace', context);\n\n  return context.newShape;\n};\n\nModeling.prototype.alignElements = function(elements, alignment) {\n  var context = {\n    elements: elements,\n    alignment: alignment\n  };\n\n  this._commandStack.execute('elements.align', context);\n};\n\nModeling.prototype.resizeShape = function(shape, newBounds, minBounds, hints) {\n  var context = {\n    shape: shape,\n    newBounds: newBounds,\n    minBounds: minBounds,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.resize', context);\n};\n\nModeling.prototype.createSpace = function(movingShapes, resizingShapes, delta, direction) {\n  var context = {\n    movingShapes: movingShapes,\n    resizingShapes: resizingShapes,\n    delta: delta,\n    direction: direction\n  };\n\n  this._commandStack.execute('spaceTool', context);\n};\n\nModeling.prototype.updateWaypoints = function(connection, newWaypoints, hints) {\n  var context = {\n    connection: connection,\n    newWaypoints: newWaypoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.updateWaypoints', context);\n};\n\nModeling.prototype.reconnectStart = function(connection, newSource, dockingOrPoints, hints) {\n  var context = {\n    connection: connection,\n    newSource: newSource,\n    dockingOrPoints: dockingOrPoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.reconnectStart', context);\n};\n\nModeling.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints, hints) {\n  var context = {\n    connection: connection,\n    newTarget: newTarget,\n    dockingOrPoints: dockingOrPoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.reconnectEnd', context);\n};\n\nModeling.prototype.connect = function(source, target, attrs, hints) {\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\n};\n\nModeling.prototype._create = function(type, attrs) {\n  if (attrs instanceof Base) {\n    return attrs;\n  } else {\n    return this._elementFactory.create(type, attrs);\n  }\n};\n\nModeling.prototype.toggleCollapse = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.toggleCollapse', context);\n};\n","import {\n  getMid\n} from './LayoutUtil';\n\n\n/**\n * A base connection layouter implementation\n * that layouts the connection by directly connecting\n * mid(source) + mid(target).\n */\nexport default function BaseLayouter() {}\n\n\n/**\n * Return the new layouted waypoints for the given connection.\n *\n * The connection passed is still unchanged; you may figure out about\n * the new connection start / end via the layout hints provided.\n *\n * @param {djs.model.Connection} connection\n * @param {Object} [hints]\n * @param {Point} [hints.connectionStart]\n * @param {Point} [hints.connectionEnd]\n * @param {Point} [hints.source]\n * @param {Point} [hints.target]\n *\n * @return {Array<Point>} the layouted connection waypoints\n */\nBaseLayouter.prototype.layoutConnection = function(connection, hints) {\n\n  hints = hints || {};\n\n  return [\n    hints.connectionStart || getMid(hints.source || connection.source),\n    hints.connectionEnd || getMid(hints.target || connection.target)\n  ];\n};\n","/**\n * Get Resize direction given axis + offset\n *\n * @param {String} axis (x|y)\n * @param {Number} offset\n *\n * @return {String} (e|w|n|s)\n */\nexport function getDirection(axis, offset) {\n\n  if (axis === 'x') {\n    if (offset > 0) {\n      return 'e';\n    }\n\n    if (offset < 0) {\n      return 'w';\n    }\n  }\n\n  if (axis === 'y') {\n    if (offset > 0) {\n      return 's';\n    }\n\n    if (offset < 0) {\n      return 'n';\n    }\n  }\n\n  return null;\n}\n\n\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {String} direction in which the element is resized (n, s, e, w)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\nexport function resizeBounds(bounds, direction, delta) {\n\n  var dx = delta.x,\n      dy = delta.y;\n\n  switch (direction) {\n\n  case 'n':\n    return {\n      x: bounds.x,\n      y: bounds.y + dy,\n      width: bounds.width,\n      height: bounds.height - dy\n    };\n\n  case 's':\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: bounds.height + dy\n    };\n\n  case 'w':\n    return {\n      x: bounds.x + dx,\n      y: bounds.y,\n      width: bounds.width - dx,\n      height: bounds.height\n    };\n\n  case 'e':\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width + dx,\n      height: bounds.height\n    };\n\n  default:\n    throw new Error('unrecognized direction: ' + direction);\n  }\n}","import CommandModule from '../../command';\nimport ChangeSupportModule from '../change-support';\nimport SelectionModule from '../selection';\nimport RulesModule from '../rules';\n\nimport Modeling from './Modeling';\nimport BaseLayouter from '../../layout/BaseLayouter';\n\n\nexport default {\n  __depends__: [\n    CommandModule,\n    ChangeSupportModule,\n    SelectionModule,\n    RulesModule\n  ],\n  __init__: [ 'modeling' ],\n  modeling: [ 'type', Modeling ],\n  layouter: [ 'type', BaseLayouter ]\n};\n","import {\n  set as cursorSet,\n  unset as cursorUnset\n} from '../../util/Cursor';\n\nimport {\n  install as installClickTrap\n} from '../../util/ClickTrap';\n\nimport {\n  delta as deltaPos\n} from '../../util/PositionUtil';\n\nimport {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\n\nvar THRESHOLD = 15;\n\n\n/**\n * Move the canvas via mouse.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function MoveCanvas(eventBus, canvas) {\n\n  var context;\n\n\n  // listen for move on element mouse down;\n  // allow others to hook into the event before us though\n  // (dragging / element moving will do this)\n  eventBus.on('element.mousedown', 500, function(e) {\n    return handleStart(e.originalEvent);\n  });\n\n\n  function handleMove(event) {\n\n    var start = context.start,\n        position = toPoint(event),\n        delta = deltaPos(position, start);\n\n    if (!context.dragging && length(delta) > THRESHOLD) {\n      context.dragging = true;\n\n      installClickTrap(eventBus);\n\n      cursorSet('grab');\n    }\n\n    if (context.dragging) {\n\n      var lastPosition = context.last || context.start;\n\n      delta = deltaPos(position, lastPosition);\n\n      canvas.scroll({\n        dx: delta.x,\n        dy: delta.y\n      });\n\n      context.last = position;\n    }\n\n    // prevent select\n    event.preventDefault();\n  }\n\n\n  function handleEnd(event) {\n    domEvent.unbind(document, 'mousemove', handleMove);\n    domEvent.unbind(document, 'mouseup', handleEnd);\n\n    context = null;\n\n    cursorUnset();\n  }\n\n  function handleStart(event) {\n\n    // event is already handled by '.djs-draggable'\n    if (domClosest(event.target, '.djs-draggable')) {\n      return;\n    }\n\n\n    // reject non-left left mouse button or modifier key\n    if (event.button || event.ctrlKey || event.shiftKey || event.altKey) {\n      return;\n    }\n\n    context = {\n      start: toPoint(event)\n    };\n\n    domEvent.bind(document, 'mousemove', handleMove);\n    domEvent.bind(document, 'mouseup', handleEnd);\n\n    // we've handled the event\n    return true;\n  }\n}\n\n\nMoveCanvas.$inject = [\n  'eventBus',\n  'canvas'\n];\n\n\n\n// helpers ///////\n\nfunction length(point) {\n  return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));\n}\n","import MoveCanvas from './MoveCanvas';\n\nexport default {\n  __init__: [ 'moveCanvas' ],\n  moveCanvas: [ 'type', MoveCanvas ]\n};","import {\n  assign,\n  filter,\n  groupBy,\n  isObject\n} from 'min-dash';\n\nvar LOW_PRIORITY = 500,\n    MEDIUM_PRIORITY = 1250,\n    HIGH_PRIORITY = 1500;\n\nimport { getOriginal as getOriginalEvent } from '../../util/Event';\n\nvar round = Math.round;\n\nfunction mid(element) {\n  return {\n    x: element.x + round(element.width / 2),\n    y: element.y + round(element.height / 2)\n  };\n}\n\n/**\n * A plugin that makes shapes draggable / droppable.\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Modeling} modeling\n * @param {Selection} selection\n * @param {Rules} rules\n */\nexport default function MoveEvents(\n    eventBus, dragging, modeling,\n    selection, rules) {\n\n  // rules\n\n  function canMove(shapes, delta, position, target) {\n\n    return rules.allowed('elements.move', {\n      shapes: shapes,\n      delta: delta,\n      position: position,\n      target: target\n    });\n  }\n\n\n  // move events\n\n  // assign a high priority to this handler to setup the environment\n  // others may hook up later, e.g. at default priority and modify\n  // the move environment.\n  //\n  // This sets up the context with\n  //\n  // * shape: the primary shape being moved\n  // * shapes: a list of shapes to be moved\n  // * validatedShapes: a list of shapes that are being checked\n  //                    against the rules before and during move\n  //\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(event) {\n\n    var context = event.context,\n        shape = event.shape,\n        shapes = selection.get().slice();\n\n    // move only single shape if the dragged element\n    // is not part of the current selection\n    if (shapes.indexOf(shape) === -1) {\n      shapes = [ shape ];\n    }\n\n    // ensure we remove nested elements in the collection\n    // and add attachers for a proper dragger\n    shapes = removeNested(shapes);\n\n    // attach shapes to drag context\n    assign(context, {\n      shapes: shapes,\n      validatedShapes: shapes,\n      shape: shape\n    });\n  });\n\n\n  // assign a high priority to this handler to setup the environment\n  // others may hook up later, e.g. at default priority and modify\n  // the move environment\n  //\n  eventBus.on('shape.move.start', MEDIUM_PRIORITY, function(event) {\n\n    var context = event.context,\n        validatedShapes = context.validatedShapes,\n        canExecute;\n\n    canExecute = context.canExecute = canMove(validatedShapes);\n\n    // check if we can move the elements\n    if (!canExecute) {\n      return false;\n    }\n  });\n\n  // assign a low priority to this handler\n  // to let others modify the move event before we update\n  // the context\n  //\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        validatedShapes = context.validatedShapes,\n        hover = event.hover,\n        delta = { x: event.dx, y: event.dy },\n        position = { x: event.x, y: event.y },\n        canExecute;\n\n    // check if we can move the elements\n    canExecute = canMove(validatedShapes, delta, position, hover);\n\n    context.delta = delta;\n    context.canExecute = canExecute;\n\n    // simply ignore move over\n    if (canExecute === null) {\n      context.target = null;\n\n      return;\n    }\n\n    context.target = hover;\n  });\n\n  eventBus.on('shape.move.end', function(event) {\n\n    var context = event.context;\n\n    var delta = context.delta,\n        canExecute = context.canExecute,\n        isAttach = canExecute === 'attach',\n        shapes = context.shapes;\n\n    if (canExecute === false) {\n      return false;\n    }\n\n    // ensure we have actual pixel values deltas\n    // (important when zoom level was > 1 during move)\n    delta.x = round(delta.x);\n    delta.y = round(delta.y);\n\n    if (delta.x === 0 && delta.y === 0) {\n\n      // didn't move\n      return;\n    }\n\n    modeling.moveElements(shapes, delta, context.target, {\n      primaryShape: context.shape,\n      attach: isAttach\n    });\n  });\n\n\n  // move activation\n\n  eventBus.on('element.mousedown', function(event) {\n\n    var originalEvent = getOriginalEvent(event);\n\n    if (!originalEvent) {\n      throw new Error('must supply DOM mousedown event');\n    }\n\n    return start(originalEvent, event.element);\n  });\n\n  /**\n   * Start move.\n   *\n   * @param {MouseEvent} event\n   * @param {djs.model.Shape} shape\n   * @param {boolean} [activate]\n   * @param {Object} [context]\n   */\n  function start(event, element, activate, context) {\n    if (isObject(activate)) {\n      context = activate;\n      activate = false;\n    }\n\n    // do not move connections or the root element\n    if (element.waypoints || !element.parent) {\n      return;\n    }\n\n    var referencePoint = mid(element);\n\n    dragging.init(event, referencePoint, 'shape.move', {\n      cursor: 'grabbing',\n      autoActivate: activate,\n      data: {\n        shape: element,\n        context: context || {}\n      }\n    });\n\n    // we've handled the event\n    return true;\n  }\n\n  // API\n\n  this.start = start;\n}\n\nMoveEvents.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'selection',\n  'rules'\n];\n\n\n/**\n * Return a filtered list of elements that do not contain\n * those nested into others.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeNested(elements) {\n\n  var ids = groupBy(elements, 'id');\n\n  return filter(elements, function(element) {\n    while ((element = element.parent)) {\n\n      // parent in selection\n      if (ids[element.id]) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n","import {\n  flatten,\n  forEach,\n  filter,\n  find,\n  groupBy,\n  map,\n  matchPattern,\n  size\n} from 'min-dash';\n\nimport {\n  selfAndAllChildren\n} from '../../util/Elements';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport { translate } from '../../util/SvgTransformUtil';\n\nvar LOW_PRIORITY = 499;\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_OK = 'drop-ok',\n    MARKER_NOT_OK = 'drop-not-ok',\n    MARKER_NEW_PARENT = 'new-parent',\n    MARKER_ATTACH = 'attach-ok';\n\n\n/**\n * Provides previews for moving shapes when moving.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function MovePreview(\n    eventBus, canvas, styles, previewSupport) {\n\n  function getVisualDragShapes(shapes) {\n    var elements = getAllDraggedElements(shapes);\n\n    var filteredElements = removeEdges(elements);\n\n    return filteredElements;\n  }\n\n  function getAllDraggedElements(shapes) {\n    var allShapes = selfAndAllChildren(shapes, true);\n\n    var allConnections = map(allShapes, function(shape) {\n      return (shape.incoming || []).concat(shape.outgoing || []);\n    });\n\n    return flatten(allShapes.concat(allConnections));\n  }\n\n  /**\n   * Sets drop marker on an element.\n   */\n  function setMarker(element, marker) {\n\n    [ MARKER_ATTACH, MARKER_OK, MARKER_NOT_OK, MARKER_NEW_PARENT ].forEach(function(m) {\n\n      if (m === marker) {\n        canvas.addMarker(element, m);\n      } else {\n        canvas.removeMarker(element, m);\n      }\n    });\n  }\n\n  /**\n   * Make an element draggable.\n   *\n   * @param {Object} context\n   * @param {djs.model.Base} element\n   * @param {Boolean} addMarker\n   */\n  function makeDraggable(context, element, addMarker) {\n\n    previewSupport.addDragger(element, context.dragGroup);\n\n    if (addMarker) {\n      canvas.addMarker(element, MARKER_DRAGGING);\n    }\n\n    if (context.allDraggedElements) {\n      context.allDraggedElements.push(element);\n    } else {\n      context.allDraggedElements = [ element ];\n    }\n  }\n\n  // assign a low priority to this handler\n  // to let others modify the move context before\n  // we draw things\n  eventBus.on('shape.move.start', LOW_PRIORITY, function(event) {\n    var context = event.context,\n        dragShapes = context.shapes,\n        allDraggedElements = context.allDraggedElements;\n\n    var visuallyDraggedShapes = getVisualDragShapes(dragShapes);\n\n    if (!context.dragGroup) {\n      var dragGroup = svgCreate('g');\n\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      var defaultLayer = canvas.getDefaultLayer();\n\n      svgAppend(defaultLayer, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    // add previews\n    visuallyDraggedShapes.forEach(function(shape) {\n      previewSupport.addDragger(shape, context.dragGroup);\n    });\n\n    // cache all dragged elements / gfx\n    // so that we can quickly undo their state changes later\n    if (!allDraggedElements) {\n      allDraggedElements = getAllDraggedElements(dragShapes);\n    } else {\n      allDraggedElements = flatten([\n        allDraggedElements,\n        getAllDraggedElements(dragShapes)\n      ]);\n    }\n\n    // add dragging marker\n    forEach(allDraggedElements, function(e) {\n      canvas.addMarker(e, MARKER_DRAGGING);\n    });\n\n    context.allDraggedElements = allDraggedElements;\n\n    // determine, if any of the dragged elements have different parents\n    context.differentParents = haveDifferentParents(dragShapes);\n  });\n\n  // update previews\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        dragGroup = context.dragGroup,\n        target = context.target,\n        parent = context.shape.parent,\n        canExecute = context.canExecute;\n\n    if (target) {\n      if (canExecute === 'attach') {\n        setMarker(target, MARKER_ATTACH);\n      } else if (context.canExecute && target && target.id !== parent.id) {\n        setMarker(target, MARKER_NEW_PARENT);\n      } else {\n        setMarker(target, context.canExecute ? MARKER_OK : MARKER_NOT_OK);\n      }\n    }\n\n    translate(dragGroup, event.dx, event.dy);\n  });\n\n  eventBus.on([ 'shape.move.out', 'shape.move.cleanup' ], function(event) {\n    var context = event.context,\n        target = context.target;\n\n    if (target) {\n      setMarker(target, null);\n    }\n  });\n\n  // remove previews\n  eventBus.on('shape.move.cleanup', function(event) {\n\n    var context = event.context,\n        allDraggedElements = context.allDraggedElements,\n        dragGroup = context.dragGroup;\n\n\n    // remove dragging marker\n    forEach(allDraggedElements, function(e) {\n      canvas.removeMarker(e, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(dragGroup);\n    }\n  });\n\n\n  // API //////////////////////\n\n  /**\n   * Make an element draggable.\n   *\n   * @param {Object} context\n   * @param {djs.model.Base} element\n   * @param {Boolean} addMarker\n   */\n  this.makeDraggable = makeDraggable;\n}\n\nMovePreview.$inject = [\n  'eventBus',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n\n\n// helpers //////////////////////\n\n/**\n * returns elements minus all connections\n * where source or target is not elements\n */\nfunction removeEdges(elements) {\n\n  var filteredElements = filter(elements, function(element) {\n\n    if (!isConnection(element)) {\n      return true;\n    } else {\n\n      return (\n        find(elements, matchPattern({ id: element.source.id })) &&\n        find(elements, matchPattern({ id: element.target.id }))\n      );\n    }\n  });\n\n  return filteredElements;\n}\n\nfunction haveDifferentParents(elements) {\n  return size(groupBy(elements, function(e) { return e.parent && e.parent.id; })) !== 1;\n}\n\n/**\n * Checks if an element is a connection.\n */\nfunction isConnection(element) {\n  return element.waypoints;\n}\n","import InteractionEventsModule from '../interaction-events';\nimport SelectionModule from '../selection';\nimport OutlineModule from '../outline';\nimport RulesModule from '../rules';\nimport DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\n\nimport Move from './Move';\nimport MovePreview from './MovePreview';\n\nexport default {\n  __depends__: [\n    InteractionEventsModule,\n    SelectionModule,\n    OutlineModule,\n    RulesModule,\n    DraggingModule,\n    PreviewSupportModule\n  ],\n  __init__: [\n    'move',\n    'movePreview'\n  ],\n  move: [ 'type', Move ],\n  movePreview: [ 'type', MovePreview ]\n};\n","import {\n  isFunction,\n  isArray,\n  forEach\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  attr as domAttr,\n  clear as domClear,\n  classes as domClasses,\n  matches as domMatches,\n  delegate as domDelegate,\n  event as domEvent\n} from 'min-dom';\n\n\nvar TOGGLE_SELECTOR = '.djs-palette-toggle',\n    ENTRY_SELECTOR = '.entry',\n    ELEMENT_SELECTOR = TOGGLE_SELECTOR + ', ' + ENTRY_SELECTOR;\n\nvar PALETTE_OPEN_CLS = 'open',\n    PALETTE_TWO_COLUMN_CLS = 'two-column';\n\n\n/**\n * A palette containing modeling elements.\n */\nexport default function Palette(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  this._providers = [];\n\n  var self = this;\n\n  eventBus.on('tool-manager.update', function(event) {\n    var tool = event.tool;\n\n    self.updateToolHighlight(tool);\n  });\n\n  eventBus.on('i18n.changed', function() {\n    self._update();\n  });\n\n  eventBus.on('diagram.init', function() {\n\n    self._diagramInitialized = true;\n\n    // initialize + update once diagram is ready\n    if (self._providers.length) {\n      self._init();\n\n      self._update();\n    }\n  });\n}\n\nPalette.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Register a provider with the palette\n *\n * @param  {PaletteProvider} provider\n */\nPalette.prototype.registerProvider = function(provider) {\n  this._providers.push(provider);\n\n  // postpone init / update until diagram is initialized\n  if (!this._diagramInitialized) {\n    return;\n  }\n\n  if (!this._container) {\n    this._init();\n  }\n\n  this._update();\n};\n\n\n/**\n * Returns the palette entries for a given element\n *\n * @return {Array<PaletteEntryDescriptor>} list of entries\n */\nPalette.prototype.getEntries = function() {\n\n  var entries = {};\n\n  // loop through all providers and their entries.\n  // group entries by id so that overriding an entry is possible\n  forEach(this._providers, function(provider) {\n    var e = provider.getPaletteEntries();\n\n    forEach(e, function(entry, id) {\n      entries[id] = entry;\n    });\n  });\n\n  return entries;\n};\n\n/**\n * Initialize\n */\nPalette.prototype._init = function() {\n  var self = this;\n\n  var eventBus = this._eventBus;\n\n  var parentContainer = this._getParentContainer();\n\n  var container = this._container = domify(Palette.HTML_MARKUP);\n\n  parentContainer.appendChild(container);\n\n  domDelegate.bind(container, ELEMENT_SELECTOR, 'click', function(event) {\n\n    var target = event.delegateTarget;\n\n    if (domMatches(target, TOGGLE_SELECTOR)) {\n      return self.toggle();\n    }\n\n    self.trigger('click', event);\n  });\n\n  // prevent drag propagation\n  domEvent.bind(container, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  // prevent drag propagation\n  domDelegate.bind(container, ENTRY_SELECTOR, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  eventBus.on('canvas.resized', this._layoutChanged, this);\n\n  eventBus.fire('palette.create', {\n    container: container\n  });\n};\n\n/**\n * Update palette state.\n *\n * @param  {Object} [state] { open, twoColumn }\n */\nPalette.prototype._toggleState = function(state) {\n\n  state = state || {};\n\n  var parent = this._getParentContainer(),\n      container = this._container;\n\n  var eventBus = this._eventBus;\n\n  var twoColumn;\n\n  var cls = domClasses(container);\n\n  if ('twoColumn' in state) {\n    twoColumn = state.twoColumn;\n  } else {\n    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});\n  }\n\n  // always update two column\n  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);\n\n  if ('open' in state) {\n    cls.toggle(PALETTE_OPEN_CLS, state.open);\n  }\n\n  eventBus.fire('palette.changed', {\n    twoColumn: twoColumn,\n    open: this.isOpen()\n  });\n};\n\nPalette.prototype._update = function() {\n\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\n      entries = this._entries = this.getEntries();\n\n  domClear(entriesContainer);\n\n  forEach(entries, function(entry, id) {\n\n    var grouping = entry.group || 'default';\n\n    var container = domQuery('[data-group=' + grouping + ']', entriesContainer);\n    if (!container) {\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\n      entriesContainer.appendChild(container);\n    }\n\n    var html = entry.html || (\n      entry.separator ?\n        '<hr class=\"separator\" />' :\n        '<div class=\"entry\" draggable=\"true\"></div>');\n\n\n    var control = domify(html);\n    container.appendChild(control);\n\n    if (!entry.separator) {\n      domAttr(control, 'data-action', id);\n\n      if (entry.title) {\n        domAttr(control, 'title', entry.title);\n      }\n\n      if (entry.className) {\n        addClasses(control, entry.className);\n      }\n\n      if (entry.imageUrl) {\n        control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\n      }\n    }\n  });\n\n  // open after update\n  this.open();\n};\n\n\n/**\n * Trigger an action available on the palette\n *\n * @param  {String} action\n * @param  {Event} event\n */\nPalette.prototype.trigger = function(action, event, autoActivate) {\n  var entries = this._entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n\n  // when user clicks on the palette and not on an action\n  if (!entry) {\n    return;\n  }\n\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      handler(originalEvent, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      handler[action](originalEvent, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\nPalette.prototype._layoutChanged = function() {\n  this._toggleState({});\n};\n\n/**\n * Do we need to collapse to two columns?\n *\n * @param {Number} availableHeight\n * @param {Object} entries\n *\n * @return {Boolean}\n */\nPalette.prototype._needsCollapse = function(availableHeight, entries) {\n\n  // top margin + bottom toggle + bottom margin\n  // implementors must override this method if they\n  // change the palette styles\n  var margin = 20 + 10 + 20;\n\n  var entriesHeight = Object.keys(entries).length * 46;\n\n  return availableHeight < entriesHeight + margin;\n};\n\n/**\n * Close the palette\n */\nPalette.prototype.close = function() {\n\n  this._toggleState({\n    open: false,\n    twoColumn: false\n  });\n};\n\n\n/**\n * Open the palette\n */\nPalette.prototype.open = function() {\n  this._toggleState({ open: true });\n};\n\n\nPalette.prototype.toggle = function(open) {\n  if (this.isOpen()) {\n    this.close();\n  } else {\n    this.open();\n  }\n};\n\nPalette.prototype.isActiveTool = function(tool) {\n  return tool && this._activeTool === tool;\n};\n\nPalette.prototype.updateToolHighlight = function(name) {\n  var entriesContainer,\n      toolsContainer;\n\n  if (!this._toolsContainer) {\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\n\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\n  }\n\n  toolsContainer = this._toolsContainer;\n\n  forEach(toolsContainer.children, function(tool) {\n    var actionName = tool.getAttribute('data-action');\n\n    if (!actionName) {\n      return;\n    }\n\n    var toolClasses = domClasses(tool);\n\n    actionName = actionName.replace('-tool', '');\n\n    if (toolClasses.contains('entry') && actionName === name) {\n      toolClasses.add('highlighted-entry');\n    } else {\n      toolClasses.remove('highlighted-entry');\n    }\n  });\n};\n\n\n/**\n * Return true if the palette is opened.\n *\n * @example\n *\n * palette.open();\n *\n * if (palette.isOpen()) {\n *   // yes, we are open\n * }\n *\n * @return {boolean} true if palette is opened\n */\nPalette.prototype.isOpen = function() {\n  return domClasses(this._container).has(PALETTE_OPEN_CLS);\n};\n\n/**\n * Get container the palette lives in.\n *\n * @return {Element}\n */\nPalette.prototype._getParentContainer = function() {\n  return this._canvas.getContainer();\n};\n\n\n/* markup definition */\n\nPalette.HTML_MARKUP =\n  '<div class=\"djs-palette\">' +\n    '<div class=\"djs-palette-entries\"></div>' +\n    '<div class=\"djs-palette-toggle\"></div>' +\n  '</div>';\n\n\n// helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}\n","import Palette from './Palette';\n\nexport default {\n  __init__: [ 'palette' ],\n  palette: [ 'type', Palette ]\n};\n","import {\n  filter,\n  isNumber\n} from 'min-dash';\n\nvar max = Math.max,\n    min = Math.min;\n\nvar DEFAULT_CHILD_BOX_PADDING = 20;\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport {\n  asTRBL,\n  asBounds\n} from '../../layout/LayoutUtil';\n\n\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {String} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\nexport function resizeBounds(bounds, direction, delta) {\n\n  var dx = delta.x,\n      dy = delta.y;\n\n  switch (direction) {\n\n  case 'nw':\n    return {\n      x: bounds.x + dx,\n      y: bounds.y + dy,\n      width: bounds.width - dx,\n      height: bounds.height - dy\n    };\n\n  case 'sw':\n    return {\n      x: bounds.x + dx,\n      y: bounds.y,\n      width: bounds.width - dx,\n      height: bounds.height + dy\n    };\n\n  case 'ne':\n    return {\n      x: bounds.x,\n      y: bounds.y + dy,\n      width: bounds.width + dx,\n      height: bounds.height - dy\n    };\n\n  case 'se':\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width + dx,\n      height: bounds.height + dy\n    };\n\n  default:\n    throw new Error('unrecognized direction: ' + direction);\n  }\n}\n\n\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\n\n\nexport function reattachPoint(bounds, newBounds, point) {\n\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n\n  return {\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\n  };\n}\n\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\n\n\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n\n  var currentBox = asTRBL(currentBounds);\n\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n\n\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\nfunction isBBoxChild(element) {\n\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  }\n\n  // exclude labels\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {Number|Object} padding\n *\n * @return {Bounds}\n */\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n\n  var elements;\n\n  // compute based on shape\n  if (shapeOrChildren.length === undefined) {\n\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}\n","import {\n  pick,\n  assign\n} from 'min-dash';\n\nimport {\n  resizeBounds,\n  ensureConstraints,\n  computeChildrenBBox,\n  getMinResizeBounds\n} from './ResizeUtil';\n\nimport {\n  asTRBL,\n  roundBounds\n} from '../../layout/LayoutUtil';\n\nvar DEFAULT_MIN_WIDTH = 10;\n\n\n/**\n * A component that provides resizing of shapes on the canvas.\n *\n * The following components are part of shape resize:\n *\n *  * adding resize handles,\n *  * creating a visual during resize\n *  * checking resize rules\n *  * committing a change once finished\n *\n *\n * ## Customizing\n *\n * It's possible to customize the resizing behaviour by intercepting 'resize.start'\n * and providing the following parameters through the 'context':\n *\n *   * minDimensions ({ width, height }): minimum shape dimensions\n *\n *   * childrenBoxPadding ({ left, top, bottom, right } || number):\n *     gap between the minimum bounding box and the container\n *\n * f.ex:\n *\n * ```javascript\n * eventBus.on('resize.start', 1500, function(event) {\n *   var context = event.context,\n *\n *  context.minDimensions = { width: 140, height: 120 };\n *\n *  // Passing general padding\n *  context.childrenBoxPadding = 30;\n *\n *  // Passing padding to a specific side\n *  context.childrenBoxPadding.left = 20;\n * });\n * ```\n */\nexport default function Resize(eventBus, rules, modeling, dragging) {\n\n  this._dragging = dragging;\n  this._rules = rules;\n\n  var self = this;\n\n\n  /**\n   * Handle resize move by specified delta.\n   *\n   * @param {Object} context\n   * @param {Point} delta\n   */\n  function handleMove(context, delta) {\n\n    var shape = context.shape,\n        direction = context.direction,\n        resizeConstraints = context.resizeConstraints,\n        newBounds;\n\n    context.delta = delta;\n\n    newBounds = resizeBounds(shape, direction, delta);\n\n    // ensure constraints during resize\n    context.newBounds = ensureConstraints(newBounds, resizeConstraints);\n\n    // update + cache executable state\n    context.canExecute = self.canResize(context);\n  }\n\n  /**\n   * Handle resize start.\n   *\n   * @param  {Object} context\n   */\n  function handleStart(context) {\n\n    var resizeConstraints = context.resizeConstraints,\n\n        // evaluate minBounds for backwards compatibility\n        minBounds = context.minBounds;\n\n    if (resizeConstraints !== undefined) {\n      return;\n    }\n\n    if (minBounds === undefined) {\n      minBounds = self.computeMinResizeBox(context);\n    }\n\n    context.resizeConstraints = {\n      min: asTRBL(minBounds)\n    };\n  }\n\n  /**\n   * Handle resize end.\n   *\n   * @param  {Object} context\n   */\n  function handleEnd(context) {\n    var shape = context.shape,\n        canExecute = context.canExecute,\n        newBounds = context.newBounds;\n\n    if (canExecute) {\n\n      // ensure we have actual pixel values for new bounds\n      // (important when zoom level was > 1 during move)\n      newBounds = roundBounds(newBounds);\n\n      if (!boundsChanged(shape, newBounds)) {\n\n        // no resize necessary\n        return;\n      }\n\n      // perform the actual resize\n      modeling.resizeShape(shape, newBounds);\n    }\n  }\n\n\n  eventBus.on('resize.start', function(event) {\n    handleStart(event.context);\n  });\n\n  eventBus.on('resize.move', function(event) {\n    var delta = {\n      x: event.dx,\n      y: event.dy\n    };\n\n    handleMove(event.context, delta);\n  });\n\n  eventBus.on('resize.end', function(event) {\n    handleEnd(event.context);\n  });\n\n}\n\n\nResize.prototype.canResize = function(context) {\n  var rules = this._rules;\n\n  var ctx = pick(context, [ 'newBounds', 'shape', 'delta', 'direction' ]);\n\n  return rules.allowed('shape.resize', ctx);\n};\n\n/**\n * Activate a resize operation.\n *\n * You may specify additional contextual information and must specify a\n * resize direction during activation of the resize event.\n *\n * @param {MouseEvent} event\n * @param {djs.model.Shape} shape\n * @param {Object|String} contextOrDirection\n */\nResize.prototype.activate = function(event, shape, contextOrDirection) {\n  var dragging = this._dragging,\n      context,\n      direction;\n\n  if (typeof contextOrDirection === 'string') {\n    contextOrDirection = {\n      direction: contextOrDirection\n    };\n  }\n\n  context = assign({ shape: shape }, contextOrDirection);\n\n  direction = context.direction;\n\n  if (!direction) {\n    throw new Error('must provide a direction (nw|se|ne|sw)');\n  }\n\n  var referencePoint = {\n    x: /w/.test(direction) ? shape.x : shape.x + shape.width,\n    y: /n/.test(direction) ? shape.y : shape.y + shape.height\n  };\n\n  dragging.init(event, referencePoint, 'resize', {\n    autoActivate: true,\n    cursor: 'resize-' + (/nw|se/.test(direction) ? 'nwse' : 'nesw'),\n    data: {\n      shape: shape,\n      context: context\n    }\n  });\n};\n\nResize.prototype.computeMinResizeBox = function(context) {\n  var shape = context.shape,\n      direction = context.direction,\n      minDimensions,\n      childrenBounds;\n\n  minDimensions = context.minDimensions || {\n    width: DEFAULT_MIN_WIDTH,\n    height: DEFAULT_MIN_WIDTH\n  };\n\n  // get children bounds\n  childrenBounds = computeChildrenBBox(shape, context.childrenBoxPadding);\n\n  // get correct minimum bounds from given resize direction\n  // basically ensures that the minBounds is max(childrenBounds, minDimensions)\n  return getMinResizeBounds(direction, shape, minDimensions, childrenBounds);\n};\n\n\nResize.$inject = [\n  'eventBus',\n  'rules',\n  'modeling',\n  'dragging'\n];\n\n// helpers //////////\n\nfunction boundsChanged(shape, newBounds) {\n  return shape.x !== newBounds.x ||\n    shape.y !== newBounds.y ||\n    shape.width !== newBounds.width ||\n    shape.height !== newBounds.height;\n}","var MARKER_RESIZING = 'djs-resizing',\n    MARKER_RESIZE_NOT_OK = 'resize-not-ok';\n\nvar LOW_PRIORITY = 500;\n\nimport {\n  attr as svgAttr,\n  remove as svgRemove,\n  classes as svgClasses\n} from 'tiny-svg';\n\n\n/**\n * Provides previews for resizing shapes when resizing.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {PreviewSupport} previewSupport\n */\nexport default function ResizePreview(eventBus, canvas, previewSupport) {\n\n  /**\n   * Update resizer frame.\n   *\n   * @param {Object} context\n   */\n  function updateFrame(context) {\n\n    var shape = context.shape,\n        bounds = context.newBounds,\n        frame = context.frame;\n\n    if (!frame) {\n      frame = context.frame = previewSupport.addFrame(shape, canvas.getDefaultLayer());\n\n      canvas.addMarker(shape, MARKER_RESIZING);\n    }\n\n    if (bounds.width > 5) {\n      svgAttr(frame, { x: bounds.x, width: bounds.width });\n    }\n\n    if (bounds.height > 5) {\n      svgAttr(frame, { y: bounds.y, height: bounds.height });\n    }\n\n    if (context.canExecute) {\n      svgClasses(frame).remove(MARKER_RESIZE_NOT_OK);\n    } else {\n      svgClasses(frame).add(MARKER_RESIZE_NOT_OK);\n    }\n  }\n\n  /**\n   * Remove resizer frame.\n   *\n   * @param {Object} context\n   */\n  function removeFrame(context) {\n    var shape = context.shape,\n        frame = context.frame;\n\n    if (frame) {\n      svgRemove(context.frame);\n    }\n\n    canvas.removeMarker(shape, MARKER_RESIZING);\n  }\n\n  // add and update previews\n  eventBus.on('resize.move', LOW_PRIORITY, function(event) {\n    updateFrame(event.context);\n  });\n\n  // remove previews\n  eventBus.on('resize.cleanup', function(event) {\n    removeFrame(event.context);\n  });\n\n}\n\nResizePreview.$inject = [\n  'eventBus',\n  'canvas',\n  'previewSupport'\n];","import {\n  bind,\n  forEach\n} from 'min-dash';\n\nvar HANDLE_OFFSET = -2,\n    HANDLE_SIZE = 5,\n    HANDLE_HIT_SIZE = 20;\n\nvar CLS_RESIZER = 'djs-resizer';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  clear as svgClear,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  isPrimaryButton\n} from '../../util/Mouse';\n\nimport {\n  asTRBL\n} from '../../layout/LayoutUtil';\n\nimport {\n  transform\n} from '../../util/SvgTransformUtil';\n\n\n/**\n * This component is responsible for adding resize handles.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {Selection} selection\n * @param {Resize} resize\n */\nexport default function ResizeHandles(eventBus, canvas, selection, resize) {\n\n  this._resize = resize;\n  this._canvas = canvas;\n\n  var self = this;\n\n  eventBus.on('selection.changed', function(e) {\n    var newSelection = e.newSelection;\n\n    // remove old selection markers\n    self.removeResizers();\n\n    // add new selection markers ONLY if single selection\n    if (newSelection.length === 1) {\n      forEach(newSelection, bind(self.addResizer, self));\n    }\n  });\n\n  eventBus.on('shape.changed', function(e) {\n    var shape = e.element;\n\n    if (selection.isSelected(shape)) {\n      self.removeResizers();\n\n      self.addResizer(shape);\n    }\n  });\n}\n\n\nResizeHandles.prototype.makeDraggable = function(element, gfx, direction) {\n  var resize = this._resize;\n\n  function startResize(event) {\n\n    // only trigger on left mouse button\n    if (isPrimaryButton(event)) {\n      resize.activate(event, element, direction);\n    }\n  }\n\n  domEvent.bind(gfx, 'mousedown', startResize);\n  domEvent.bind(gfx, 'touchstart', startResize);\n};\n\n\nResizeHandles.prototype._createResizer = function(element, x, y, rotation, direction) {\n  var resizersParent = this._getResizersParent();\n\n  var group = svgCreate('g');\n  svgClasses(group).add(CLS_RESIZER);\n  svgClasses(group).add(CLS_RESIZER + '-' + element.id);\n  svgClasses(group).add(CLS_RESIZER + '-' + direction);\n\n  svgAppend(resizersParent, group);\n\n  var origin = -HANDLE_SIZE + HANDLE_OFFSET;\n\n  // Create four drag indicators on the outline\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: origin,\n    y: origin,\n    width: HANDLE_SIZE,\n    height: HANDLE_SIZE\n  });\n  svgClasses(visual).add(CLS_RESIZER + '-visual');\n\n  svgAppend(group, visual);\n\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: origin,\n    y: origin,\n    width: HANDLE_HIT_SIZE,\n    height: HANDLE_HIT_SIZE\n  });\n  svgClasses(hit).add(CLS_RESIZER + '-hit');\n\n  svgAppend(group, hit);\n\n  transform(group, x, y, rotation);\n\n  return group;\n};\n\nResizeHandles.prototype.createResizer = function(element, direction) {\n  var resizer;\n\n  var trbl = asTRBL(element);\n\n  if (direction === 'nw') {\n    resizer = this._createResizer(element, trbl.left, trbl.top, 0, direction);\n  } else if (direction === 'ne') {\n    resizer = this._createResizer(element, trbl.right, trbl.top, 90, direction);\n  } else if (direction === 'se') {\n    resizer = this._createResizer(element, trbl.right, trbl.bottom, 180, direction);\n  } else {\n    resizer = this._createResizer(element, trbl.left, trbl.bottom, 270, direction);\n  }\n\n  this.makeDraggable(element, resizer, direction);\n};\n\n// resize handles implementation ///////////////////////////////\n\n/**\n * Add resizers for a given element.\n *\n * @param {djs.model.Shape} shape\n */\nResizeHandles.prototype.addResizer = function(shape) {\n  var resize = this._resize;\n\n  if (!resize.canResize({ shape: shape })) {\n    return;\n  }\n\n  this.createResizer(shape, 'nw');\n  this.createResizer(shape, 'ne');\n  this.createResizer(shape, 'se');\n  this.createResizer(shape, 'sw');\n};\n\n/**\n * Remove all resizers\n */\nResizeHandles.prototype.removeResizers = function() {\n  var resizersParent = this._getResizersParent();\n\n  svgClear(resizersParent);\n};\n\nResizeHandles.prototype._getResizersParent = function() {\n  return this._canvas.getLayer('resizers');\n};\n\nResizeHandles.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'resize'\n];\n","import RulesModule from '../rules';\nimport DraggingModule from '../dragging';\nimport PreviewSupportModule from '../preview-support';\n\nimport Resize from './Resize';\nimport ResizePreview from './ResizePreview';\nimport ResizeHandles from './ResizeHandles';\n\nexport default {\n  __depends__: [\n    RulesModule,\n    DraggingModule,\n    PreviewSupportModule\n  ],\n  __init__: [\n    'resize',\n    'resizePreview',\n    'resizeHandles'\n  ],\n  resize: [ 'type', Resize ],\n  resizePreview: [ 'type', ResizePreview ],\n  resizeHandles: [ 'type', ResizeHandles ]\n};\n","/**\n * Get the logarithm of x with base 10\n * @param  {Integer} value\n */\nexport function log10(x) {\n  return Math.log(x) / Math.log(10);\n}\n\nexport { delta as substract } from './PositionUtil';\n","import {\n  log10\n} from '../../util/Math';\n\n/**\n * Get step size for given range and number of steps.\n *\n * @param {Object} range\n * @param {number} range.min\n * @param {number} range.max\n */\nexport function getStepSize(range, steps) {\n\n  var minLinearRange = log10(range.min),\n      maxLinearRange = log10(range.max);\n\n  var absoluteLinearRange = Math.abs(minLinearRange) + Math.abs(maxLinearRange);\n\n  return absoluteLinearRange / steps;\n}\n\nexport function cap(range, scale) {\n  return Math.max(range.min, Math.min(range.max, scale));\n}\n","import {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport {\n  getStepSize,\n  cap\n} from './ZoomUtil';\n\nimport {\n  log10\n} from '../../util/Math';\n\nimport {\n  bind\n} from 'min-dash';\n\nvar sign = Math.sign || function(n) {\n  return n >= 0 ? 1 : -1;\n};\n\nvar RANGE = { min: 0.2, max: 4 },\n    NUM_STEPS = 10;\n\nvar DELTA_THRESHOLD = 0.1;\n\nvar DEFAULT_SCALE = 0.75;\n\n/**\n * An implementation of zooming and scrolling within the\n * {@link Canvas} via the mouse wheel.\n *\n * Mouse wheel zooming / scrolling may be disabled using\n * the {@link toggle(enabled)} method.\n *\n * @param {Object} [config]\n * @param {Boolean} [config.enabled=true] default enabled state\n * @param {Number} [config.scale=.75] scroll sensivity\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function ZoomScroll(config, eventBus, canvas) {\n\n  config = config || {};\n\n  this._enabled = false;\n\n  this._canvas = canvas;\n  this._container = canvas._container;\n\n  this._handleWheel = bind(this._handleWheel, this);\n\n  this._totalDelta = 0;\n  this._scale = config.scale || DEFAULT_SCALE;\n\n  var self = this;\n\n  eventBus.on('canvas.init', function(e) {\n    self._init(config.enabled !== false);\n  });\n}\n\nZoomScroll.$inject = [\n  'config.zoomScroll',\n  'eventBus',\n  'canvas'\n];\n\nZoomScroll.prototype.scroll = function scroll(delta) {\n  this._canvas.scroll(delta);\n};\n\n\nZoomScroll.prototype.reset = function reset() {\n  this._canvas.zoom('fit-viewport');\n};\n\n/**\n * Zoom depending on delta.\n *\n * @param {number} delta\n * @param {Object} position\n */\nZoomScroll.prototype.zoom = function zoom(delta, position) {\n\n  // zoom with half the step size of stepZoom\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\n\n  // add until threshold reached\n  this._totalDelta += delta;\n\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\n    this._zoom(delta, position, stepSize);\n\n    // reset\n    this._totalDelta = 0;\n  }\n};\n\n\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\n\n  // event is already handled by '.djs-scrollable'\n  if (domClosest(event.target, '.djs-scrollable', true)) {\n    return;\n  }\n\n  var element = this._container;\n\n  event.preventDefault();\n\n  // pinch to zoom is mapped to wheel + ctrlKey = true\n  // in modern browsers (!)\n\n  var isZoom = event.ctrlKey;\n\n  var isHorizontalScroll = event.shiftKey;\n\n  var factor = -1 * this._scale,\n      delta;\n\n  if (isZoom) {\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\n  } else {\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\n  }\n\n  if (isZoom) {\n    var elementRect = element.getBoundingClientRect();\n\n    var offset = {\n      x: event.clientX - elementRect.left,\n      y: event.clientY - elementRect.top\n    };\n\n    delta = (\n      Math.sqrt(\n        Math.pow(event.deltaY, 2) +\n        Math.pow(event.deltaX, 2)\n      ) * sign(event.deltaY) * factor\n    );\n\n    // zoom in relative to diagram {x,y} coordinates\n    this.zoom(delta, offset);\n  } else {\n\n    if (isHorizontalScroll) {\n      delta = {\n        dx: factor * event.deltaY,\n        dy: 0\n      };\n    } else {\n      delta = {\n        dx: factor * event.deltaX,\n        dy: factor * event.deltaY\n      };\n    }\n\n    this.scroll(delta);\n  }\n};\n\n/**\n * Zoom with fixed step size.\n *\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\n * @param {Object} position\n */\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\n\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\n\n  this._zoom(delta, position, stepSize);\n};\n\n\n/**\n * Zoom in/out given a step size.\n *\n * @param {number} delta\n * @param {Object} position\n * @param {number} stepSize\n */\nZoomScroll.prototype._zoom = function(delta, position, stepSize) {\n  var canvas = this._canvas;\n\n  var direction = delta > 0 ? 1 : -1;\n\n  var currentLinearZoomLevel = log10(canvas.zoom());\n\n  // snap to a proximate zoom step\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\n\n  // increase or decrease one zoom step in the given direction\n  newLinearZoomLevel += stepSize * direction;\n\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\n  // (e.g. 2 for an absolute x2 zoom)\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\n};\n\n\n/**\n * Toggle the zoom scroll ability via mouse wheel.\n *\n * @param  {Boolean} [newEnabled] new enabled state\n */\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\n\n  var element = this._container;\n  var handleWheel = this._handleWheel;\n\n  var oldEnabled = this._enabled;\n\n  if (typeof newEnabled === 'undefined') {\n    newEnabled = !oldEnabled;\n  }\n\n  // only react on actual changes\n  if (oldEnabled !== newEnabled) {\n\n    // add or remove wheel listener based on\n    // changed enabled state\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\n  }\n\n  this._enabled = newEnabled;\n\n  return newEnabled;\n};\n\n\nZoomScroll.prototype._init = function(newEnabled) {\n  this.toggle(newEnabled);\n};\n","import ZoomScroll from './ZoomScroll';\n\nexport default {\n  __init__: [ 'zoomScroll' ],\n  zoomScroll: [ 'type', ZoomScroll ]\n};","/**\n * A example context pad provider.\n */\nexport default function ExampleContextPadProvider(connect, contextPad, modeling) {\n  this._connect = connect;\n  this._modeling = modeling;\n\n  contextPad.registerProvider(this);\n}\n\nExampleContextPadProvider.$inject = [\n  'connect',\n  'contextPad',\n  'modeling'\n];\n\n\nExampleContextPadProvider.prototype.getContextPadEntries = function(element) {\n  var connect = this._connect,\n      modeling = this._modeling;\n\n  function removeElement() {\n    modeling.removeElements([ element ]);\n  }\n\n  function startConnect(event, element, autoActivate) {\n    connect.start(event, element, autoActivate);\n  }\n\n  return {\n    'delete': {\n      group: 'edit',\n      className: 'context-pad-icon-remove',\n      title: 'Remove',\n      action: {\n        click: removeElement,\n        dragstart: removeElement\n      }\n    },\n    'connect': {\n      group: 'edit',\n      className: 'context-pad-icon-connect',\n      title: 'Connect',\n      action: {\n        click: startConnect,\n        dragstart: startConnect\n      }\n    }\n  };\n};","/**\n * A example palette provider.\n */\nexport default function ExamplePaletteProvider(create, elementFactory, lassoTool, palette) {\n  this._create = create;\n  this._elementFactory = elementFactory;\n  this._lassoTool = lassoTool;\n  this._palette = palette;\n\n  palette.registerProvider(this);\n}\n\nExamplePaletteProvider.$inject = [\n  'create',\n  'elementFactory',\n  'lassoTool',\n  'palette'\n];\n\n\nExamplePaletteProvider.prototype.getPaletteEntries = function() {\n  var create = this._create,\n      elementFactory = this._elementFactory,\n      lassoTool = this._lassoTool;\n\n  return {\n    'lasso-tool': {\n      group: 'tools',\n      className: 'palette-icon-lasso-tool',\n      title: 'Activate Lasso Tool',\n      action: {\n        click: function(event) {\n          lassoTool.activateSelection(event);\n        }\n      }\n    },\n    'tool-separator': {\n      group: 'tools',\n      separator: true\n    },\n    'create-shape': {\n      group: 'create',\n      className: 'palette-icon-create-shape',\n      title: 'Create Shape',\n      action: {\n        click: function() {\n          var shape = elementFactory.createShape({\n            width: 100,\n            height: 80\n          });\n\n          create.start(event, shape);\n        }\n      }\n    },\n    'create-frame': {\n      group: 'create',\n      className: 'palette-icon-create-frame',\n      title: 'Create Frame',\n      action: {\n        click: function() {\n          var shape = elementFactory.createShape({\n            width: 300,\n            height: 200,\n            isFrame: true\n          });\n\n          create.start(event, shape);\n        }\n      }\n    }\n  };\n};","import {\n  forEach,\n  isFunction,\n  isArray,\n  isNumber,\n  isObject\n} from 'min-dash';\n\n\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * A utility that can be used to plug-in into the command execution for\n * extension and/or validation.\n *\n * @param {EventBus} eventBus\n *\n * @example\n *\n * import inherits from 'inherits';\n *\n * import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n *\n * function CommandLogger(eventBus) {\n *   CommandInterceptor.call(this, eventBus);\n *\n *   this.preExecute(function(event) {\n *     console.log('command pre-execute', event);\n *   });\n * }\n *\n * inherits(CommandLogger, CommandInterceptor);\n *\n */\nexport default function CommandInterceptor(eventBus) {\n  this._eventBus = eventBus;\n}\n\nCommandInterceptor.$inject = [ 'eventBus' ];\n\nfunction unwrapEvent(fn, that) {\n  return function(event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Register an interceptor for a command execution\n *\n * @param {String|Array<String>} [events] list of commands to register on\n * @param {String} [hook] command hook, i.e. preExecute, executed to listen on\n * @param {Number} [priority] the priority on which to hook into the execution\n * @param {Function} handlerFn interceptor to be invoked with (event)\n * @param {Boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\n *                          listener instead\n * @param {Object} [that] Pass context (`this`) to the handler function\n */\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\n\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n\n  if (!isArray(events)) {\n    events = [ events ];\n  }\n\n  var eventBus = this._eventBus;\n\n  forEach(events, function(event) {\n\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\n\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n\nvar hooks = [\n  'canExecute',\n  'preExecute',\n  'preExecuted',\n  'execute',\n  'executed',\n  'postExecute',\n  'postExecuted',\n  'revert',\n  'reverted'\n];\n\n/*\n * Install hook shortcuts\n *\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\n * which will in term forward to CommandInterceptor#on.\n */\nforEach(hooks, function(hook) {\n\n  /**\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\n   *\n   * A named hook for plugging into the command execution\n   *\n   * @param {String|Array<String>} [events] list of commands to register on\n   * @param {Number} [priority] the priority on which to hook into the execution\n   * @param {Function} handlerFn interceptor to be invoked with (event)\n   * @param {Boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\n   *                          listener instead\n   * @param {Object} [that] Pass context (`this`) to the handler function\n   */\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\n\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n});\n","import inherits from 'inherits';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n/**\n * A basic provider that may be extended to implement modeling rules.\n *\n * Extensions should implement the init method to actually add their custom\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\n *\n * @param {EventBus} eventBus\n */\nexport default function RuleProvider(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.init();\n}\n\nRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(RuleProvider, CommandInterceptor);\n\n\n/**\n * Adds a modeling rule for the given action, implemented through\n * a callback function.\n *\n * The function will receive the modeling specific action context\n * to perform its check. It must return `false` to disallow the\n * action from happening or `true` to allow the action.\n *\n * A rule provider may pass over the evaluation to lower priority\n * rules by returning return nothing (or <code>undefined</code>).\n *\n * @example\n *\n * ResizableRules.prototype.init = function() {\n *\n *   \\/**\n *    * Return `true`, `false` or nothing to denote\n *    * _allowed_, _not allowed_ and _continue evaluating_.\n *    *\\/\n *   this.addRule('shape.resize', function(context) {\n *\n *     var shape = context.shape;\n *\n *     if (!context.newBounds) {\n *       // check general resizability\n *       if (!shape.resizable) {\n *         return false;\n *       }\n *\n *       // not returning anything (read: undefined)\n *       // will continue the evaluation of other rules\n *       // (with lower priority)\n *       return;\n *     } else {\n *       // element must have minimum size of 10*10 points\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\n *     }\n *   });\n * };\n *\n * @param {String|Array<String>} actions the identifier for the modeling action to check\n * @param {Number} [priority] the priority at which this rule is being applied\n * @param {Function} fn the callback function that performs the actual check\n */\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\n\n  var self = this;\n\n  if (typeof actions === 'string') {\n    actions = [ actions ];\n  }\n\n  actions.forEach(function(action) {\n\n    self.canExecute(action, priority, function(context, action, event) {\n      return fn(context);\n    }, true);\n  });\n};\n\n/**\n * Implement this method to add new rules during provider initialization.\n */\nRuleProvider.prototype.init = function() {};","import inherits from 'inherits';\n\nimport RuleProvider from '../../lib/features/rules/RuleProvider';\n\nimport { isFrameElement } from '../../lib/util/Elements';\n\n\nexport default function ExampleRuleProvider(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\n\nExampleRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(ExampleRuleProvider, RuleProvider);\n\n\nExampleRuleProvider.prototype.init = function() {\n  this.addRule('shape.create', function(context) {\n    var target = context.target,\n        shape = context.shape;\n\n    return target.parent === shape.target;\n  });\n\n  this.addRule('connection.create', function(context) {\n    var source = context.source,\n        target = context.target;\n\n    return source.parent === target.parent;\n  });\n\n  this.addRule('shape.resize', function(context) {\n    var shape = context.shape;\n\n    return isFrameElement(shape);\n  });\n};","import Diagram from '../..';\n\nimport ConnectModule from '../../lib/features/connect';\nimport ContextPadModule from '../../lib/features/context-pad';\nimport CreateModule from '../../lib/features/create';\nimport LassoToolModule from '../../lib/features/lasso-tool';\nimport ModelingModule from '../../lib/features/modeling';\nimport MoveCanvasModule from '../../lib/navigation/movecanvas';\nimport MoveModule from '../../lib/features/move';\nimport OutlineModule from '../../lib/features/outline';\nimport PaletteModule from '../../lib/features/palette';\nimport ResizeModule from '../../lib/features/resize';\nimport RulesModule from '../../lib/features/rules';\nimport SelectionModule from '../../lib/features/selection';\nimport ZoomScrollModule from '../../lib/navigation/zoomscroll';\n\nimport ExampleContextPadProvider from './ExampleContextPadProvider';\nimport ExamplePaletteProvider from './ExamplePaletteProvider';\nimport ExampleRuleProvider from './ExampleRuleProvider';\n\nvar ExampleModule = {\n  __init__: [\n    'exampleContextPadProvider',\n    'examplePaletteProvider',\n    'exampleRuleProvider'\n  ],\n  exampleContextPadProvider: [ 'type', ExampleContextPadProvider ],\n  examplePaletteProvider: [ 'type', ExamplePaletteProvider ],\n  exampleRuleProvider: [ 'type', ExampleRuleProvider ]\n};\n\nvar container = document.querySelector('#container');\n\nvar diagram = new Diagram({\n  canvas: {\n    container: container\n  },\n  modules: [\n    ConnectModule,\n    ContextPadModule,\n    CreateModule,\n    ExampleModule,\n    LassoToolModule,\n    ModelingModule,\n    MoveCanvasModule,\n    MoveModule,\n    OutlineModule,\n    PaletteModule,\n    ResizeModule,\n    RulesModule,\n    SelectionModule,\n    ZoomScrollModule\n  ]\n});\n\nvar canvas = diagram.get('canvas'),\n    defaultRenderer = diagram.get('defaultRenderer'),\n    elementFactory = diagram.get('elementFactory'),\n    selection = diagram.get('selection');\n\n// override default styles\ndefaultRenderer.CONNECTION_STYLE = { fill: 'none', strokeWidth: 5, stroke: '#000' };\ndefaultRenderer.SHAPE_STYLE = { fill: 'white', stroke: '#000', strokeWidth: 2 };\ndefaultRenderer.FRAME_STYLE = { fill: 'none', stroke: '#000', strokeDasharray: 4, strokeWidth: 2 };\n\n// add root\nvar root = elementFactory.createRoot();\n\ncanvas.setRootElement(root);\n\n// add shapes\nvar shape1 = elementFactory.createShape({\n  x: 150,\n  y: 100,\n  width: 100,\n  height: 80\n});\n\ncanvas.addShape(shape1, root);\n\nvar shape2 = elementFactory.createShape({\n  x: 290,\n  y: 220,\n  width: 100,\n  height: 80\n});\n\ncanvas.addShape(shape2, root);\n\n\nvar connection1 = elementFactory.createConnection({\n  waypoints: [\n    { x: 250, y: 180 },\n    { x: 290, y: 220 }\n  ],\n  source: shape1,\n  target: shape2\n});\n\ncanvas.addConnection(connection1, root);\n\n\nvar shape3 = elementFactory.createShape({\n  x: 450,\n  y: 80,\n  width: 100,\n  height: 80\n});\n\ncanvas.addShape(shape3, root);\n\nvar shape4 = elementFactory.createShape({\n  x: 425,\n  y: 50,\n  width: 300,\n  height: 200,\n  isFrame: true\n});\n\ncanvas.addShape(shape4, root);\n\n\nselection.select(shape3);"],"sourceRoot":""}